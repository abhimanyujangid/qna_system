/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src/middleware"],{

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system%2Fsrc%2Fmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system%2Fsrc%2Fmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _src_middleware_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/middleware.ts */ \"(middleware)/./src/middleware.ts\");\n\n\n// Import the userland code.\n\nconst mod = {\n    ..._src_middleware_ts__WEBPACK_IMPORTED_MODULE_2__\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/src/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nfunction nHandler(opts) {\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRmhvbWUlMkZhYmhpbWFueXVqYW5naWQlMkZEZXNrdG9wJTJGVWRlbXklMkZxbmFfc3lzdGVtJTJGc3JjJTJGbWlkZGxld2FyZS50cyZwYWdlPSUyRnNyYyUyRm1pZGRsZXdhcmUmcm9vdERpcj0lMkZob21lJTJGYWJoaW1hbnl1amFuZ2lkJTJGRGVza3RvcCUyRlVkZW15JTJGcW5hX3N5c3RlbSZtYXRjaGVycz0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQUNpQjtBQUN2RDtBQUM0QztBQUM1QztBQUNBLE9BQU8sK0NBQUk7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxLQUFLO0FBQzVDO0FBQ2U7QUFDZixXQUFXLHFFQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2JmYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci93ZWIvZ2xvYmFsc1wiO1xuaW1wb3J0IHsgYWRhcHRlciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3dlYi9hZGFwdGVyXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyBfbW9kIGZyb20gXCIuL3NyYy9taWRkbGV3YXJlLnRzXCI7XG5jb25zdCBtb2QgPSB7XG4gICAgLi4uX21vZFxufTtcbmNvbnN0IGhhbmRsZXIgPSBtb2QubWlkZGxld2FyZSB8fCBtb2QuZGVmYXVsdDtcbmNvbnN0IHBhZ2UgPSBcIi9zcmMvbWlkZGxld2FyZVwiO1xuaWYgKHR5cGVvZiBoYW5kbGVyICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBNaWRkbGV3YXJlIFwiJHtwYWdlfVwiIG11c3QgZXhwb3J0IGEgXFxgbWlkZGxld2FyZVxcYCBvciBhIFxcYGRlZmF1bHRcXGAgZnVuY3Rpb25gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5IYW5kbGVyKG9wdHMpIHtcbiAgICByZXR1cm4gYWRhcHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGhhbmRsZXJcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlkZGxld2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system%2Fsrc%2Fmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({ name, path, domain, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:__webpack_require__.g},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var __dirname = \"/\";\n(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sYUFBYSxtRUFBbUUsU0FBUyxLQUFLLFNBQVMsTUFBTTtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQix5QkFBeUIseUJBQXlCLFNBQVMsR0FBRyw4Q0FBOEMsb0JBQW9CLHdCQUF3QixxREFBcUQsU0FBUyxZQUFZLGlCQUFpQixrQkFBa0IsWUFBWSxXQUFXLEtBQUssV0FBVyxxQkFBcUIsUUFBUSxTQUFTLDJCQUEyQixvQ0FBb0MsY0FBYyxnQkFBZ0Isb0JBQW9CLHFCQUFxQixTQUFTLDBCQUEwQixZQUFZLGtCQUFrQiwwQkFBMEIsZ0RBQWdELGVBQWUsZ0RBQWdELFdBQVcsa0JBQWtCLCtDQUErQyxjQUFjLG1CQUFtQixpQkFBaUIsMkJBQTJCLGdEQUFnRCxNQUFNLHdCQUF3QixhQUFhLHNCQUFzQixnREFBZ0QsTUFBTSxrQkFBa0IsV0FBVyxvQkFBb0IsOENBQThDLE1BQU0sY0FBYyxjQUFjLDhDQUE4QyxpREFBaUQsTUFBTSxrQ0FBa0MsZUFBZSxNQUFNLFVBQVUsYUFBYSxNQUFNLFFBQVEsZUFBZSx1RUFBdUUsVUFBVSxnQkFBZ0IsaUJBQWlCLE1BQU0sZ0JBQWdCLGNBQWMsTUFBTSxtQkFBbUIsaUJBQWlCLE1BQU0saUJBQWlCLGVBQWUsTUFBTSwyREFBMkQsU0FBUyx3QkFBd0IsSUFBSSxZQUFZLFNBQVMsV0FBVyxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nvb2tpZS9pbmRleC5qcz8zYzAyIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO2lmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgZT17fTsoKCk9Pnt2YXIgcj1lO1xuLyohXG4gKiBjb29raWVcbiAqIENvcHlyaWdodChjKSAyMDEyLTIwMTQgUm9tYW4gU2h0eWxtYW5cbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL3IucGFyc2U9cGFyc2U7ci5zZXJpYWxpemU9c2VyaWFsaXplO3ZhciBpPWRlY29kZVVSSUNvbXBvbmVudDt2YXIgdD1lbmNvZGVVUklDb21wb25lbnQ7dmFyIGE9LzsgKi87dmFyIG49L15bXFx1MDAwOVxcdTAwMjAtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl0rJC87ZnVuY3Rpb24gcGFyc2UoZSxyKXtpZih0eXBlb2YgZSE9PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCBzdHIgbXVzdCBiZSBhIHN0cmluZ1wiKX12YXIgdD17fTt2YXIgbj1yfHx7fTt2YXIgbz1lLnNwbGl0KGEpO3ZhciBzPW4uZGVjb2RlfHxpO2Zvcih2YXIgcD0wO3A8by5sZW5ndGg7cCsrKXt2YXIgZj1vW3BdO3ZhciB1PWYuaW5kZXhPZihcIj1cIik7aWYodTwwKXtjb250aW51ZX12YXIgdj1mLnN1YnN0cigwLHUpLnRyaW0oKTt2YXIgYz1mLnN1YnN0cigrK3UsZi5sZW5ndGgpLnRyaW0oKTtpZignXCInPT1jWzBdKXtjPWMuc2xpY2UoMSwtMSl9aWYodW5kZWZpbmVkPT10W3ZdKXt0W3ZdPXRyeURlY29kZShjLHMpfX1yZXR1cm4gdH1mdW5jdGlvbiBzZXJpYWxpemUoZSxyLGkpe3ZhciBhPWl8fHt9O3ZhciBvPWEuZW5jb2RlfHx0O2lmKHR5cGVvZiBvIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGVuY29kZSBpcyBpbnZhbGlkXCIpfWlmKCFuLnRlc3QoZSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCBuYW1lIGlzIGludmFsaWRcIil9dmFyIHM9byhyKTtpZihzJiYhbi50ZXN0KHMpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgdmFsIGlzIGludmFsaWRcIil9dmFyIHA9ZStcIj1cIitzO2lmKG51bGwhPWEubWF4QWdlKXt2YXIgZj1hLm1heEFnZS0wO2lmKGlzTmFOKGYpfHwhaXNGaW5pdGUoZikpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gbWF4QWdlIGlzIGludmFsaWRcIil9cCs9XCI7IE1heC1BZ2U9XCIrTWF0aC5mbG9vcihmKX1pZihhLmRvbWFpbil7aWYoIW4udGVzdChhLmRvbWFpbikpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZG9tYWluIGlzIGludmFsaWRcIil9cCs9XCI7IERvbWFpbj1cIithLmRvbWFpbn1pZihhLnBhdGgpe2lmKCFuLnRlc3QoYS5wYXRoKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBwYXRoIGlzIGludmFsaWRcIil9cCs9XCI7IFBhdGg9XCIrYS5wYXRofWlmKGEuZXhwaXJlcyl7aWYodHlwZW9mIGEuZXhwaXJlcy50b1VUQ1N0cmluZyE9PVwiZnVuY3Rpb25cIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBleHBpcmVzIGlzIGludmFsaWRcIil9cCs9XCI7IEV4cGlyZXM9XCIrYS5leHBpcmVzLnRvVVRDU3RyaW5nKCl9aWYoYS5odHRwT25seSl7cCs9XCI7IEh0dHBPbmx5XCJ9aWYoYS5zZWN1cmUpe3ArPVwiOyBTZWN1cmVcIn1pZihhLnNhbWVTaXRlKXt2YXIgdT10eXBlb2YgYS5zYW1lU2l0ZT09PVwic3RyaW5nXCI/YS5zYW1lU2l0ZS50b0xvd2VyQ2FzZSgpOmEuc2FtZVNpdGU7c3dpdGNoKHUpe2Nhc2UgdHJ1ZTpwKz1cIjsgU2FtZVNpdGU9U3RyaWN0XCI7YnJlYWs7Y2FzZVwibGF4XCI6cCs9XCI7IFNhbWVTaXRlPUxheFwiO2JyZWFrO2Nhc2VcInN0cmljdFwiOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJub25lXCI6cCs9XCI7IFNhbWVTaXRlPU5vbmVcIjticmVhaztkZWZhdWx0OnRocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZFwiKX19cmV0dXJuIHB9ZnVuY3Rpb24gdHJ5RGVjb2RlKGUscil7dHJ5e3JldHVybiByKGUpfWNhdGNoKHIpe3JldHVybiBlfX19KSgpO21vZHVsZS5leHBvcnRzPWV9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __dirname = \"/\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;(()=>{var i={226:function(i,e){(function(o,a){\"use strict\";var r=\"1.0.35\",t=\"\",n=\"?\",s=\"function\",b=\"undefined\",w=\"object\",l=\"string\",d=\"major\",c=\"model\",u=\"name\",p=\"type\",m=\"vendor\",f=\"version\",h=\"architecture\",v=\"console\",g=\"mobile\",k=\"tablet\",x=\"smarttv\",_=\"wearable\",y=\"embedded\",q=350;var T=\"Amazon\",S=\"Apple\",z=\"ASUS\",N=\"BlackBerry\",A=\"Browser\",C=\"Chrome\",E=\"Edge\",O=\"Firefox\",U=\"Google\",j=\"Huawei\",P=\"LG\",R=\"Microsoft\",M=\"Motorola\",B=\"Opera\",V=\"Samsung\",D=\"Sharp\",I=\"Sony\",W=\"Viera\",F=\"Xiaomi\",G=\"Zebra\",H=\"Facebook\",L=\"Chromium OS\",Z=\"Mac OS\";var extend=function(i,e){var o={};for(var a in i){if(e[a]&&e[a].length%2===0){o[a]=e[a].concat(i[a])}else{o[a]=i[a]}}return o},enumerize=function(i){var e={};for(var o=0;o<i.length;o++){e[i[o].toUpperCase()]=i[o]}return e},has=function(i,e){return typeof i===l?lowerize(e).indexOf(lowerize(i))!==-1:false},lowerize=function(i){return i.toLowerCase()},majorize=function(i){return typeof i===l?i.replace(/[^\\d\\.]/g,t).split(\".\")[0]:a},trim=function(i,e){if(typeof i===l){i=i.replace(/^\\s\\s*/,t);return typeof e===b?i:i.substring(0,q)}};var rgxMapper=function(i,e){var o=0,r,t,n,b,l,d;while(o<e.length&&!l){var c=e[o],u=e[o+1];r=t=0;while(r<c.length&&!l){if(!c[r]){break}l=c[r++].exec(i);if(!!l){for(n=0;n<u.length;n++){d=l[++t];b=u[n];if(typeof b===w&&b.length>0){if(b.length===2){if(typeof b[1]==s){this[b[0]]=b[1].call(this,d)}else{this[b[0]]=b[1]}}else if(b.length===3){if(typeof b[1]===s&&!(b[1].exec&&b[1].test)){this[b[0]]=d?b[1].call(this,d,b[2]):a}else{this[b[0]]=d?d.replace(b[1],b[2]):a}}else if(b.length===4){this[b[0]]=d?b[3].call(this,d.replace(b[1],b[2])):a}}else{this[b]=d?d:a}}}}o+=2}},strMapper=function(i,e){for(var o in e){if(typeof e[o]===w&&e[o].length>0){for(var r=0;r<e[o].length;r++){if(has(e[o][r],i)){return o===n?a:o}}}else if(has(e[o],i)){return o===n?a:o}}return i};var $={\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"},X={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"};var K={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[f,[u,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[f,[u,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[u,f],[/opios[\\/ ]+([\\w\\.]+)/i],[f,[u,B+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[f,[u,B]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(heytap|ovi)browser\\/([\\d\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[u,f],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[f,[u,\"UC\"+A]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[f,[u,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[f,[u,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[f,[u,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[f,[u,\"IE\"]],[/ya(?:search)?browser\\/([\\w\\.]+)/i],[f,[u,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 Secure \"+A],f],[/\\bfocus\\/([\\w\\.]+)/i],[f,[u,O+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[f,[u,B+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[f,[u,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[f,[u,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[f,[u,B+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[f,[u,\"MIUI \"+A]],[/fxios\\/([-\\w\\.]+)/i],[f,[u,O]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[u,\"360 \"+A]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[u,/(.+)/,\"$1 \"+A],f],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[u,/_/g,\" \"],f],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[u,f],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[u],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[u,H],f],[/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,/(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[u,f],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[f,[u,\"GSA\"]],[/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i],[f,[u,\"TikTok\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[f,[u,C+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[u,C+\" WebView\"],f],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[f,[u,\"Android \"+A]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[u,f],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[f,[u,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[f,u],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[u,[f,strMapper,$]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[u,f],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[u,\"Netscape\"],f],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[f,[u,O+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i,/panasonic;(viera)/i],[u,f],[/(cobalt)\\/([\\w\\.]+)/i],[u,[f,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[h,\"amd64\"]],[/(ia32(?=;))/i],[[h,lowerize]],[/((?:i[346]|x)86)[;\\)]/i],[[h,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[h,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[h,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[h,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[h,/ower/,t,lowerize]],[/(sun4\\w)[;\\)]/i],[[h,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[h,lowerize]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[c,[m,V],[p,k]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[c,[m,V],[p,g]],[/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i],[c,[m,S],[p,g]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[c,[m,S],[p,k]],[/(macintosh);/i],[c,[m,S]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[c,[m,D],[p,g]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[c,[m,j],[p,k]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[c,[m,j],[p,g]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,g]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[c,/_/g,\" \"],[m,F],[p,k]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[c,[m,\"OPPO\"],[p,g]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[c,[m,\"Vivo\"],[p,g]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[c,[m,\"Realme\"],[p,g]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[c,[m,M],[p,g]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[c,[m,M],[p,k]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[c,[m,P],[p,k]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[c,[m,P],[p,g]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[c,[m,\"Lenovo\"],[p,k]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[c,/_/g,\" \"],[m,\"Nokia\"],[p,g]],[/(pixel c)\\b/i],[c,[m,U],[p,k]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[c,[m,U],[p,g]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[c,[m,I],[p,g]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[c,\"Xperia Tablet\"],[m,I],[p,k]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[c,[m,\"OnePlus\"],[p,g]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[c,[m,T],[p,k]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[c,/(.+)/g,\"Fire Phone $1\"],[m,T],[p,g]],[/(playbook);[-\\w\\),; ]+(rim)/i],[c,m,[p,k]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[c,[m,N],[p,g]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[c,[m,z],[p,k]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[c,[m,z],[p,g]],[/(nexus 9)/i],[c,[m,\"HTC\"],[p,k]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i],[m,[c,/_/g,\" \"],[p,g]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[c,[m,\"Acer\"],[p,k]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[c,[m,\"Meizu\"],[p,g]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[m,c,[p,g]],[/(kobo)\\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[m,c,[p,k]],[/(surface duo)/i],[c,[m,R],[p,k]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[c,[m,\"Fairphone\"],[p,g]],[/(u304aa)/i],[c,[m,\"AT&T\"],[p,g]],[/\\bsie-(\\w*)/i],[c,[m,\"Siemens\"],[p,g]],[/\\b(rct\\w+) b/i],[c,[m,\"RCA\"],[p,k]],[/\\b(venue[\\d ]{2,7}) b/i],[c,[m,\"Dell\"],[p,k]],[/\\b(q(?:mv|ta)\\w+) b/i],[c,[m,\"Verizon\"],[p,k]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[c,[m,\"Barnes & Noble\"],[p,k]],[/\\b(tm\\d{3}\\w+) b/i],[c,[m,\"NuVision\"],[p,k]],[/\\b(k88) b/i],[c,[m,\"ZTE\"],[p,k]],[/\\b(nx\\d{3}j) b/i],[c,[m,\"ZTE\"],[p,g]],[/\\b(gen\\d{3}) b.+49h/i],[c,[m,\"Swiss\"],[p,g]],[/\\b(zur\\d{3}) b/i],[c,[m,\"Swiss\"],[p,k]],[/\\b((zeki)?tb.*\\b) b/i],[c,[m,\"Zeki\"],[p,k]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[m,\"Dragon Touch\"],c,[p,k]],[/\\b(ns-?\\w{0,9}) b/i],[c,[m,\"Insignia\"],[p,k]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[c,[m,\"NextBook\"],[p,k]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[m,\"Voice\"],c,[p,g]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[m,\"LvTel\"],c,[p,g]],[/\\b(ph-1) /i],[c,[m,\"Essential\"],[p,g]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[c,[m,\"Envizen\"],[p,k]],[/\\b(trio[-\\w\\. ]+) b/i],[c,[m,\"MachSpeed\"],[p,k]],[/\\btu_(1491) b/i],[c,[m,\"Rotor\"],[p,k]],[/(shield[\\w ]+) b/i],[c,[m,\"Nvidia\"],[p,k]],[/(sprint) (\\w+)/i],[m,c,[p,g]],[/(kin\\.[onetw]{3})/i],[[c,/\\./g,\" \"],[m,R],[p,g]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[c,[m,G],[p,k]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[c,[m,G],[p,g]],[/smart-tv.+(samsung)/i],[m,[p,x]],[/hbbtv.+maple;(\\d+)/i],[[c,/^/,\"SmartTV\"],[m,V],[p,x]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[m,P],[p,x]],[/(apple) ?tv/i],[m,[c,S+\" TV\"],[p,x]],[/crkey/i],[[c,C+\"cast\"],[m,U],[p,x]],[/droid.+aft(\\w)( bui|\\))/i],[c,[m,T],[p,x]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[c,[m,D],[p,x]],[/(bravia[\\w ]+)( bui|\\))/i],[c,[m,I],[p,x]],[/(mitv-\\w{5}) bui/i],[c,[m,F],[p,x]],[/Hbbtv.*(technisat) (.*);/i],[m,c,[p,x]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i],[[m,trim],[c,trim],[p,x]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[p,x]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[m,c,[p,v]],[/droid.+; (shield) bui/i],[c,[m,\"Nvidia\"],[p,v]],[/(playstation [345portablevi]+)/i],[c,[m,I],[p,v]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[c,[m,R],[p,v]],[/((pebble))app/i],[m,c,[p,_]],[/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i],[c,[m,S],[p,_]],[/droid.+; (glass) \\d/i],[c,[m,U],[p,_]],[/droid.+; (wt63?0{2,3})\\)/i],[c,[m,G],[p,_]],[/(quest( 2| pro)?)/i],[c,[m,H],[p,_]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[m,[p,y]],[/(aeobc)\\b/i],[c,[m,T],[p,y]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[c,[p,g]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[c,[p,k]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[p,k]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[p,g]],[/(android[-\\w\\. ]{0,9});.+buil/i],[c,[m,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[f,[u,E+\"HTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[f,[u,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,/\\b(libweb)/i],[u,f],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[f,u]],os:[[/microsoft (windows) (vista|xp)/i],[u,f],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[u,[f,strMapper,X]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[u,\"Windows\"],[f,strMapper,X]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/ios;fbsv\\/([\\d\\.]+)/i,/cfnetwork\\/.+darwin/i],[[f,/_/g,\".\"],[u,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[u,Z],[f,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[f,u],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[u,f],[/\\(bb(10);/i],[f,[u,N]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[f,[u,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[f,[u,O+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[f,[u,\"webOS\"]],[/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i],[f,[u,\"watchOS\"]],[/crkey\\/([\\d\\.]+)/i],[f,[u,C+\"cast\"]],[/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i],[[u,L],f],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\\/(\\d+\\.[\\w\\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[u,f],[/(sunos) ?([\\w\\.\\d]*)/i],[[u,\"Solaris\"],f],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\\w\\.]*)/i],[u,f]]};var UAParser=function(i,e){if(typeof i===w){e=i;i=a}if(!(this instanceof UAParser)){return new UAParser(i,e).getResult()}var r=typeof o!==b&&o.navigator?o.navigator:a;var n=i||(r&&r.userAgent?r.userAgent:t);var v=r&&r.userAgentData?r.userAgentData:a;var x=e?extend(K,e):K;var _=r&&r.userAgent==n;this.getBrowser=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.browser);i[d]=majorize(i[f]);if(_&&r&&r.brave&&typeof r.brave.isBrave==s){i[u]=\"Brave\"}return i};this.getCPU=function(){var i={};i[h]=a;rgxMapper.call(i,n,x.cpu);return i};this.getDevice=function(){var i={};i[m]=a;i[c]=a;i[p]=a;rgxMapper.call(i,n,x.device);if(_&&!i[p]&&v&&v.mobile){i[p]=g}if(_&&i[c]==\"Macintosh\"&&r&&typeof r.standalone!==b&&r.maxTouchPoints&&r.maxTouchPoints>2){i[c]=\"iPad\";i[p]=k}return i};this.getEngine=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.engine);return i};this.getOS=function(){var i={};i[u]=a;i[f]=a;rgxMapper.call(i,n,x.os);if(_&&!i[u]&&v&&v.platform!=\"Unknown\"){i[u]=v.platform.replace(/chrome os/i,L).replace(/macos/i,Z)}return i};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return n};this.setUA=function(i){n=typeof i===l&&i.length>q?trim(i,q):i;return this};this.setUA(n);return this};UAParser.VERSION=r;UAParser.BROWSER=enumerize([u,f,d]);UAParser.CPU=enumerize([h]);UAParser.DEVICE=enumerize([c,m,p,v,g,x,k,_,y]);UAParser.ENGINE=UAParser.OS=enumerize([u,f]);if(typeof e!==b){if(\"object\"!==b&&i.exports){e=i.exports=UAParser}e.UAParser=UAParser}else{if(\"function\"===s&&__webpack_require__.amdO){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return UAParser}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}else if(typeof o!==b){o.UAParser=UAParser}}var Q=typeof o!==b&&(o.jQuery||o.Zepto);if(Q&&!Q.ua){var Y=new UAParser;Q.ua=Y.getResult();Q.ua.get=function(){return Y.getUA()};Q.ua.set=function(i){Y.setUA(i);var e=Y.getResult();for(var o in e){Q.ua[o]=e[o]}}}})(typeof window===\"object\"?window:this)}};var e={};function __nccwpck_require__(o){var a=e[o];if(a!==undefined){return a.exports}var r=e[o]={exports:{}};var t=true;try{i[o].call(r.exports,r,r.exports,__nccwpck_require__);t=false}finally{if(t)delete e[o]}return r.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o=__nccwpck_require__(226);module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/server.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/esm/api/server.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.ImageResponse),\n/* harmony export */   NextRequest: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.NextRequest),\n/* harmony export */   NextResponse: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.NextResponse),\n/* harmony export */   URLPattern: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.URLPattern),\n/* harmony export */   userAgent: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.userAgent),\n/* harmony export */   userAgentFromString: () => (/* reexport safe */ _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__.userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/web/exports/index */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js\");\n\n\n//# sourceMappingURL=server.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vYXBpL3NlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTRDOztBQUU1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9hcGkvc2VydmVyLmpzP2UwOTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL3NlcnZlci93ZWIvZXhwb3J0cy9pbmRleFwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/api/server.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_DID_POSTPONE_HEADER: () => (/* binding */ NEXT_DID_POSTPONE_HEADER),\n/* harmony export */   NEXT_ROUTER_PREFETCH_HEADER: () => (/* binding */ NEXT_ROUTER_PREFETCH_HEADER),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_HEADER: () => (/* binding */ RSC_HEADER)\n/* harmony export */ });\nconst RSC_HEADER = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH_HEADER = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC_HEADER\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH_HEADER\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nconst NEXT_DID_POSTPONE_HEADER = \"x-nextjs-postponed\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGFBQWEsTUFBYztBQUNqQyxNQUFNQyxTQUFTLGNBQXNCO0FBRXJDLE1BQU1DLHlCQUF5Qix5QkFBaUM7QUFDaEUsTUFBTUMsOEJBQThCLHVCQUErQjtBQUNuRSxNQUFNQyxXQUFXLFdBQW1CO0FBQ3BDLE1BQU1DLDBCQUEwQixtQkFBMkI7QUFFM0QsTUFBTUMsb0JBQW9CO0lBQy9CO1FBQUNOO0tBQVc7SUFDWjtRQUFDRTtLQUF1QjtJQUN4QjtRQUFDQztLQUE0QjtDQUM5QixDQUFTO0FBRUgsTUFBTUksdUJBQXVCLE9BQWU7QUFFNUMsTUFBTUMsMkJBQTJCLHFCQUE2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy50cz9mOTRlIl0sIm5hbWVzIjpbIlJTQ19IRUFERVIiLCJBQ1RJT04iLCJORVhUX1JPVVRFUl9TVEFURV9UUkVFIiwiTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSIiwiTkVYVF9VUkwiLCJSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiIsIkZMSUdIVF9QQVJBTUVURVJTIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiLCJORVhUX0RJRF9QT1NUUE9ORV9IRUFERVIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getExpectedRequestStore: () => (/* binding */ getExpectedRequestStore),\n/* harmony export */   requestAsyncStorage: () => (/* reexport safe */ _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage-instance */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n\nfunction getExpectedRequestStore(callingExpression) {\n    const store = _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (store) return store;\n    throw new Error(\"`\" + callingExpression + \"` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context\");\n} //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBUUU7QUFDb0U7QUFnQnhDO0FBRXZCLFNBQVNDLHdCQUF3QkMsaUJBQXlCO0lBQy9ELE1BQU1DLFFBQVFILGdGQUFBQSxDQUFvQkksUUFBUTtJQUMxQyxJQUFJRCxPQUFPLE9BQU9BO0lBQ2xCLE1BQU0sSUFBSUUsTUFDUixNQUFLSCxvQkFBa0I7QUFFM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwudHM/M2NkNCJdLCJuYW1lcyI6WyJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmUiLCJjYWxsaW5nRXhwcmVzc2lvbiIsInN0b3JlIiwiZ2V0U3RvcmUiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* reexport safe */ _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-async-storage-instance */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n //# sourceMappingURL=static-generation-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBU0U7QUFDdUY7QUFrRGxEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC50cz8yMmI3Il0sIm5hbWVzIjpbInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_SUFFIX: () => (/* binding */ ACTION_SUFFIX),\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_BODY_SUFFIX: () => (/* binding */ NEXT_BODY_SUFFIX),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_ITEMS: () => (/* binding */ NEXT_CACHE_TAG_MAX_ITEMS),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_DATA_SUFFIX: () => (/* binding */ NEXT_DATA_SUFFIX),\n/* harmony export */   NEXT_META_SUFFIX: () => (/* binding */ NEXT_META_SUFFIX),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_ENCRYPTION_ALIAS: () => (/* binding */ RSC_ACTION_ENCRYPTION_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   RSC_PREFETCH_SUFFIX: () => (/* binding */ RSC_PREFETCH_SUFFIX),\n/* harmony export */   RSC_SUFFIX: () => (/* binding */ RSC_SUFFIX),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\nconst RSC_SUFFIX = \".rsc\";\nconst ACTION_SUFFIX = \".action\";\nconst NEXT_DATA_SUFFIX = \".json\";\nconst NEXT_META_SUFFIX = \".meta\";\nconst NEXT_BODY_SUFFIX = \".body\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\n// if these change make sure we update the related\n// documentation as well\nconst NEXT_CACHE_TAG_MAX_ITEMS = 128;\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-server-reference\";\nconst RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"app\",\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: \"shared\",\n    /**\n   * React Server Components layer (rsc).\n   */ reactServerComponents: \"rsc\",\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: \"ssr\",\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: \"action-browser\",\n    /**\n   * The layer for the API routes.\n   */ api: \"api\",\n    /**\n   * The layer for the middleware code.\n   */ middleware: \"middleware\",\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: \"instrument\",\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: \"edge-asset\",\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: \"app-pages-browser\",\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: \"app-metadata-route\",\n    /**\n   * The layer for the server bundle for App Route handlers.\n   */ appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.instrument\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        nonClientServerTarget: [\n            // middleware and pages api\n            WEBPACK_LAYERS_NAMES.middleware,\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        app: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\",\n    metadataRoute: \"__next_metadata_route__\",\n    metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n\n\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp),\n/* harmony export */   wrapApiHandler: () => (/* binding */ wrapApiHandler)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\n\n\n\nfunction wrapApiHandler(page, handler) {\n    return (...args)=>{\n        var _getTracer_getRootSpanAttributes;\n        (_getTracer_getRootSpanAttributes = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", page);\n        // Call API route method\n        return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__.NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n         true && previewProps.previewModeId === \"development-id\"));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHFFQUF5QjtBQUM5RSx3REFBd0Qsb0VBQTRCO0FBQ3BGO0FBQ0EsUUFBUSxLQUFxQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9FQUE0QjtBQUM5QztBQUNBO0FBQ0Esc0JBQXNCLE1BQXNDLEdBQUcsQ0FBTTtBQUNyRSxvQkFBb0IsYUFBb0I7QUFDeEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9FQUE0QjtBQUM5QztBQUNBO0FBQ0Esc0JBQXNCLE1BQXNDLEdBQUcsQ0FBTTtBQUNyRSxvQkFBb0IsYUFBb0I7QUFDeEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanM/NDQ1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLCBjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIH0gZnJvbSBcIi4uL2FwaS11dGlsc1wiO1xuZXhwb3J0IGNsYXNzIERyYWZ0TW9kZVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihwcmV2aWV3UHJvcHMsIHJlcSwgY29va2llcywgbXV0YWJsZUNvb2tpZXMpe1xuICAgICAgICB2YXIgX2Nvb2tpZXNfZ2V0O1xuICAgICAgICAvLyBUaGUgbG9naWMgZm9yIGRyYWZ0TW9kZSgpIGlzIHZlcnkgc2ltaWxhciB0byB0cnlHZXRQcmV2aWV3RGF0YSgpXG4gICAgICAgIC8vIGJ1dCBEcmFmdCBNb2RlIGRvZXMgbm90IGhhdmUgYW55IGRhdGEgYXNzb2NpYXRlZCB3aXRoIGl0LlxuICAgICAgICBjb25zdCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA9IHByZXZpZXdQcm9wcyAmJiBjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlKHJlcSwgcHJldmlld1Byb3BzKS5pc09uRGVtYW5kUmV2YWxpZGF0ZTtcbiAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSAoX2Nvb2tpZXNfZ2V0ID0gY29va2llcy5nZXQoQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUykpID09IG51bGwgPyB2b2lkIDAgOiBfY29va2llc19nZXQudmFsdWU7XG4gICAgICAgIHRoaXMuaXNFbmFibGVkID0gQm9vbGVhbighaXNPbkRlbWFuZFJldmFsaWRhdGUgJiYgY29va2llVmFsdWUgJiYgcHJldmlld1Byb3BzICYmIChjb29raWVWYWx1ZSA9PT0gcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQgfHwgLy8gSW4gZGV2IG1vZGUsIHRoZSBjb29raWUgY2FuIGJlIGFjdHVhbCBoYXNoIHZhbHVlIHByZXZpZXcgaWQgYnV0IHRoZSBwcmV2aWV3IHByb3BzIGNhbiBzdGlsbCBiZSBgZGV2ZWxvcG1lbnQtaWRgLlxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgJiYgcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQgPT09IFwiZGV2ZWxvcG1lbnQtaWRcIikpO1xuICAgICAgICB0aGlzLl9wcmV2aWV3TW9kZUlkID0gcHJldmlld1Byb3BzID09IG51bGwgPyB2b2lkIDAgOiBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZDtcbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMgPSBtdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3ByZXZpZXdNb2RlSWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogcHJldmlld1Byb3BzIG1pc3NpbmcgcHJldmlld01vZGVJZCB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fcHJldmlld01vZGVJZCxcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXG4gICAgICAgICAgICBwYXRoOiBcIi9cIlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgLy8gVG8gZGVsZXRlIGEgY29va2llLCBzZXQgYGV4cGlyZXNgIHRvIGEgZGF0ZSBpbiB0aGUgcGFzdDpcbiAgICAgICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzYyNjUjc2VjdGlvbi00LjEuMVxuICAgICAgICAvLyBgTWF4LUFnZTogMGAgaXMgbm90IHZhbGlkLCB0aHVzIGlnbm9yZWQsIGFuZCB0aGUgY29va2llIGlzIHBlcnNpc3RlZC5cbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXG4gICAgICAgICAgICBwYXRoOiBcIi9cIixcbiAgICAgICAgICAgIGV4cGlyZXM6IG5ldyBEYXRlKDApXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhZnQtbW9kZS1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n/* harmony import */ var _web_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../web/utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n\n\n\n\n\n\nfunction getHeaders(headers) {\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if (\"x-middleware-set-cookie\" in req.headers && typeof req.headers[\"x-middleware-set-cookie\"] === \"string\") {\n        const setCookieValue = req.headers[\"x-middleware-set-cookie\"];\n        const responseHeaders = new Headers();\n        for (const cookie of (0,_web_utils__WEBPACK_IMPORTED_MODULE_5__.splitCookiesString)(setCookieValue)){\n            responseHeaders.append(\"set-cookie\", cookie);\n        }\n        const responseCookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        function defaultOnUpdateCookies(cookies) {\n            if (res) {\n                res.setHeader(\"Set-Cookie\", cookies);\n            }\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // if middleware is setting cookie(s), then include those in\n                    // the initial cached cookies so they can be read in render\n                    const requestCookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(req.headers));\n                    mergeMiddlewareCookies(req, requestCookies);\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(requestCookies);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    const mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n                    mergeMiddlewareCookies(req, mutableCookies);\n                    cache.mutableCookies = mutableCookies;\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            },\n            reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n            assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || \"\"\n        };\n        return storage.run(store, callback, store);\n    }\n};\n\n//# sourceMappingURL=request-async-storage-wrapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErRTtBQUNQO0FBQzZDO0FBQ3JDO0FBQ3RCO0FBQ1I7QUFDbEQ7QUFDQSxvQkFBb0IsZ0ZBQWM7QUFDbEMsd0JBQXdCLG9GQUFpQjtBQUN6QztBQUNBO0FBQ0EsV0FBVyxnRkFBYztBQUN6QjtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFjLENBQUMsZ0ZBQWM7QUFDckQsV0FBVyxzR0FBNEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFrQjtBQUMvQztBQUNBO0FBQ0Esb0NBQW9DLHdFQUFlO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsdUVBQWMsQ0FBQyxnRkFBYztBQUM1RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsK0ZBQXFCO0FBQ3pEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDBDQUEwQyxtRUFBaUI7QUFDM0Q7QUFDQTtBQUNBLGFBQWE7QUFDYix5R0FBeUc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz83ZjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZMSUdIVF9QQVJBTUVURVJTIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIsIFJlcXVlc3RDb29raWVzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBSZXNwb25zZUNvb2tpZXMsIFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCI7XG5pbXBvcnQgeyBEcmFmdE1vZGVQcm92aWRlciB9IGZyb20gXCIuL2RyYWZ0LW1vZGUtcHJvdmlkZXJcIjtcbmltcG9ydCB7IHNwbGl0Q29va2llc1N0cmluZyB9IGZyb20gXCIuLi93ZWIvdXRpbHNcIjtcbmZ1bmN0aW9uIGdldEhlYWRlcnMoaGVhZGVycykge1xuICAgIGNvbnN0IGNsZWFuZWQgPSBIZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpO1xuICAgIGZvciAoY29uc3QgcGFyYW0gb2YgRkxJR0hUX1BBUkFNRVRFUlMpe1xuICAgICAgICBjbGVhbmVkLmRlbGV0ZShwYXJhbS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbiAgICByZXR1cm4gSGVhZGVyc0FkYXB0ZXIuc2VhbChjbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIud3JhcChjb29raWVzLCBvblVwZGF0ZUNvb2tpZXMpO1xufVxuLyoqXG4gKiBJZiBtaWRkbGV3YXJlIHNldCBjb29raWVzIGluIHRoaXMgcmVxdWVzdCAoaW5kaWNhdGVkIGJ5IGB4LW1pZGRsZXdhcmUtc2V0LWNvb2tpZWApLFxuICogdGhlbiBtZXJnZSB0aG9zZSBpbnRvIHRoZSBleGlzdGluZyBjb29raWUgb2JqZWN0LCBzbyB0aGF0IHdoZW4gYGNvb2tpZXMoKWAgaXMgYWNjZXNzZWRcbiAqIGl0J3MgYWJsZSB0byByZWFkIHRoZSBuZXdseSBzZXQgY29va2llcy5cbiAqLyBmdW5jdGlvbiBtZXJnZU1pZGRsZXdhcmVDb29raWVzKHJlcSwgZXhpc3RpbmdDb29raWVzKSB7XG4gICAgaWYgKFwieC1taWRkbGV3YXJlLXNldC1jb29raWVcIiBpbiByZXEuaGVhZGVycyAmJiB0eXBlb2YgcmVxLmhlYWRlcnNbXCJ4LW1pZGRsZXdhcmUtc2V0LWNvb2tpZVwiXSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBzZXRDb29raWVWYWx1ZSA9IHJlcS5oZWFkZXJzW1wieC1taWRkbGV3YXJlLXNldC1jb29raWVcIl07XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlSGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIHNwbGl0Q29va2llc1N0cmluZyhzZXRDb29raWVWYWx1ZSkpe1xuICAgICAgICAgICAgcmVzcG9uc2VIZWFkZXJzLmFwcGVuZChcInNldC1jb29raWVcIiwgY29va2llKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNwb25zZUNvb2tpZXMgPSBuZXcgUmVzcG9uc2VDb29raWVzKHJlc3BvbnNlSGVhZGVycyk7XG4gICAgICAgIC8vIFRyYW5zZmVyIGNvb2tpZXMgZnJvbSBSZXNwb25zZUNvb2tpZXMgdG8gUmVxdWVzdENvb2tpZXNcbiAgICAgICAgZm9yIChjb25zdCBjb29raWUgb2YgcmVzcG9uc2VDb29raWVzLmdldEFsbCgpKXtcbiAgICAgICAgICAgIGV4aXN0aW5nQ29va2llcy5zZXQoY29va2llKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciA9IHtcbiAgICAvKipcbiAgICogV3JhcCB0aGUgY2FsbGJhY2sgd2l0aCB0aGUgZ2l2ZW4gc3RvcmUgc28gaXQgY2FuIGFjY2VzcyB0aGUgdW5kZXJseWluZ1xuICAgKiBzdG9yZSB1c2luZyBob29rcy5cbiAgICpcbiAgICogQHBhcmFtIHN0b3JhZ2UgdW5kZXJseWluZyBzdG9yYWdlIG9iamVjdCByZXR1cm5lZCBieSB0aGUgbW9kdWxlXG4gICAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gc2VlZCB0aGUgc3RvcmVcbiAgICogQHBhcmFtIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIGNhbGwgd2l0aGluIHRoZSBzY29wZSBvZiB0aGUgY29udGV4dFxuICAgKiBAcmV0dXJucyB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBjYWxsYmFja1xuICAgKi8gd3JhcCAoc3RvcmFnZSwgeyByZXEsIHJlcywgcmVuZGVyT3B0cyB9LCBjYWxsYmFjaykge1xuICAgICAgICBsZXQgcHJldmlld1Byb3BzID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAocmVuZGVyT3B0cyAmJiBcInByZXZpZXdQcm9wc1wiIGluIHJlbmRlck9wdHMpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IGludmVzdGlnYXRlIHdoeSBwcmV2aWV3UHJvcHMgaXNuJ3Qgb24gUmVuZGVyT3B0c1xuICAgICAgICAgICAgcHJldmlld1Byb3BzID0gcmVuZGVyT3B0cy5wcmV2aWV3UHJvcHM7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZGVmYXVsdE9uVXBkYXRlQ29va2llcyhjb29raWVzKSB7XG4gICAgICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcihcIlNldC1Db29raWVcIiwgY29va2llcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2FjaGUgPSB7fTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSB7XG4gICAgICAgICAgICBnZXQgaGVhZGVycyAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNlYWwgdGhlIGhlYWRlcnMgb2JqZWN0IHRoYXQnbGwgZnJlZXplIG91dCBhbnkgbWV0aG9kcyB0aGF0IGNvdWxkXG4gICAgICAgICAgICAgICAgICAgIC8vIG11dGF0ZSB0aGUgdW5kZXJseWluZyBkYXRhLlxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5oZWFkZXJzID0gZ2V0SGVhZGVycyhyZXEuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5oZWFkZXJzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjb29raWVzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgbWlkZGxld2FyZSBpcyBzZXR0aW5nIGNvb2tpZShzKSwgdGhlbiBpbmNsdWRlIHRob3NlIGluXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBpbml0aWFsIGNhY2hlZCBjb29raWVzIHNvIHRoZXkgY2FuIGJlIHJlYWQgaW4gcmVuZGVyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RDb29raWVzID0gbmV3IFJlcXVlc3RDb29raWVzKEhlYWRlcnNBZGFwdGVyLmZyb20ocmVxLmhlYWRlcnMpKTtcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VNaWRkbGV3YXJlQ29va2llcyhyZXEsIHJlcXVlc3RDb29raWVzKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgY29va2llcyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmNvb2tpZXMgPSBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChyZXF1ZXN0Q29va2llcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5jb29raWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBtdXRhYmxlQ29va2llcyAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5tdXRhYmxlQ29va2llcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtdXRhYmxlQ29va2llcyA9IGdldE11dGFibGVDb29raWVzKHJlcS5oZWFkZXJzLCAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5vblVwZGF0ZUNvb2tpZXMpIHx8IChyZXMgPyBkZWZhdWx0T25VcGRhdGVDb29raWVzIDogdW5kZWZpbmVkKSk7XG4gICAgICAgICAgICAgICAgICAgIG1lcmdlTWlkZGxld2FyZUNvb2tpZXMocmVxLCBtdXRhYmxlQ29va2llcyk7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLm11dGFibGVDb29raWVzID0gbXV0YWJsZUNvb2tpZXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5tdXRhYmxlQ29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgZHJhZnRNb2RlICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmRyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5kcmFmdE1vZGUgPSBuZXcgRHJhZnRNb2RlUHJvdmlkZXIocHJldmlld1Byb3BzLCByZXEsIHRoaXMuY29va2llcywgdGhpcy5tdXRhYmxlQ29va2llcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5kcmFmdE1vZGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVhY3RMb2FkYWJsZU1hbmlmZXN0OiAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5yZWFjdExvYWRhYmxlTWFuaWZlc3QpIHx8IHt9LFxuICAgICAgICAgICAgYXNzZXRQcmVmaXg6IChyZW5kZXJPcHRzID09IG51bGwgPyB2b2lkIDAgOiByZW5kZXJPcHRzLmFzc2V0UHJlZml4KSB8fCBcIlwiXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzdG9yYWdlLnJ1bihzdG9yZSwgY2FsbGJhY2ssIHN0b3JlKTtcbiAgICB9XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === \"string\";\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVGQUFvQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvaW50ZXJuYWwtdXRpbHMuanM/YjYwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVhUX1JTQ19VTklPTl9RVUVSWSB9IGZyb20gXCIuLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RmFsbGJhY2tcIixcbiAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxuICAgIFwiX19uZXh0RGVmYXVsdExvY2FsZVwiLFxuICAgIFwiX19uZXh0SXNOb3RGb3VuZFwiLFxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXG5dO1xuY29uc3QgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyA9IFtcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsUXVlcmllcyhxdWVyeSkge1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGRlbGV0ZSBxdWVyeVtuYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyh1cmwsIGlzRWRnZSkge1xuICAgIGNvbnN0IGlzU3RyaW5nVXJsID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGluc3RhbmNlLnNlYXJjaFBhcmFtcy5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMpe1xuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRenderSpan: () => (/* binding */ AppRenderSpan),\n/* harmony export */   AppRouteRouteHandlersSpan: () => (/* binding */ AppRouteRouteHandlersSpan),\n/* harmony export */   BaseServerSpan: () => (/* binding */ BaseServerSpan),\n/* harmony export */   LoadComponentsSpan: () => (/* binding */ LoadComponentsSpan),\n/* harmony export */   LogSpanAllowList: () => (/* binding */ LogSpanAllowList),\n/* harmony export */   MiddlewareSpan: () => (/* binding */ MiddlewareSpan),\n/* harmony export */   NextNodeServerSpan: () => (/* binding */ NextNodeServerSpan),\n/* harmony export */   NextServerSpan: () => (/* binding */ NextServerSpan),\n/* harmony export */   NextVanillaSpanAllowlist: () => (/* binding */ NextVanillaSpanAllowlist),\n/* harmony export */   NodeSpan: () => (/* binding */ NodeSpan),\n/* harmony export */   RenderSpan: () => (/* binding */ RenderSpan),\n/* harmony export */   ResolveMetadataSpan: () => (/* binding */ ResolveMetadataSpan),\n/* harmony export */   RouterSpan: () => (/* binding */ RouterSpan),\n/* harmony export */   StartServerSpan: () => (/* binding */ StartServerSpan)\n/* harmony export */ });\n/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nvar MiddlewareSpan;\n(function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n})(MiddlewareSpan || (MiddlewareSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nconst NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nconst LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n\n\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/tracer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanKind: () => (/* binding */ SpanKind),\n/* harmony export */   SpanStatusCode: () => (/* binding */ SpanStatusCode),\n/* harmony export */   getTracer: () => (/* binding */ getTracer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (true) {\n    api = __webpack_require__(/*! @opentelemetry/api */ \"(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n} else {}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nconst isPromise = (p)=>{\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error)=>{\n    if ((error == null ? void 0 : error.bubble) === true) {\n        span.setAttribute(\"next.bubble\", true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer(\"next.js\", \"0.0.1\");\n    }\n    getContext() {\n        return context;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === \"function\" ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            \"next.span_name\": spanName,\n            \"next.span_type\": type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = \"performance\" in globalThis ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && _constants__WEBPACK_IMPORTED_MODULE_0__.LogSpanAllowList.includes(type || \"\")) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split(\".\").pop() || \"\").replace(/[A-Z]/g, (match)=>\"-\" + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isPromise(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === \"function\") {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\n\n\n//# sourceMappingURL=tracer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextRequestHint: () => (/* binding */ NextRequestHint),\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n/* harmony import */ var _get_edge_preview_props__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./get-edge-preview-props */ \"(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === \"true\") {\n            const { interceptTestApis, wrapRequestHandler } = __webpack_require__(/*! next/dist/experimental/testmode/server-edge */ \"(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\");\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nasync function adapter(params) {\n    ensureTestApisIntercepted();\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscURL)(params.request.url);\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n            const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isNextDataRequest = params.request.headers[\"x-nextjs-data\"];\n    if (isNextDataRequest && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl =  false ? 0 : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: \"development\" !== \"development\",\n            fetchCacheKeyPrefix: \"\",\n            dev: \"development\" === \"development\",\n            requestHeaders: params.request.headers,\n            requestProtocol: \"https\",\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: (0,_get_edge_preview_props__WEBPACK_IMPORTED_MODULE_16__.getEdgePreviewProps)()\n                };\n            }\n        });\n    }\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n        if (isMiddleware) {\n            return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_15__.MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    \"http.target\": request.nextUrl.pathname,\n                    \"http.method\": request.method\n                }\n            }, ()=>_async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n                    req: request,\n                    renderOpts: {\n                        onUpdateCookies: (cookies)=>{\n                            cookiesFromResponse = cookies;\n                        },\n                        // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n                        previewProps: (0,_get_edge_preview_props__WEBPACK_IMPORTED_MODULE_16__.getEdgePreviewProps)()\n                    }\n                }, ()=>params.handler(request, event)));\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite && !isEdgeRendering) {\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n        if (isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !( false && 0)) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNQLGtCQUFrQixNQUFNO0FBQ3hCLGlDQUFpQyxLQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcz8yMDkxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQYWdlU2lnbmF0dXJlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBwYWdlIH0pe1xuICAgICAgICBzdXBlcihgVGhlIG1pZGRsZXdhcmUgXCIke3BhZ2V9XCIgYWNjZXB0cyBhbiBhc3luYyBBUEkgZGlyZWN0bHkgd2l0aCB0aGUgZm9ybTpcbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3QsIGV2ZW50KSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCgnL25ldy1sb2NhdGlvbicpXG4gIH1cbiAgXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkUGFnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC5wYWdlIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIFxcYFVSTFBhdHRlcm5cXGAuXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgYCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJlbW92ZWRVQUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC51YSBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gIGApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* reexport safe */ _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__.ImageResponse),\n/* harmony export */   NextRequest: () => (/* reexport safe */ _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__.NextRequest),\n/* harmony export */   NextResponse: () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__.NextResponse),\n/* harmony export */   URLPattern: () => (/* reexport safe */ _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__.URLPattern),\n/* harmony export */   userAgent: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgent),\n/* harmony export */   userAgentFromString: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/image-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../spec-extension/user-agent */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\");\n/* harmony import */ var _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spec-extension/url-pattern */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\");\n// Alias index file of next/server for edge runtime for tree-shaking purpose\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUU7QUFDVDtBQUNFO0FBQ29CO0FBQ25COztBQUUzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL2V4cG9ydHMvaW5kZXguanM/NjQwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbGlhcyBpbmRleCBmaWxlIG9mIG5leHQvc2VydmVyIGZvciBlZGdlIHJ1bnRpbWUgZm9yIHRyZWUtc2hha2luZyBwdXJwb3NlXG5leHBvcnQgeyBJbWFnZVJlc3BvbnNlIH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL2ltYWdlLXJlc3BvbnNlXCI7XG5leHBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gXCIuLi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0XCI7XG5leHBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vcmVzcG9uc2VcIjtcbmV4cG9ydCB7IHVzZXJBZ2VudCwgdXNlckFnZW50RnJvbVN0cmluZyB9IGZyb20gXCIuLi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50XCI7XG5leHBvcnQgeyBVUkxQYXR0ZXJuIH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3VybC1wYXR0ZXJuXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/get-edge-preview-props.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEdgePreviewProps: () => (/* binding */ getEdgePreviewProps)\n/* harmony export */ });\n/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ function getEdgePreviewProps() {\n    return {\n        previewModeId:  false ? 0 : \"development-id\",\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || \"\",\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || \"\"\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nZXQtZWRnZS1wcmV2aWV3LXByb3BzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQVc7QUFDWDtBQUNBLHVCQUF1QixNQUFxQyxHQUFHLENBQWtDO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2V0LWVkZ2UtcHJldmlldy1wcm9wcy5qcz9kYjNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW4gZWRnZSBydW50aW1lLCB0aGVzZSBwcm9wcyBkaXJlY3RseSBhY2Nlc3NlZCBmcm9tIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqICAgLSBsb2NhbDogZW52IHZhcnMgd2lsbCBiZSBpbmplY3RlZCB0aHJvdWdoIGVkZ2UtcnVudGltZSBhcyBydW50aW1lIGVudiB2YXJzXG4gKiAgIC0gZGVwbG95bWVudDogZW52IHZhcnMgd2lsbCBiZSByZXBsYWNlZCBieSBlZGdlIGJ1aWxkIHBpcGVsaW5lXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGdldEVkZ2VQcmV2aWV3UHJvcHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJldmlld01vZGVJZDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gcHJvY2Vzcy5lbnYuX19ORVhUX1BSRVZJRVdfTU9ERV9JRCA6IFwiZGV2ZWxvcG1lbnQtaWRcIixcbiAgICAgICAgcHJldmlld01vZGVTaWduaW5nS2V5OiBwcm9jZXNzLmVudi5fX05FWFRfUFJFVklFV19NT0RFX1NJR05JTkdfS0VZIHx8IFwiXCIsXG4gICAgICAgIHByZXZpZXdNb2RlRW5jcnlwdGlvbktleTogcHJvY2Vzcy5lbnYuX19ORVhUX1BSRVZJRVdfTU9ERV9FTkNSWVBUSU9OX0tFWSB8fCBcIlwiXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWVkZ2UtcHJldmlldy1wcm9wcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n    const register = \"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && (await _ENTRIES.middleware_instrumentation).register;\n    if (register) {\n        try {\n            await register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLG1GQUFtRixZQUFZO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELE9BQU87QUFDaEU7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsdUJBQXVCO0FBQ3ZCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBTTtBQUMxQjtBQUNBLHNCQUFzQixxQkFBTTtBQUM1QixRQUFRLHFCQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzPzdhNWEiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb24oKSB7XG4gICAgY29uc3QgcmVnaXN0ZXIgPSBcIl9FTlRSSUVTXCIgaW4gZ2xvYmFsVGhpcyAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiAmJiAoYXdhaXQgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24pLnJlZ2lzdGVyO1xuICAgIGlmIChyZWdpc3Rlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgcmVnaXN0ZXIoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9IGBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBsb2FkaW5nIGluc3RydW1lbnRhdGlvbiBob29rOiAke2Vyci5tZXNzYWdlfWA7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG59XG5sZXQgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCkge1xuICAgIGlmICghcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSA9IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCk7XG4gICAgfVxuICAgIHJldHVybiByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2U7XG59XG5mdW5jdGlvbiBnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGUpIHtcbiAgICAvLyB3YXJuaW5nOiBpZiB5b3UgY2hhbmdlIHRoZXNlIG1lc3NhZ2VzLCB5b3UgbXVzdCBhZGp1c3QgaG93IHJlYWN0LWRldi1vdmVybGF5J3MgbWlkZGxld2FyZSBkZXRlY3RzIG1vZHVsZXMgbm90IGZvdW5kXG4gICAgcmV0dXJuIGBUaGUgZWRnZSBydW50aW1lIGRvZXMgbm90IHN1cHBvcnQgTm9kZS5qcyAnJHttb2R1bGV9JyBtb2R1bGUuXG5MZWFybiBNb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9ub2RlLW1vZHVsZS1pbi1lZGdlLXJ1bnRpbWVgO1xufVxuZnVuY3Rpb24gX19pbXBvcnRfdW5zdXBwb3J0ZWQobW9kdWxlTmFtZSkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KGZ1bmN0aW9uKCkge30sIHtcbiAgICAgICAgZ2V0IChfb2JqLCBwcm9wKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJ0aGVuXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9LFxuICAgICAgICBjb25zdHJ1Y3QgKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXBwbHkgKF90YXJnZXQsIF90aGlzLCBhcmdzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdKHByb3h5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldDogKCk9PnByb3h5XG4gICAgfSk7XG59XG5mdW5jdGlvbiBlbmhhbmNlR2xvYmFscygpIHtcbiAgICAvLyBUaGUgY29uZGl0aW9uIGlzIHRydWUgd2hlbiB0aGUgXCJwcm9jZXNzXCIgbW9kdWxlIGlzIHByb3ZpZGVkXG4gICAgaWYgKHByb2Nlc3MgIT09IGdsb2JhbC5wcm9jZXNzKSB7XG4gICAgICAgIC8vIHByZWZlciBsb2NhbCBwcm9jZXNzIGJ1dCBnbG9iYWwucHJvY2VzcyBoYXMgY29ycmVjdCBcImVudlwiXG4gICAgICAgIHByb2Nlc3MuZW52ID0gZ2xvYmFsLnByb2Nlc3MuZW52O1xuICAgICAgICBnbG9iYWwucHJvY2VzcyA9IHByb2Nlc3M7XG4gICAgfVxuICAgIC8vIHRvIGFsbG93IGJ1aWxkaW5nIGNvZGUgdGhhdCBpbXBvcnQgYnV0IGRvZXMgbm90IHVzZSBub2RlLmpzIG1vZHVsZXMsXG4gICAgLy8gd2VicGFjayB3aWxsIGV4cGVjdCB0aGlzIGZ1bmN0aW9uIHRvIGV4aXN0IGluIGdsb2JhbCBzY29wZVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbG9iYWxUaGlzLCBcIl9faW1wb3J0X3Vuc3VwcG9ydGVkXCIsIHtcbiAgICAgICAgdmFsdWU6IF9faW1wb3J0X3Vuc3VwcG9ydGVkLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIC8vIEVhZ2VybHkgZmlyZSBpbnN0cnVtZW50YXRpb24gaG9vayB0byBtYWtlIHRoZSBzdGFydHVwIGZhc3Rlci5cbiAgICB2b2lkIGVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQoKTtcbn1cbmVuaGFuY2VHbG9iYWxzKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */ class ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0EsSUFBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixvREFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQWM7QUFDckMsYUFBYTtBQUNiO0FBQ0E7QUFDQSwyQkFBMkIsb0RBQWM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQWM7QUFDckMsYUFBYTtBQUNiO0FBQ0EscURBQXFELG9EQUFjO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQWM7QUFDckMsYUFBYTtBQUNiO0FBQ0EscURBQXFELG9EQUFjO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQWM7QUFDckM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isb0RBQWM7QUFDN0M7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzP2JmMzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVmbGVjdEFkYXB0ZXIgfSBmcm9tIFwiLi9yZWZsZWN0XCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovIGV4cG9ydCBjbGFzcyBSZWFkb25seUhlYWRlcnNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihcIkhlYWRlcnMgY2Fubm90IGJlIG1vZGlmaWVkLiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9hcGktcmVmZXJlbmNlL2Z1bmN0aW9ucy9oZWFkZXJzXCIpO1xuICAgIH1cbiAgICBzdGF0aWMgY2FsbGFibGUoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWFkb25seUhlYWRlcnNFcnJvcigpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBIZWFkZXJzQWRhcHRlciBleHRlbmRzIEhlYWRlcnMge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlcnMpe1xuICAgICAgICAvLyBXZSd2ZSBhbHJlYWR5IG92ZXJyaWRkZW4gdGhlIG1ldGhvZHMgdGhhdCB3b3VsZCBiZSBjYWxsZWQsIHNvIHdlJ3JlIGp1c3RcbiAgICAgICAgLy8gY2FsbGluZyB0aGUgc3VwZXIgY29uc3RydWN0b3IgdG8gZW5zdXJlIHRoYXQgdGhlIGluc3RhbmNlb2YgY2hlY2sgd29ya3MuXG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IG5ldyBQcm94eShoZWFkZXJzLCB7XG4gICAgICAgICAgICBnZXQgKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIHRoaXMgaXMganVzdCBhbiBvYmplY3QsIHdlIGV4cGVjdCB0aGF0IGFsbCBcImdldFwiIG9wZXJhdGlvbnNcbiAgICAgICAgICAgICAgICAvLyBhcmUgZm9yIHByb3BlcnRpZXMuIElmIGl0J3MgYSBcImdldFwiIGZvciBhIHN5bWJvbCwgd2UnbGwganVzdCByZXR1cm5cbiAgICAgICAgICAgICAgICAvLyB0aGUgc3ltYm9sLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBsb3dlcmNhc2VkID0gcHJvcC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIC8vIExldCdzIGZpbmQgdGhlIG9yaWdpbmFsIGNhc2luZyBvZiB0aGUga2V5LiBUaGlzIGFzc3VtZXMgdGhhdCB0aGVyZSBpc1xuICAgICAgICAgICAgICAgIC8vIG5vIG1peGVkIGNhc2Uga2V5cyAoZS5nLiBcIkNvbnRlbnQtVHlwZVwiIGFuZCBcImNvbnRlbnQtdHlwZVwiKSBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBoZWFkZXJzIG9iamVjdC5cbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbCA9IE9iamVjdC5rZXlzKGhlYWRlcnMpLmZpbmQoKG8pPT5vLnRvTG93ZXJDYXNlKCkgPT09IGxvd2VyY2FzZWQpO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZG9lc24ndCBleGlzdCwgcmV0dXJuIHVuZGVmaW5lZC5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm47XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0aGUgdmFsdWUuXG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlZmxlY3RBZGFwdGVyLmdldCh0YXJnZXQsIG9yaWdpbmFsLCByZWNlaXZlcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0ICh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHVzZSB0aGUgcHJvcCBhcyB0aGUga2V5LlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5zZXQodGFyZ2V0LCBvcmlnaW5hbCA/PyBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhhcyAodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSBcInN5bWJvbFwiKSByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuaGFzKHRhcmdldCwgcHJvcCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHJldHVybiBmYWxzZS5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0cnVlLlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5oYXModGFyZ2V0LCBvcmlnaW5hbCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZXRlUHJvcGVydHkgKHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikgcmV0dXJuIFJlZmxlY3RBZGFwdGVyLmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHJldHVybiB0cnVlLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWwgPT09IFwidW5kZWZpbmVkXCIpIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZXhpc3RzLCBkZWxldGUgdGhlIHByb3BlcnR5LlxuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlci5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIG9yaWdpbmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBTZWFscyBhIEhlYWRlcnMgaW5zdGFuY2UgdG8gcHJldmVudCBtb2RpZmljYXRpb24gYnkgdGhyb3dpbmcgYW4gZXJyb3Igd2hlblxuICAgKiBhbnkgbXV0YXRpbmcgbWV0aG9kIGlzIGNhbGxlZC5cbiAgICovIHN0YXRpYyBzZWFsKGhlYWRlcnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eShoZWFkZXJzLCB7XG4gICAgICAgICAgICBnZXQgKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2gocHJvcCl7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcHBlbmRcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRlbGV0ZVwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2V0XCI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhZG9ubHlIZWFkZXJzRXJyb3IuY2FsbGFibGU7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBNZXJnZXMgYSBoZWFkZXIgdmFsdWUgaW50byBhIHN0cmluZy4gVGhpcyBzdG9yZXMgbXVsdGlwbGUgdmFsdWVzIGFzIGFuXG4gICAqIGFycmF5LCBzbyB3ZSBuZWVkIHRvIG1lcmdlIHRoZW0gaW50byBhIHN0cmluZy5cbiAgICpcbiAgICogQHBhcmFtIHZhbHVlIGEgaGVhZGVyIHZhbHVlXG4gICAqIEByZXR1cm5zIGEgbWVyZ2VkIGhlYWRlciB2YWx1ZSAoYSBzdHJpbmcpXG4gICAqLyBtZXJnZSh2YWx1ZSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybiB2YWx1ZS5qb2luKFwiLCBcIik7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAqIENyZWF0ZXMgYSBIZWFkZXJzIGluc3RhbmNlIGZyb20gYSBwbGFpbiBvYmplY3Qgb3IgYSBIZWFkZXJzIGluc3RhbmNlLlxuICAgKlxuICAgKiBAcGFyYW0gaGVhZGVycyBhIHBsYWluIG9iamVjdCBvciBhIEhlYWRlcnMgaW5zdGFuY2VcbiAgICogQHJldHVybnMgYSBoZWFkZXJzIGluc3RhbmNlXG4gICAqLyBzdGF0aWMgZnJvbShoZWFkZXJzKSB7XG4gICAgICAgIGlmIChoZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykgcmV0dXJuIGhlYWRlcnM7XG4gICAgICAgIHJldHVybiBuZXcgSGVhZGVyc0FkYXB0ZXIoaGVhZGVycyk7XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHRoaXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhpcy5oZWFkZXJzW25hbWVdID0gW1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nLFxuICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICBdO1xuICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmcpKSB7XG4gICAgICAgICAgICBleGlzdGluZy5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmhlYWRlcnNbbmFtZV07XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5oZWFkZXJzW25hbWVdO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gdGhpcy5tZXJnZSh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMuaGVhZGVyc1tuYW1lXSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICB9XG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIHRoaXMuZW50cmllcygpKXtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4uY2FsbCh0aGlzQXJnLCB2YWx1ZSwgbmFtZSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmVudHJpZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgLy8gV2UgYXNzZXJ0IGhlcmUgdGhhdCB0aGlzIGlzIGEgc3RyaW5nIGJlY2F1c2Ugd2UgZ290IGl0IGZyb20gdGhlXG4gICAgICAgICAgICAvLyBPYmplY3Qua2V5cygpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0KG5hbWUpO1xuICAgICAgICAgICAgeWllbGQgW1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmtleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgeWllbGQgbmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpKXtcbiAgICAgICAgICAgIC8vIFdlIGFzc2VydCBoZXJlIHRoYXQgdGhpcyBpcyBhIHN0cmluZyBiZWNhdXNlIHdlIGdvdCBpdCBmcm9tIHRoZVxuICAgICAgICAgICAgLy8gT2JqZWN0LmtleXMoKSBjYWxsIGFib3ZlLlxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldChrZXkpO1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzPzhkZDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJlZmxlY3RBZGFwdGVyIHtcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUuYmluZCh0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgc3RhdGljIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5zZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpO1xuICAgIH1cbiAgICBzdGF0aWMgaGFzKHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wKTtcbiAgICB9XG4gICAgc3RhdGljIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmbGVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n/* harmony import */ var _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../client/components/static-generation-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\n\n/**\n * @internal\n */ class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__.staticGenerationAsyncStorage.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        return new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies),\n/* harmony export */   stringifyCookie: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.stringifyCookie)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n\n\n//# sourceMappingURL=cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRHOztBQUU1RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2Nvb2tpZXMuanM/NTAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBSZXF1ZXN0Q29va2llcywgUmVzcG9uc2VDb29raWVzLCBzdHJpbmdpZnlDb29raWUgfSBmcm9tIFwibmV4dC9kaXN0L2NvbXBpbGVkL0BlZGdlLXJ1bnRpbWUvY29va2llc1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){\n        this[waitUntilSymbol] = [];\n        this[passThroughSymbol] = false;\n    }\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQWtCO0FBQ3BDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzREFBa0I7QUFDcEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2ZldGNoLWV2ZW50LmpzPzg1M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZVNpZ25hdHVyZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5jb25zdCByZXNwb25zZVN5bWJvbCA9IFN5bWJvbChcInJlc3BvbnNlXCIpO1xuY29uc3QgcGFzc1Rocm91Z2hTeW1ib2wgPSBTeW1ib2woXCJwYXNzVGhyb3VnaFwiKTtcbmV4cG9ydCBjb25zdCB3YWl0VW50aWxTeW1ib2wgPSBTeW1ib2woXCJ3YWl0VW50aWxcIik7XG5jbGFzcyBGZXRjaEV2ZW50IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZWxlc3MtY29uc3RydWN0b3JcbiAgICBjb25zdHJ1Y3RvcihfcmVxdWVzdCl7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXSA9IFtdO1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IGZhbHNlO1xuICAgIH1cbiAgICByZXNwb25kV2l0aChyZXNwb25zZSkge1xuICAgICAgICBpZiAoIXRoaXNbcmVzcG9uc2VTeW1ib2xdKSB7XG4gICAgICAgICAgICB0aGlzW3Jlc3BvbnNlU3ltYm9sXSA9IFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFzc1Rocm91Z2hPbkV4Y2VwdGlvbigpIHtcbiAgICAgICAgdGhpc1twYXNzVGhyb3VnaFN5bWJvbF0gPSB0cnVlO1xuICAgIH1cbiAgICB3YWl0VW50aWwocHJvbWlzZSkge1xuICAgICAgICB0aGlzW3dhaXRVbnRpbFN5bWJvbF0ucHVzaChwcm9taXNlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTmV4dEZldGNoRXZlbnQgZXh0ZW5kcyBGZXRjaEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMpe1xuICAgICAgICBzdXBlcihwYXJhbXMucmVxdWVzdCk7XG4gICAgICAgIHRoaXMuc291cmNlUGFnZSA9IHBhcmFtcy5wYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhlIGByZXF1ZXN0YCBpcyBub3cgdGhlIGZpcnN0IHBhcmFtZXRlciBhbmQgdGhlIEFQSSBpcyBub3cgYXN5bmMuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyBnZXQgcmVxdWVzdCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2luZyBgcmVzcG9uZFdpdGhgIGlzIG5vIGxvbmdlciBuZWVkZWQuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyByZXNwb25kV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC1ldmVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/image-response.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* binding */ ImageResponse)\n/* harmony export */ });\n/**\n * @deprecated ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead.\n * Migration with codemods: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-og-import\n */ function ImageResponse() {\n    throw new Error('ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead');\n}\n\n//# sourceMappingURL=image-response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9pbWFnZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBVztBQUNYO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9pbWFnZS1yZXNwb25zZS5qcz9iNGNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGRlcHJlY2F0ZWQgSW1hZ2VSZXNwb25zZSBtb3ZlZCBmcm9tIFwibmV4dC9zZXJ2ZXJcIiB0byBcIm5leHQvb2dcIiBzaW5jZSBOZXh0LmpzIDE0LCBwbGVhc2UgaW1wb3J0IGZyb20gXCJuZXh0L29nXCIgaW5zdGVhZC5cbiAqIE1pZ3JhdGlvbiB3aXRoIGNvZGVtb2RzOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi91cGdyYWRpbmcvY29kZW1vZHMjbmV4dC1vZy1pbXBvcnRcbiAqLyBleHBvcnQgZnVuY3Rpb24gSW1hZ2VSZXNwb25zZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ltYWdlUmVzcG9uc2UgbW92ZWQgZnJvbSBcIm5leHQvc2VydmVyXCIgdG8gXCJuZXh0L29nXCIgc2luY2UgTmV4dC5qcyAxNCwgcGxlYXNlIGltcG9ydCBmcm9tIFwibmV4dC9vZ1wiIGluc3RlYWQnKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url:  false ? 0 : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFXO0FBQ1gsZ0NBQWdDO0FBQ2hDO0FBQ0EsUUFBUSxtREFBVztBQUNuQjtBQUNBO0FBQ0EsNEJBQTRCLDhDQUFPO0FBQ25DLHFCQUFxQixpRUFBeUI7QUFDOUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx5QkFBeUIsb0RBQWM7QUFDdkMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxpQkFBaUIsTUFBOEMsR0FBRyxDQUFHO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvREFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzPzRkZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFVSTCB9IGZyb20gXCIuLi9uZXh0LXVybFwiO1xuaW1wb3J0IHsgdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycywgdmFsaWRhdGVVUkwgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCB7IFJlbW92ZWRVQUVycm9yLCBSZW1vdmVkUGFnZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuL2Nvb2tpZXNcIjtcbmV4cG9ydCBjb25zdCBJTlRFUk5BTFMgPSBTeW1ib2woXCJpbnRlcm5hbCByZXF1ZXN0XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIGV4dGVuZHMgdGhlIFtXZWIgYFJlcXVlc3RgIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQVBJL1JlcXVlc3QpIHdpdGggYWRkaXRpb25hbCBjb252ZW5pZW5jZSBtZXRob2RzLlxuICpcbiAqIFJlYWQgbW9yZTogW05leHQuanMgRG9jczogYE5leHRSZXF1ZXN0YF0oaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZnVuY3Rpb25zL25leHQtcmVxdWVzdClcbiAqLyBleHBvcnQgY2xhc3MgTmV4dFJlcXVlc3QgZXh0ZW5kcyBSZXF1ZXN0IHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgaW5pdCA9IHt9KXtcbiAgICAgICAgY29uc3QgdXJsID0gdHlwZW9mIGlucHV0ICE9PSBcInN0cmluZ1wiICYmIFwidXJsXCIgaW4gaW5wdXQgPyBpbnB1dC51cmwgOiBTdHJpbmcoaW5wdXQpO1xuICAgICAgICB2YWxpZGF0ZVVSTCh1cmwpO1xuICAgICAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBSZXF1ZXN0KSBzdXBlcihpbnB1dCwgaW5pdCk7XG4gICAgICAgIGVsc2Ugc3VwZXIodXJsLCBpbml0KTtcbiAgICAgICAgY29uc3QgbmV4dFVybCA9IG5ldyBOZXh0VVJMKHVybCwge1xuICAgICAgICAgICAgaGVhZGVyczogdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgbmV4dENvbmZpZzogaW5pdC5uZXh0Q29uZmlnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzW0lOVEVSTkFMU10gPSB7XG4gICAgICAgICAgICBjb29raWVzOiBuZXcgUmVxdWVzdENvb2tpZXModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGdlbzogaW5pdC5nZW8gfHwge30sXG4gICAgICAgICAgICBpcDogaW5pdC5pcCxcbiAgICAgICAgICAgIG5leHRVcmwsXG4gICAgICAgICAgICB1cmw6IHByb2Nlc3MuZW52Ll9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUgPyB1cmwgOiBuZXh0VXJsLnRvU3RyaW5nKClcbiAgICAgICAgfTtcbiAgICB9XG4gICAgW1N5bWJvbC5mb3IoXCJlZGdlLXJ1bnRpbWUuaW5zcGVjdC5jdXN0b21cIildKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29va2llczogdGhpcy5jb29raWVzLFxuICAgICAgICAgICAgZ2VvOiB0aGlzLmdlbyxcbiAgICAgICAgICAgIGlwOiB0aGlzLmlwLFxuICAgICAgICAgICAgbmV4dFVybDogdGhpcy5uZXh0VXJsLFxuICAgICAgICAgICAgdXJsOiB0aGlzLnVybCxcbiAgICAgICAgICAgIC8vIHJlc3Qgb2YgcHJvcHMgY29tZSBmcm9tIFJlcXVlc3RcbiAgICAgICAgICAgIGJvZHlVc2VkOiB0aGlzLmJvZHlVc2VkLFxuICAgICAgICAgICAgY2FjaGU6IHRoaXMuY2FjaGUsXG4gICAgICAgICAgICBjcmVkZW50aWFsczogdGhpcy5jcmVkZW50aWFscyxcbiAgICAgICAgICAgIGRlc3RpbmF0aW9uOiB0aGlzLmRlc3RpbmF0aW9uLFxuICAgICAgICAgICAgaGVhZGVyczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBpbnRlZ3JpdHk6IHRoaXMuaW50ZWdyaXR5LFxuICAgICAgICAgICAga2VlcGFsaXZlOiB0aGlzLmtlZXBhbGl2ZSxcbiAgICAgICAgICAgIG1ldGhvZDogdGhpcy5tZXRob2QsXG4gICAgICAgICAgICBtb2RlOiB0aGlzLm1vZGUsXG4gICAgICAgICAgICByZWRpcmVjdDogdGhpcy5yZWRpcmVjdCxcbiAgICAgICAgICAgIHJlZmVycmVyOiB0aGlzLnJlZmVycmVyLFxuICAgICAgICAgICAgcmVmZXJyZXJQb2xpY3k6IHRoaXMucmVmZXJyZXJQb2xpY3ksXG4gICAgICAgICAgICBzaWduYWw6IHRoaXMuc2lnbmFsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGdldCBjb29raWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmNvb2tpZXM7XG4gICAgfVxuICAgIGdldCBnZW8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uZ2VvO1xuICAgIH1cbiAgICBnZXQgaXAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uaXA7XG4gICAgfVxuICAgIGdldCBuZXh0VXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLm5leHRVcmw7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiBgcGFnZWAgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvdXIgb2YgYFVSTFBhdHRlcm5gLlxuICAgKiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXG4gICAqLyBnZXQgcGFnZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlbW92ZWRQYWdlRXJyb3IoKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGB1YWAgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxuICAgKiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcGFyc2UtdXNlci1hZ2VudFxuICAgKi8gZ2V0IHVhKCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVtb3ZlZFVBRXJyb3IoKTtcbiAgICB9XG4gICAgZ2V0IHVybCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS51cmw7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _adapters_reflect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adapters/reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"delete\":\n                    case \"set\":\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies) {\n                                    headers.set(\"x-middleware-set-cookie\", result.getAll().map((cookie)=>(0,_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_0__.stringifyCookie)(cookie)).join(\",\"));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return _adapters_reflect__WEBPACK_IMPORTED_MODULE_3__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_1__.NextURL(init.url, {\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.toNodeOutgoingHttpHeaders)(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_2__.validateURL)(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_2__.validateURL)(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtRTtBQUM3QjtBQUM0QjtBQUNkO0FBQ1I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQVc7QUFDWCwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLDRCQUE0Qix3RUFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Qsd0VBQWU7QUFDckUseUdBQXlHLDRFQUFlO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2REFBYztBQUM3QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxnQ0FBZ0MsOENBQU87QUFDdkMseUJBQXlCLGlFQUF5QjtBQUNsRDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtREFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsbURBQVc7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVzcG9uc2UuanM/MmY3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnlDb29raWUgfSBmcm9tIFwiLi4vLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2Nvb2tpZXNcIjtcbmltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcbmltcG9ydCB7IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMsIHZhbGlkYXRlVVJMIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBSZWZsZWN0QWRhcHRlciB9IGZyb20gXCIuL2FkYXB0ZXJzL3JlZmxlY3RcIjtcbmltcG9ydCB7IFJlc3BvbnNlQ29va2llcyB9IGZyb20gXCIuL2Nvb2tpZXNcIjtcbmNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbChcImludGVybmFsIHJlc3BvbnNlXCIpO1xuY29uc3QgUkVESVJFQ1RTID0gbmV3IFNldChbXG4gICAgMzAxLFxuICAgIDMwMixcbiAgICAzMDMsXG4gICAgMzA3LFxuICAgIDMwOFxuXSk7XG5mdW5jdGlvbiBoYW5kbGVNaWRkbGV3YXJlRmllbGQoaW5pdCwgaGVhZGVycykge1xuICAgIHZhciBfaW5pdF9yZXF1ZXN0O1xuICAgIGlmIChpbml0ID09IG51bGwgPyB2b2lkIDAgOiAoX2luaXRfcmVxdWVzdCA9IGluaXQucmVxdWVzdCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9pbml0X3JlcXVlc3QuaGVhZGVycykge1xuICAgICAgICBpZiAoIShpbml0LnJlcXVlc3QuaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1ZXN0LmhlYWRlcnMgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBIZWFkZXJzXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5pdC5yZXF1ZXN0LmhlYWRlcnMpe1xuICAgICAgICAgICAgaGVhZGVycy5zZXQoXCJ4LW1pZGRsZXdhcmUtcmVxdWVzdC1cIiArIGtleSwgdmFsdWUpO1xuICAgICAgICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVycy5zZXQoXCJ4LW1pZGRsZXdhcmUtb3ZlcnJpZGUtaGVhZGVyc1wiLCBrZXlzLmpvaW4oXCIsXCIpKTtcbiAgICB9XG59XG4vKipcbiAqIFRoaXMgY2xhc3MgZXh0ZW5kcyB0aGUgW1dlYiBgUmVzcG9uc2VgIEFQSV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQVBJL1Jlc3BvbnNlKSB3aXRoIGFkZGl0aW9uYWwgY29udmVuaWVuY2UgbWV0aG9kcy5cbiAqXG4gKiBSZWFkIG1vcmU6IFtOZXh0LmpzIERvY3M6IGBOZXh0UmVzcG9uc2VgXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvbmV4dC1yZXNwb25zZSlcbiAqLyBleHBvcnQgY2xhc3MgTmV4dFJlc3BvbnNlIGV4dGVuZHMgUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQgPSB7fSl7XG4gICAgICAgIHN1cGVyKGJvZHksIGluaXQpO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gdGhpcy5oZWFkZXJzO1xuICAgICAgICBjb25zdCBjb29raWVzID0gbmV3IFJlc3BvbnNlQ29va2llcyhoZWFkZXJzKTtcbiAgICAgICAgY29uc3QgY29va2llc1Byb3h5ID0gbmV3IFByb3h5KGNvb2tpZXMsIHtcbiAgICAgICAgICAgIGdldCAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIHN3aXRjaChwcm9wKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRlbGV0ZVwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic2V0XCI6XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICguLi5hcmdzKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBSZWZsZWN0LmFwcGx5KHRhcmdldFtwcm9wXSwgdGFyZ2V0LCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3SGVhZGVycyA9IG5ldyBIZWFkZXJzKGhlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUmVzcG9uc2VDb29raWVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1zZXQtY29va2llXCIsIHJlc3VsdC5nZXRBbGwoKS5tYXAoKGNvb2tpZSk9PnN0cmluZ2lmeUNvb2tpZShjb29raWUpKS5qb2luKFwiLFwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlTWlkZGxld2FyZUZpZWxkKGluaXQsIG5ld0hlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVmbGVjdEFkYXB0ZXIuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbSU5URVJOQUxTXSA9IHtcbiAgICAgICAgICAgIGNvb2tpZXM6IGNvb2tpZXNQcm94eSxcbiAgICAgICAgICAgIHVybDogaW5pdC51cmwgPyBuZXcgTmV4dFVSTChpbml0LnVybCwge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMoaGVhZGVycyksXG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZzogaW5pdC5uZXh0Q29uZmlnXG4gICAgICAgICAgICB9KSA6IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgLy8gcmVzdCBvZiBwcm9wcyBjb21lIGZyb20gUmVzcG9uc2VcbiAgICAgICAgICAgIGJvZHk6IHRoaXMuYm9keSxcbiAgICAgICAgICAgIGJvZHlVc2VkOiB0aGlzLmJvZHlVc2VkLFxuICAgICAgICAgICAgaGVhZGVyczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBvazogdGhpcy5vayxcbiAgICAgICAgICAgIHJlZGlyZWN0ZWQ6IHRoaXMucmVkaXJlY3RlZCxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiB0aGlzLnN0YXR1c1RleHQsXG4gICAgICAgICAgICB0eXBlOiB0aGlzLnR5cGVcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvb2tpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcbiAgICB9XG4gICAgc3RhdGljIGpzb24oYm9keSwgaW5pdCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IFJlc3BvbnNlLmpzb24oYm9keSwgaW5pdCk7XG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHJlc3BvbnNlLmJvZHksIHJlc3BvbnNlKTtcbiAgICB9XG4gICAgc3RhdGljIHJlZGlyZWN0KHVybCwgaW5pdCkge1xuICAgICAgICBjb25zdCBzdGF0dXMgPSB0eXBlb2YgaW5pdCA9PT0gXCJudW1iZXJcIiA/IGluaXQgOiAoaW5pdCA9PSBudWxsID8gdm9pZCAwIDogaW5pdC5zdGF0dXMpID8/IDMwNztcbiAgICAgICAgaWYgKCFSRURJUkVDVFMuaGFzKHN0YXR1cykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdGYWlsZWQgdG8gZXhlY3V0ZSBcInJlZGlyZWN0XCIgb24gXCJyZXNwb25zZVwiOiBJbnZhbGlkIHN0YXR1cyBjb2RlJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW5pdE9iaiA9IHR5cGVvZiBpbml0ID09PSBcIm9iamVjdFwiID8gaW5pdCA6IHt9O1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5pdE9iaiA9PSBudWxsID8gdm9pZCAwIDogaW5pdE9iai5oZWFkZXJzKTtcbiAgICAgICAgaGVhZGVycy5zZXQoXCJMb2NhdGlvblwiLCB2YWxpZGF0ZVVSTCh1cmwpKTtcbiAgICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgLi4uaW5pdE9iaixcbiAgICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgICAgICBzdGF0dXNcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyByZXdyaXRlKGRlc3RpbmF0aW9uLCBpbml0KSB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhpbml0ID09IG51bGwgPyB2b2lkIDAgOiBpbml0LmhlYWRlcnMpO1xuICAgICAgICBoZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1yZXdyaXRlXCIsIHZhbGlkYXRlVVJMKGRlc3RpbmF0aW9uKSk7XG4gICAgICAgIGhhbmRsZU1pZGRsZXdhcmVGaWVsZChpbml0LCBoZWFkZXJzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgLi4uaW5pdCxcbiAgICAgICAgICAgIGhlYWRlcnNcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBuZXh0KGluaXQpIHtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXQuaGVhZGVycyk7XG4gICAgICAgIGhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLW5leHRcIiwgXCIxXCIpO1xuICAgICAgICBoYW5kbGVNaWRkbGV3YXJlRmllbGQoaW5pdCwgaGVhZGVycyk7XG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgIC4uLmluaXQsXG4gICAgICAgICAgICBoZWFkZXJzXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   URLPattern: () => (/* binding */ GlobalURLPattern)\n/* harmony export */ });\nconst GlobalURLPattern = // @ts-expect-error: URLPattern is not available in Node.js\ntypeof URLPattern === \"undefined\" ? undefined : URLPattern;\n\n\n//# sourceMappingURL=url-pattern.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91cmwtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUMwQzs7QUFFMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91cmwtcGF0dGVybi5qcz9hZGY4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEdsb2JhbFVSTFBhdHRlcm4gPSAvLyBAdHMtZXhwZWN0LWVycm9yOiBVUkxQYXR0ZXJuIGlzIG5vdCBhdmFpbGFibGUgaW4gTm9kZS5qc1xudHlwZW9mIFVSTFBhdHRlcm4gPT09IFwidW5kZWZpbmVkXCIgPyB1bmRlZmluZWQgOiBVUkxQYXR0ZXJuO1xuZXhwb3J0IHsgR2xvYmFsVVJMUGF0dGVybiBhcyBVUkxQYXR0ZXJuIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC1wYXR0ZXJuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBot: () => (/* binding */ isBot),\n/* harmony export */   userAgent: () => (/* binding */ userAgent),\n/* harmony export */   userAgentFromString: () => (/* binding */ userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/ua-parser-js */ \"(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\");\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction isBot(input) {\n    return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Google-InspectionTool|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(input);\n}\nfunction userAgentFromString(input) {\n    return {\n        ...next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default()(input),\n        isBot: input === undefined ? false : isBot(input)\n    };\n}\nfunction userAgent({ headers }) {\n    return userAgentFromString(headers.get(\"user-agent\") || undefined);\n}\n\n//# sourceMappingURL=user-agent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNEO0FBQy9DO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSxXQUFXLHNFQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQixTQUFTO0FBQ3JDO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50LmpzPzhkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNldWEgZnJvbSBcIm5leHQvZGlzdC9jb21waWxlZC91YS1wYXJzZXItanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc0JvdChpbnB1dCkge1xuICAgIHJldHVybiAvR29vZ2xlYm90fE1lZGlhcGFydG5lcnMtR29vZ2xlfEFkc0JvdC1Hb29nbGV8Z29vZ2xld2VibGlnaHR8U3RvcmVib3QtR29vZ2xlfEdvb2dsZS1QYWdlUmVuZGVyZXJ8R29vZ2xlLUluc3BlY3Rpb25Ub29sfEJpbmdib3R8QmluZ1ByZXZpZXd8U2x1cnB8RHVja0R1Y2tCb3R8YmFpZHVzcGlkZXJ8eWFuZGV4fHNvZ291fExpbmtlZEluQm90fGJpdGx5Ym90fHR1bWJscnx2a1NoYXJlfHF1b3JhIGxpbmsgcHJldmlld3xmYWNlYm9va2V4dGVybmFsaGl0fGZhY2Vib29rY2F0YWxvZ3xUd2l0dGVyYm90fGFwcGxlYm90fHJlZGRpdGJvdHxTbGFja2JvdHxEaXNjb3JkYm90fFdoYXRzQXBwfFNreXBlVXJpUHJldmlld3xpYV9hcmNoaXZlci9pLnRlc3QoaW5wdXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZXJBZ2VudEZyb21TdHJpbmcoaW5wdXQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5wYXJzZXVhKGlucHV0KSxcbiAgICAgICAgaXNCb3Q6IGlucHV0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IGlzQm90KGlucHV0KVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlckFnZW50KHsgaGVhZGVycyB9KSB7XG4gICAgcmV0dXJuIHVzZXJBZ2VudEZyb21TdHJpbmcoaGVhZGVycy5nZXQoXCJ1c2VyLWFnZW50XCIpIHx8IHVuZGVmaW5lZCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXItYWdlbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\", 1)[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBOzs7OztDQUtDLEdBQ00sU0FBU0EsWUFDZEMsTUFBb0MsRUFDcENDLE9BQTZCO0lBRTdCLDJFQUEyRTtJQUMzRSxZQUFZO0lBQ1osSUFBSUM7SUFDSixJQUFJRCxDQUFBQSxXQUFBQSxPQUFBQSxLQUFBQSxJQUFBQSxRQUFTRSxJQUFJLEtBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSixRQUFRRSxJQUFJLEdBQUc7UUFDakRELFdBQVdELFFBQVFFLElBQUksQ0FBQ0csUUFBUSxHQUFHQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRTtJQUNyRCxPQUFPLElBQUlQLE9BQU9FLFFBQVEsRUFBRTtRQUMxQkEsV0FBV0YsT0FBT0UsUUFBUTtJQUM1QixPQUFPO0lBRVAsT0FBT0EsU0FBU00sV0FBVztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLnRzPzMwMmUiXSwibmFtZXMiOlsiZ2V0SG9zdG5hbWUiLCJwYXJzZWQiLCJoZWFkZXJzIiwiaG9zdG5hbWUiLCJob3N0IiwiQXJyYXkiLCJpc0FycmF5IiwidG9TdHJpbmciLCJzcGxpdCIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\", 1)[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxTQUFTQSxtQkFDZEMsV0FBNEIsRUFDNUJDLFFBQWlCLEVBQ2pCQyxjQUF1QjtJQUV2QixJQUFJLENBQUNGLGFBQWE7SUFFbEIsSUFBSUUsZ0JBQWdCO1FBQ2xCQSxpQkFBaUJBLGVBQWVDLFdBQVc7SUFDN0M7SUFFQSxLQUFLLE1BQU1DLFFBQVFKLFlBQWE7WUFFUEksY0FJckJBO1FBTEYseUJBQXlCO1FBQ3pCLE1BQU1DLGlCQUFBQSxDQUFpQkQsZUFBQUEsS0FBS0UsTUFBTSxxQkFBWEYsYUFBYUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQ0osV0FBVztRQUNoRSxJQUNFRixhQUFhSSxrQkFDYkgsbUJBQW1CRSxLQUFLSSxhQUFhLENBQUNMLFdBQVcsUUFDakRDLGdCQUFBQSxLQUFLSyxPQUFPLHFCQUFaTCxjQUFjTSxJQUFJLENBQUMsQ0FBQ0MsU0FBV0EsT0FBT1IsV0FBVyxPQUFPRCxlQUFBQSxHQUN4RDtZQUNBLE9BQU9FO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLnRzPzdkZWIiXSwibmFtZXMiOlsiZGV0ZWN0RG9tYWluTG9jYWxlIiwiZG9tYWluSXRlbXMiLCJob3N0bmFtZSIsImRldGVjdGVkTG9jYWxlIiwidG9Mb3dlckNhc2UiLCJpdGVtIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBS0E7Ozs7Ozs7O0NBUUMsR0FDTSxTQUFTQSxvQkFDZEMsUUFBZ0IsRUFDaEJDLE9BQWtCO0lBRWxCLElBQUlDO0lBQ0osK0RBQStEO0lBQy9ELE1BQU1DLGdCQUFnQkgsU0FBU0ksS0FBSyxDQUFDO0lBRW5DSCxDQUFBQSxXQUFXLEVBQUUsRUFBRUksSUFBSSxDQUFDLENBQUNDO1FBQ3JCLElBQ0VILGFBQWEsQ0FBQyxFQUFFLElBQ2hCQSxhQUFhLENBQUMsRUFBRSxDQUFDSSxXQUFXLE9BQU9ELE9BQU9DLFdBQVcsSUFDckQ7WUFDQUwsaUJBQWlCSTtZQUNqQkgsY0FBY0ssTUFBTSxDQUFDLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLElBQUksQ0FBQyxRQUFRO1lBQ3RDLE9BQU87UUFDVDtRQUNBLE9BQU87SUFDVDtJQUVBLE9BQU87UUFDTFQ7UUFDQUU7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC50cz8wYjczIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJkZXRlY3RlZExvY2FsZSIsInBhdGhuYW1lUGFydHMiLCJzcGxpdCIsInNvbWUiLCJsb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsInNwbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLFNBQVNBLG1CQUFtQkMsSUFBWTtJQUM3QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFJQTtBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoLnRzPzE4ZjIiXSwibmFtZXMiOlsiZW5zdXJlTGVhZGluZ1NsYXNoIiwicGF0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDQTtBQUVqRDs7OztDQUlDLEdBQ00sU0FBU0UsVUFDZEMsSUFBWSxFQUNaQyxNQUF1QixFQUN2QkMsYUFBc0IsRUFDdEJDLFlBQXNCO0lBRXRCLDRFQUE0RTtJQUM1RSxzQkFBc0I7SUFDdEIsSUFBSSxDQUFDRixVQUFVQSxXQUFXQyxlQUFlLE9BQU9GO0lBRWhELE1BQU1JLFFBQVFKLEtBQUtLLFdBQVc7SUFFOUIsMkVBQTJFO0lBQzNFLGlDQUFpQztJQUNqQyxJQUFJLENBQUNGLGNBQWM7UUFDakIsSUFBSUwsK0RBQUFBLENBQWNNLE9BQU8sU0FBUyxPQUFPSjtRQUN6QyxJQUFJRiwrREFBQUEsQ0FBY00sT0FBTyxNQUFJSCxPQUFPSSxXQUFXLEtBQU8sT0FBT0w7SUFDL0Q7SUFFQSxxQ0FBcUM7SUFDckMsT0FBT0gsK0RBQUFBLENBQWNHLE1BQU0sTUFBSUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlLnRzPzNhMTAiXSwibmFtZXMiOlsiYWRkUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJhZGRMb2NhbGUiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7Q0FHQyxHQUNNLFNBQVNDLGNBQWNDLElBQVksRUFBRUMsTUFBZTtJQUN6RCxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDcEMsT0FBT0Q7SUFDVDtJQUVBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBQUEsQ0FBVUU7SUFDNUMsT0FBTyxLQUFHQyxTQUFTRSxXQUFXQyxRQUFRQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC50cz9iNDU1Il0sIm5hbWVzIjpbInBhcnNlUGF0aCIsImFkZFBhdGhQcmVmaXgiLCJwYXRoIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7O0NBSUMsR0FDTSxTQUFTQyxjQUFjQyxJQUFZLEVBQUVDLE1BQWU7SUFDekQsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ3BDLE9BQU9EO0lBQ1Q7SUFFQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQUFBLENBQVVFO0lBQzVDLE9BQU8sS0FBR0csV0FBV0YsU0FBU0csUUFBUUM7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1zdWZmaXgudHM/NTBkYiJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJhZGRQYXRoU3VmZml4IiwicGF0aCIsInN1ZmZpeCIsInN0YXJ0c1dpdGgiLCJwYXRobmFtZSIsInF1ZXJ5IiwiaGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscURL: () => (/* binding */ normalizeRscURL)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, \"$1\");\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUU7QUFDM0I7QUFFOUM7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCQyxHQUNNLFNBQVNFLGlCQUFpQkMsS0FBYTtJQUM1QyxPQUFPSCxtRkFBQUEsQ0FDTEcsTUFBTUMsS0FBSyxDQUFDLEtBQUtDLE1BQU0sQ0FBQyxDQUFDQyxVQUFVQyxTQUFTQyxPQUFPQztRQUNqRCw4QkFBOEI7UUFDOUIsSUFBSSxDQUFDRixTQUFTO1lBQ1osT0FBT0Q7UUFDVDtRQUVBLHNCQUFzQjtRQUN0QixJQUFJTCx3REFBQUEsQ0FBZU0sVUFBVTtZQUMzQixPQUFPRDtRQUNUO1FBRUEsaUNBQWlDO1FBQ2pDLElBQUlDLE9BQU8sQ0FBQyxFQUFFLEtBQUssS0FBSztZQUN0QixPQUFPRDtRQUNUO1FBRUEsdURBQXVEO1FBQ3ZELElBQ0UsQ0FBQ0MsWUFBWSxVQUFVQSxZQUFZLFlBQ25DQyxVQUFVQyxTQUFTQyxNQUFNLEdBQUcsR0FDNUI7WUFDQSxPQUFPSjtRQUNUO1FBRUEsT0FBT0EsV0FBWSxNQUFHQztJQUN4QixHQUFHO0FBRVA7QUFFQTs7O0NBR0MsR0FDTSxTQUFTSSxnQkFBZ0JDLEdBQVc7SUFDekMsT0FBT0EsSUFBSUMsT0FBTyxDQUNoQixlQUVBO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hcHAtcGF0aHMudHM/ZDQ2ZCJdLCJuYW1lcyI6WyJlbnN1cmVMZWFkaW5nU2xhc2giLCJpc0dyb3VwU2VnbWVudCIsIm5vcm1hbGl6ZUFwcFBhdGgiLCJyb3V0ZSIsInNwbGl0IiwicmVkdWNlIiwicGF0aG5hbWUiLCJzZWdtZW50IiwiaW5kZXgiLCJzZWdtZW50cyIsImxlbmd0aCIsIm5vcm1hbGl6ZVJzY1VSTCIsInVybCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUM2RDtBQUNaO0FBQ0E7QUFDVDtBQU9qQyxTQUFTSSx1QkFBdUJDLElBQWtCO0lBQ3ZELElBQUlDLFdBQVdILHNEQUFBQSxDQUNiRSxLQUFLQyxRQUFRLEVBQ2JELEtBQUtFLE1BQU0sRUFDWEYsS0FBS0csT0FBTyxHQUFHQyxZQUFZSixLQUFLSyxhQUFhLEVBQzdDTCxLQUFLTSxZQUFZO0lBR25CLElBQUlOLEtBQUtHLE9BQU8sSUFBSSxDQUFDSCxLQUFLTyxhQUFhLEVBQUU7UUFDdkNOLFdBQVdOLDJFQUFBQSxDQUFvQk07SUFDakM7SUFFQSxJQUFJRCxLQUFLRyxPQUFPLEVBQUU7UUFDaEJGLFdBQVdKLCtEQUFBQSxDQUNURCwrREFBQUEsQ0FBY0ssVUFBVSxpQkFBZUQsS0FBS0csT0FBTyxHQUNuREgsS0FBS0MsUUFBUSxLQUFLLE1BQU0sZUFBZTtJQUUzQztJQUVBQSxXQUFXTCwrREFBQUEsQ0FBY0ssVUFBVUQsS0FBS1EsUUFBUTtJQUNoRCxPQUFPLENBQUNSLEtBQUtHLE9BQU8sSUFBSUgsS0FBS08sYUFBYSxHQUN0QyxDQUFDTixTQUFTUSxRQUFRLENBQUMsT0FDakJaLCtEQUFBQSxDQUFjSSxVQUFVLE9BQ3hCQSxXQUNGTiwyRUFBQUEsQ0FBb0JNO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby50cz8wZTY1Il0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJhZGRQYXRoUHJlZml4IiwiYWRkUGF0aFN1ZmZpeCIsImFkZExvY2FsZSIsImZvcm1hdE5leHRQYXRobmFtZUluZm8iLCJpbmZvIiwicGF0aG5hbWUiLCJsb2NhbGUiLCJidWlsZElkIiwidW5kZWZpbmVkIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsInRyYWlsaW5nU2xhc2giLCJiYXNlUGF0aCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNFO0FBQ2Y7QUFDTjtBQWtEMUMsU0FBU0csb0JBQ2RDLFFBQWdCLEVBQ2hCQyxPQUFnQjtRQUUwQkE7SUFBMUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsYUFBYSxFQUFFLEdBQUdILENBQUFBLHNCQUFBQSxRQUFRSSxVQUFVLFlBQWxCSixzQkFBc0IsQ0FBQztJQUNqRSxNQUFNSyxPQUF5QjtRQUM3Qk47UUFDQUksZUFBZUosYUFBYSxNQUFNQSxTQUFTTyxRQUFRLENBQUMsT0FBT0g7SUFDN0Q7SUFFQSxJQUFJRixZQUFZSiwrREFBQUEsQ0FBY1EsS0FBS04sUUFBUSxFQUFFRSxXQUFXO1FBQ3RESSxLQUFLTixRQUFRLEdBQUdILHFFQUFBQSxDQUFpQlMsS0FBS04sUUFBUSxFQUFFRTtRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNsQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS04sUUFBUTtJQUV4QyxJQUNFTSxLQUFLTixRQUFRLENBQUNTLFVBQVUsQ0FBQyxtQkFDekJILEtBQUtOLFFBQVEsQ0FBQ08sUUFBUSxDQUFDLFVBQ3ZCO1FBQ0EsTUFBTUcsUUFBUUosS0FBS04sUUFBUSxDQUN4QlcsT0FBTyxDQUFDLG9CQUFvQixJQUM1QkEsT0FBTyxDQUFDLFdBQVcsSUFDbkJDLEtBQUssQ0FBQztRQUVULE1BQU1DLFVBQVVILEtBQUssQ0FBQyxFQUFFO1FBQ3hCSixLQUFLTyxPQUFPLEdBQUdBO1FBQ2ZMLHVCQUNFRSxLQUFLLENBQUMsRUFBRSxLQUFLLFVBQVUsTUFBSUEsTUFBTUksS0FBSyxDQUFDLEdBQUdDLElBQUksQ0FBQyxPQUFTO1FBRTFELHNEQUFzRDtRQUN0RCxrREFBa0Q7UUFDbEQsSUFBSWQsUUFBUWUsU0FBUyxLQUFLLE1BQU07WUFDOUJWLEtBQUtOLFFBQVEsR0FBR1E7UUFDbEI7SUFDRjtJQUVBLDRFQUE0RTtJQUM1RSx5QkFBeUI7SUFDekIsSUFBSUwsTUFBTTtRQUNSLElBQUljLFNBQVNoQixRQUFRaUIsWUFBWSxHQUM3QmpCLFFBQVFpQixZQUFZLENBQUNDLE9BQU8sQ0FBQ2IsS0FBS04sUUFBUSxJQUMxQ0osZ0ZBQUFBLENBQW9CVSxLQUFLTixRQUFRLEVBQUVHLEtBQUtpQixPQUFPO1FBRW5EZCxLQUFLZSxNQUFNLEdBQUdKLE9BQU9LLGNBQWM7WUFDbkJMO1FBQWhCWCxLQUFLTixRQUFRLEdBQUdpQixDQUFBQSxtQkFBQUEsT0FBT2pCLFFBQVEsWUFBZmlCLG1CQUFtQlgsS0FBS04sUUFBUTtRQUVoRCxJQUFJLENBQUNpQixPQUFPSyxjQUFjLElBQUloQixLQUFLTyxPQUFPLEVBQUU7WUFDMUNJLFNBQVNoQixRQUFRaUIsWUFBWSxHQUN6QmpCLFFBQVFpQixZQUFZLENBQUNDLE9BQU8sQ0FBQ1gsd0JBQzdCWixnRkFBQUEsQ0FBb0JZLHNCQUFzQkwsS0FBS2lCLE9BQU87WUFFMUQsSUFBSUgsT0FBT0ssY0FBYyxFQUFFO2dCQUN6QmhCLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztZQUNyQztRQUNGO0lBQ0Y7SUFDQSxPQUFPaEI7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8udHM/NTFmNiJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwicGF0aG5hbWUiLCJvcHRpb25zIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRobmFtZU5vRGF0YVByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJwYXJzZURhdGEiLCJyZXN1bHQiLCJpMThuUHJvdmlkZXIiLCJhbmFseXplIiwibG9jYWxlcyIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLFNBQVNBLFVBQVVDLElBQVk7SUFDcEMsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFBQTtJQUVuRSxJQUFJRyxZQUFZSCxZQUFZLENBQUMsR0FBRztRQUM5QixPQUFPO1lBQ0xJLFVBQVVMLEtBQUtNLFNBQVMsQ0FBQyxHQUFHRixXQUFXRCxhQUFhRjtZQUNwRE0sT0FBT0gsV0FDSEosS0FBS00sU0FBUyxDQUFDSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFDeEQ7WUFDSkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLEtBQUssQ0FBQ1QsYUFBYTtRQUNqRDtJQUNGO0lBRUEsT0FBTztRQUFFSSxVQUFVTDtRQUFNTyxPQUFPO1FBQUlFLE1BQU07SUFBRztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGgudHM/YTM5ZSJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJwYXRoIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInF1ZXJ5SW5kZXgiLCJoYXNRdWVyeSIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwicXVlcnkiLCJ1bmRlZmluZWQiLCJoYXNoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBRXhDOzs7Ozs7Q0FNQyxHQUNNLFNBQVNDLGNBQWNDLElBQVksRUFBRUMsTUFBYztJQUN4RCxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUM1QixPQUFPO0lBQ1Q7SUFFQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHSixzREFBQUEsQ0FBVUU7SUFDL0IsT0FBT0UsYUFBYUQsVUFBVUMsU0FBU0MsVUFBVSxDQUFDRixTQUFTO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LnRzPzkwOWEiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aEhhc1ByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FDTSxTQUFTQSxjQUFjQyxHQUFvQixFQUFFQyxJQUFrQjtJQUNwRSxNQUFNQyxVQUFVLE9BQU9ELFNBQVMsV0FBVyxJQUFJRSxJQUFJRixRQUFRQTtJQUMzRCxNQUFNRyxXQUFXLElBQUlELElBQUlILEtBQUtDO0lBQzlCLE1BQU1JLFNBQVNILFFBQVdJLFFBQVEsR0FBQyxPQUFJSixRQUFRSyxJQUFJO0lBQ25ELE9BQU9ILFNBQVlFLFFBQVEsR0FBQyxPQUFJRixTQUFTRyxJQUFJLEtBQU9GLFNBQ2hERCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUNwQ0QsU0FBU0ksUUFBUTtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLnRzP2JjNzYiXSwibmFtZXMiOlsicmVsYXRpdml6ZVVSTCIsInVybCIsImJhc2UiLCJiYXNlVVJMIiwiVVJMIiwicmVsYXRpdmUiLCJvcmlnaW4iLCJwcm90b2NvbCIsImhvc3QiLCJ0b1N0cmluZyIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBRWpEOzs7Ozs7O0NBT0MsR0FDTSxTQUFTQyxpQkFBaUJDLElBQVksRUFBRUMsTUFBYztJQUMzRCx5RUFBeUU7SUFDekUsMEVBQTBFO0lBQzFFLGtCQUFrQjtJQUNsQixFQUFFO0lBQ0Ysb0JBQW9CO0lBQ3BCLEVBQUU7SUFDRixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixJQUFJLENBQUNILCtEQUFBQSxDQUFjRSxNQUFNQyxTQUFTO1FBQ2hDLE9BQU9EO0lBQ1Q7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTUUsZ0JBQWdCRixLQUFLRyxLQUFLLENBQUNGLE9BQU9HLE1BQU07SUFFOUMsMkVBQTJFO0lBQzNFLElBQUlGLGNBQWNHLFVBQVUsQ0FBQyxNQUFNO1FBQ2pDLE9BQU9IO0lBQ1Q7SUFFQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBSUE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC50cz8wNzE0Il0sIm5hbWVzIjpbInBhdGhIYXNQcmVmaXgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aCIsInByZWZpeCIsIndpdGhvdXRQcmVmaXgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDTSxTQUFTQSxvQkFBb0JDLEtBQWE7SUFDL0MsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC50cz9lOTgyIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJyb3V0ZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SEGMENT_KEY: () => (/* binding */ DEFAULT_SEGMENT_KEY),\n/* harmony export */   PAGE_SEGMENT_KEY: () => (/* binding */ PAGE_SEGMENT_KEY),\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n}\nconst PAGE_SEGMENT_KEY = \"__PAGE__\";\nconst DEFAULT_SEGMENT_KEY = \"__DEFAULT__\"; //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLGVBQWVDLE9BQWU7SUFDNUMsc0NBQXNDO0lBQ3RDLE9BQU9BLE9BQU8sQ0FBQyxFQUFFLEtBQUssT0FBT0EsUUFBUUMsUUFBUSxDQUFDO0FBQ2hEO0FBRU8sTUFBTUMsbUJBQW1CLFdBQVU7QUFDbkMsTUFBTUMsc0JBQXNCLGNBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9zaGFyZWQvbGliL3NlZ21lbnQudHM/YWQyNSJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCIsIlBBR0VfU0VHTUVOVF9LRVkiLCJERUZBVUxUX1NFR01FTlRfS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, \"next-test-proxy-port\");\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, \"next-test-data\") || \"\";\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FHTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUIsbUJBQU8sQ0FBQywwQ0FBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2V4cGVyaW1lbnRhbC90ZXN0bW9kZS9jb250ZXh0LmpzP2RiMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRUZXN0UmVxSW5mbzogbnVsbCxcbiAgICB3aXRoUmVxdWVzdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBnZXRUZXN0UmVxSW5mbzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRUZXN0UmVxSW5mbztcbiAgICB9LFxuICAgIHdpdGhSZXF1ZXN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhSZXF1ZXN0O1xuICAgIH1cbn0pO1xuY29uc3QgX25vZGVhc3luY19ob29rcyA9IHJlcXVpcmUoXCJub2RlOmFzeW5jX2hvb2tzXCIpO1xuY29uc3QgdGVzdFN0b3JhZ2UgPSBuZXcgX25vZGVhc3luY19ob29rcy5Bc3luY0xvY2FsU3RvcmFnZSgpO1xuZnVuY3Rpb24gZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QocmVxLCByZWFkZXIpIHtcbiAgICBjb25zdCBwcm94eVBvcnRIZWFkZXIgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtcHJveHktcG9ydFwiKTtcbiAgICBpZiAoIXByb3h5UG9ydEhlYWRlcikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSByZWFkZXIudXJsKHJlcSk7XG4gICAgY29uc3QgcHJveHlQb3J0ID0gTnVtYmVyKHByb3h5UG9ydEhlYWRlcik7XG4gICAgY29uc3QgdGVzdERhdGEgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtZGF0YVwiKSB8fCBcIlwiO1xuICAgIHJldHVybiB7XG4gICAgICAgIHVybCxcbiAgICAgICAgcHJveHlQb3J0LFxuICAgICAgICB0ZXN0RGF0YVxuICAgIH07XG59XG5mdW5jdGlvbiB3aXRoUmVxdWVzdChyZXEsIHJlYWRlciwgZm4pIHtcbiAgICBjb25zdCB0ZXN0UmVxSW5mbyA9IGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKTtcbiAgICBpZiAoIXRlc3RSZXFJbmZvKSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgIH1cbiAgICByZXR1cm4gdGVzdFN0b3JhZ2UucnVuKHRlc3RSZXFJbmZvLCBmbik7XG59XG5mdW5jdGlvbiBnZXRUZXN0UmVxSW5mbyhyZXEsIHJlYWRlcikge1xuICAgIGNvbnN0IHRlc3RSZXFJbmZvID0gdGVzdFN0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAodGVzdFJlcUluZm8pIHtcbiAgICAgICAgcmV0dXJuIHRlc3RSZXFJbmZvO1xuICAgIH1cbiAgICBpZiAocmVxICYmIHJlYWRlcikge1xuICAgICAgICByZXR1cm4gZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QocmVxLCByZWFkZXIpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/fetch.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? \"\").split(\"\\n\");\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes(\"/next/dist/\"));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace(\"webpack-internal:///(rsc)/\", \"\").trim());\n    return stack.join(\"    \");\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: \"fetch\",\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    \"next-test-stack\",\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString(\"base64\") : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, \"base64\") : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: \"POST\",\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw new Error(`Proxy request failed: ${resp.status}`);\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case \"continue\":\n            return originalFetch(request);\n        case \"abort\":\n        case \"unhandled\":\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    __webpack_require__.g.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        __webpack_require__.g.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvZmV0Y2guanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUlMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMseUZBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzR0FBc0c7QUFDbEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsTUFBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3QkFBd0I7QUFDcEMsK0JBQStCLE1BQU07QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0JBQXNCO0FBQ2xDO0FBQ0EseURBQXlELFVBQVU7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsaURBQWlELFlBQVk7QUFDN0Q7QUFDQTtBQUNBLFlBQVksTUFBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGdCQUFnQixFQUFFLFlBQVk7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxQkFBTTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscUJBQU07QUFDZDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXhwZXJpbWVudGFsL3Rlc3Rtb2RlL2ZldGNoLmpzP2ZkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBoYW5kbGVGZXRjaDogbnVsbCxcbiAgICBpbnRlcmNlcHRGZXRjaDogbnVsbCxcbiAgICByZWFkZXI6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgaGFuZGxlRmV0Y2g6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaGFuZGxlRmV0Y2g7XG4gICAgfSxcbiAgICBpbnRlcmNlcHRGZXRjaDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcmNlcHRGZXRjaDtcbiAgICB9LFxuICAgIHJlYWRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZWFkZXI7XG4gICAgfVxufSk7XG5jb25zdCBfY29udGV4dCA9IHJlcXVpcmUoXCIuL2NvbnRleHRcIik7XG5jb25zdCByZWFkZXIgPSB7XG4gICAgdXJsIChyZXEpIHtcbiAgICAgICAgcmV0dXJuIHJlcS51cmw7XG4gICAgfSxcbiAgICBoZWFkZXIgKHJlcSwgbmFtZSkge1xuICAgICAgICByZXR1cm4gcmVxLmhlYWRlcnMuZ2V0KG5hbWUpO1xuICAgIH1cbn07XG5mdW5jdGlvbiBnZXRUZXN0U3RhY2soKSB7XG4gICAgbGV0IHN0YWNrID0gKG5ldyBFcnJvcigpLnN0YWNrID8/IFwiXCIpLnNwbGl0KFwiXFxuXCIpO1xuICAgIC8vIFNraXAgdGhlIGZpcnN0IGxpbmUgYW5kIGZpbmQgZmlyc3Qgbm9uLWVtcHR5IGxpbmUuXG4gICAgZm9yKGxldCBpID0gMTsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgaWYgKHN0YWNrW2ldLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHN0YWNrID0gc3RhY2suc2xpY2UoaSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBGaWx0ZXIgb3V0IGZyYW5tZXdvcmsgbGluZXMuXG4gICAgc3RhY2sgPSBzdGFjay5maWx0ZXIoKGYpPT4hZi5pbmNsdWRlcyhcIi9uZXh0L2Rpc3QvXCIpKTtcbiAgICAvLyBBdCBtb3N0IDUgbGluZXMuXG4gICAgc3RhY2sgPSBzdGFjay5zbGljZSgwLCA1KTtcbiAgICAvLyBDbGVhbnVwIHNvbWUgaW50ZXJuYWwgaW5mbyBhbmQgdHJpbS5cbiAgICBzdGFjayA9IHN0YWNrLm1hcCgocyk9PnMucmVwbGFjZShcIndlYnBhY2staW50ZXJuYWw6Ly8vKHJzYykvXCIsIFwiXCIpLnRyaW0oKSk7XG4gICAgcmV0dXJuIHN0YWNrLmpvaW4oXCIgICAgXCIpO1xufVxuYXN5bmMgZnVuY3Rpb24gYnVpbGRQcm94eVJlcXVlc3QodGVzdERhdGEsIHJlcXVlc3QpIHtcbiAgICBjb25zdCB7IHVybCwgbWV0aG9kLCBoZWFkZXJzLCBib2R5LCBjYWNoZSwgY3JlZGVudGlhbHMsIGludGVncml0eSwgbW9kZSwgcmVkaXJlY3QsIHJlZmVycmVyLCByZWZlcnJlclBvbGljeSB9ID0gcmVxdWVzdDtcbiAgICByZXR1cm4ge1xuICAgICAgICB0ZXN0RGF0YSxcbiAgICAgICAgYXBpOiBcImZldGNoXCIsXG4gICAgICAgIHJlcXVlc3Q6IHtcbiAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgIGhlYWRlcnM6IFtcbiAgICAgICAgICAgICAgICAuLi5BcnJheS5mcm9tKGhlYWRlcnMpLFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgXCJuZXh0LXRlc3Qtc3RhY2tcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0VGVzdFN0YWNrKClcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgYm9keTogYm9keSA/IEJ1ZmZlci5mcm9tKGF3YWl0IHJlcXVlc3QuYXJyYXlCdWZmZXIoKSkudG9TdHJpbmcoXCJiYXNlNjRcIikgOiBudWxsLFxuICAgICAgICAgICAgY2FjaGUsXG4gICAgICAgICAgICBjcmVkZW50aWFscyxcbiAgICAgICAgICAgIGludGVncml0eSxcbiAgICAgICAgICAgIG1vZGUsXG4gICAgICAgICAgICByZWRpcmVjdCxcbiAgICAgICAgICAgIHJlZmVycmVyLFxuICAgICAgICAgICAgcmVmZXJyZXJQb2xpY3lcbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiBidWlsZFJlc3BvbnNlKHByb3h5UmVzcG9uc2UpIHtcbiAgICBjb25zdCB7IHN0YXR1cywgaGVhZGVycywgYm9keSB9ID0gcHJveHlSZXNwb25zZS5yZXNwb25zZTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKGJvZHkgPyBCdWZmZXIuZnJvbShib2R5LCBcImJhc2U2NFwiKSA6IG51bGwsIHtcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBoZWFkZXJzOiBuZXcgSGVhZGVycyhoZWFkZXJzKVxuICAgIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlRmV0Y2gob3JpZ2luYWxGZXRjaCwgcmVxdWVzdCkge1xuICAgIGNvbnN0IHRlc3RJbmZvID0gKDAsIF9jb250ZXh0LmdldFRlc3RSZXFJbmZvKShyZXF1ZXN0LCByZWFkZXIpO1xuICAgIGlmICghdGVzdEluZm8pIHtcbiAgICAgICAgLy8gUGFzc3Rocm91Z2ggbm9uLXRlc3QgcmVxdWVzdHMuXG4gICAgICAgIHJldHVybiBvcmlnaW5hbEZldGNoKHJlcXVlc3QpO1xuICAgIH1cbiAgICBjb25zdCB7IHRlc3REYXRhLCBwcm94eVBvcnQgfSA9IHRlc3RJbmZvO1xuICAgIGNvbnN0IHByb3h5UmVxdWVzdCA9IGF3YWl0IGJ1aWxkUHJveHlSZXF1ZXN0KHRlc3REYXRhLCByZXF1ZXN0KTtcbiAgICBjb25zdCByZXNwID0gYXdhaXQgb3JpZ2luYWxGZXRjaChgaHR0cDovL2xvY2FsaG9zdDoke3Byb3h5UG9ydH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHByb3h5UmVxdWVzdCksXG4gICAgICAgIG5leHQ6IHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGludGVybmFsOiB0cnVlXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoIXJlc3Aub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm94eSByZXF1ZXN0IGZhaWxlZDogJHtyZXNwLnN0YXR1c31gKTtcbiAgICB9XG4gICAgY29uc3QgcHJveHlSZXNwb25zZSA9IGF3YWl0IHJlc3AuanNvbigpO1xuICAgIGNvbnN0IHsgYXBpIH0gPSBwcm94eVJlc3BvbnNlO1xuICAgIHN3aXRjaChhcGkpe1xuICAgICAgICBjYXNlIFwiY29udGludWVcIjpcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZldGNoKHJlcXVlc3QpO1xuICAgICAgICBjYXNlIFwiYWJvcnRcIjpcbiAgICAgICAgY2FzZSBcInVuaGFuZGxlZFwiOlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm94eSByZXF1ZXN0IGFib3J0ZWQgWyR7cmVxdWVzdC5tZXRob2R9ICR7cmVxdWVzdC51cmx9XWApO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBidWlsZFJlc3BvbnNlKHByb3h5UmVzcG9uc2UpO1xufVxuZnVuY3Rpb24gaW50ZXJjZXB0RmV0Y2gob3JpZ2luYWxGZXRjaCkge1xuICAgIGdsb2JhbC5mZXRjaCA9IGZ1bmN0aW9uIHRlc3RGZXRjaChpbnB1dCwgaW5pdCkge1xuICAgICAgICB2YXIgX2luaXRfbmV4dDtcbiAgICAgICAgLy8gUGFzc3Rocm91Z2ggaW50ZXJuYWwgcmVxdWVzdHMuXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKGluaXQgPT0gbnVsbCA/IHZvaWQgMCA6IChfaW5pdF9uZXh0ID0gaW5pdC5uZXh0KSA9PSBudWxsID8gdm9pZCAwIDogX2luaXRfbmV4dC5pbnRlcm5hbCkge1xuICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsRmV0Y2goaW5wdXQsIGluaXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoYW5kbGVGZXRjaChvcmlnaW5hbEZldGNoLCBuZXcgUmVxdWVzdChpbnB1dCwgaW5pdCkpO1xuICAgIH07XG4gICAgcmV0dXJuICgpPT57XG4gICAgICAgIGdsb2JhbC5mZXRjaCA9IG9yaWdpbmFsRmV0Y2g7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/server-edge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst _fetch = __webpack_require__(/*! ./fetch */ \"(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(__webpack_require__.g.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBR0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMseUZBQVc7QUFDcEMsZUFBZSxtQkFBTyxDQUFDLHFGQUFTO0FBQ2hDO0FBQ0Esc0NBQXNDLHFCQUFNO0FBQzVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXhwZXJpbWVudGFsL3Rlc3Rtb2RlL3NlcnZlci1lZGdlLmpzPzFjMDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpbnRlcmNlcHRUZXN0QXBpczogbnVsbCxcbiAgICB3cmFwUmVxdWVzdEhhbmRsZXI6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgaW50ZXJjZXB0VGVzdEFwaXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaW50ZXJjZXB0VGVzdEFwaXM7XG4gICAgfSxcbiAgICB3cmFwUmVxdWVzdEhhbmRsZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd3JhcFJlcXVlc3RIYW5kbGVyO1xuICAgIH1cbn0pO1xuY29uc3QgX2NvbnRleHQgPSByZXF1aXJlKFwiLi9jb250ZXh0XCIpO1xuY29uc3QgX2ZldGNoID0gcmVxdWlyZShcIi4vZmV0Y2hcIik7XG5mdW5jdGlvbiBpbnRlcmNlcHRUZXN0QXBpcygpIHtcbiAgICByZXR1cm4gKDAsIF9mZXRjaC5pbnRlcmNlcHRGZXRjaCkoZ2xvYmFsLmZldGNoKTtcbn1cbmZ1bmN0aW9uIHdyYXBSZXF1ZXN0SGFuZGxlcihoYW5kbGVyKSB7XG4gICAgcmV0dXJuIChyZXEsIGZuKT0+KDAsIF9jb250ZXh0LndpdGhSZXF1ZXN0KShyZXEsIF9mZXRjaC5yZWFkZXIsICgpPT5oYW5kbGVyKHJlcSwgZm4pKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmVyLWVkZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\n");

/***/ }),

/***/ "(middleware)/./src/app/env.ts":
/*!************************!*\
  !*** ./src/app/env.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst env = {\n    appwrite: {\n        endpoint: String(\"https://cloud.appwrite.io/v1\"),\n        projectId: String(\"67b62d57003250dfd5cb\"),\n        apikey: String(process.env.APPWRITE_API_KEY)\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (env);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL2FwcC9lbnYudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLE1BQU07SUFDVkMsVUFBVTtRQUNSQyxVQUFVQyxPQUFPQyw4QkFBeUM7UUFDMURFLFdBQVdILE9BQU9DLHNCQUEyQztRQUM3REksUUFBUUwsT0FBT0MsUUFBUUosR0FBRyxDQUFDUyxnQkFBZ0I7SUFDN0M7QUFDRjtBQUVBLGlFQUFlVCxHQUFHQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZW52LnRzPzgzYWIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZW52ID0ge1xuICBhcHB3cml0ZToge1xuICAgIGVuZHBvaW50OiBTdHJpbmcocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBQV1JJVEVfSE9TVF9VUkwpLFxuICAgIHByb2plY3RJZDogU3RyaW5nKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQUFdSSVRFX1BST0pFQ1RfSUQpLFxuICAgIGFwaWtleTogU3RyaW5nKHByb2Nlc3MuZW52LkFQUFdSSVRFX0FQSV9LRVkpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZW52Il0sIm5hbWVzIjpbImVudiIsImFwcHdyaXRlIiwiZW5kcG9pbnQiLCJTdHJpbmciLCJwcm9jZXNzIiwiTkVYVF9QVUJMSUNfQVBQV1JJVEVfSE9TVF9VUkwiLCJwcm9qZWN0SWQiLCJORVhUX1BVQkxJQ19BUFBXUklURV9QUk9KRUNUX0lEIiwiYXBpa2V5IiwiQVBQV1JJVEVfQVBJX0tFWSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/app/env.ts\n");

/***/ }),

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _models_server_dbSetup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/server/dbSetup */ \"(middleware)/./src/models/server/dbSetup.ts\");\n/* harmony import */ var _models_server_storageSetup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models/server/storageSetup */ \"(middleware)/./src/models/server/storageSetup.ts\");\n\n\n\n// This function can be marked `async` if using `await` inside\nasync function middleware(request) {\n    await Promise.all([\n        (0,_models_server_dbSetup__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n        (0,_models_server_storageSetup__WEBPACK_IMPORTED_MODULE_2__[\"default\"])()\n    ]);\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\n// See \"Matching Paths\" below to learn more\nconst config = {\n    /* match all request paths except for the the ones that starts with:\n  - api\n  - _next/static\n  - _next/image\n  - favicon.com\n\n  */ matcher: [\n        \"/((?!api|_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEM7QUFHUztBQUNVO0FBRTdELDhEQUE4RDtBQUN2RCxlQUFlRyxXQUFXQyxPQUFvQjtJQUVuRCxNQUFNQyxRQUFRQyxHQUFHLENBQUM7UUFDaEJMLGtFQUFhQTtRQUNiQyx1RUFBa0JBO0tBQ25CO0lBQ0QsT0FBT0YscURBQVlBLENBQUNPLElBQUk7QUFDMUI7QUFFQSwyQ0FBMkM7QUFDcEMsTUFBTUMsU0FBUztJQUNwQjs7Ozs7O0VBTUEsR0FDQUMsU0FBUztRQUNQO0tBQ0Q7QUFDSCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9taWRkbGV3YXJlLnRzP2QxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5cbmltcG9ydCBnZXRPckNyZWF0ZURCIGZyb20gJy4vbW9kZWxzL3NlcnZlci9kYlNldHVwJ1xuaW1wb3J0IGdldE9yQ3JlYXRlU3RvcmFnZSBmcm9tICcuL21vZGVscy9zZXJ2ZXIvc3RvcmFnZVNldHVwJ1xuXG4vLyBUaGlzIGZ1bmN0aW9uIGNhbiBiZSBtYXJrZWQgYGFzeW5jYCBpZiB1c2luZyBgYXdhaXRgIGluc2lkZVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgXG4gIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBnZXRPckNyZWF0ZURCKCksXG4gICAgZ2V0T3JDcmVhdGVTdG9yYWdlKClcbiAgXSlcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KClcbn1cbiBcbi8vIFNlZSBcIk1hdGNoaW5nIFBhdGhzXCIgYmVsb3cgdG8gbGVhcm4gbW9yZVxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgLyogbWF0Y2ggYWxsIHJlcXVlc3QgcGF0aHMgZXhjZXB0IGZvciB0aGUgdGhlIG9uZXMgdGhhdCBzdGFydHMgd2l0aDpcbiAgLSBhcGlcbiAgLSBfbmV4dC9zdGF0aWNcbiAgLSBfbmV4dC9pbWFnZVxuICAtIGZhdmljb24uY29tXG5cbiAgKi9cbiAgbWF0Y2hlcjogW1xuICAgIFwiLygoPyFhcGl8X25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvKS4qKVwiLFxuICBdLFxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRPckNyZWF0ZURCIiwiZ2V0T3JDcmVhdGVTdG9yYWdlIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJQcm9taXNlIiwiYWxsIiwibmV4dCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/name.ts":
/*!****************************!*\
  !*** ./src/models/name.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   answerCollection: () => (/* binding */ answerCollection),\n/* harmony export */   commentCollection: () => (/* binding */ commentCollection),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   questionAttachmentBucket: () => (/* binding */ questionAttachmentBucket),\n/* harmony export */   questionCollection: () => (/* binding */ questionCollection),\n/* harmony export */   voteCollection: () => (/* binding */ voteCollection)\n/* harmony export */ });\nconst db = \"main-stackflow\";\nconst questionCollection = \"questions\";\nconst answerCollection = \"answers\";\nconst commentCollection = \"comments\";\nconst voteCollection = \"votes\";\nconst questionAttachmentBucket = \"question-attachment\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9uYW1lLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLE1BQU1BLEtBQUssaUJBQWdCO0FBQzNCLE1BQU1DLHFCQUFxQixZQUFXO0FBQ3RDLE1BQU1DLG1CQUFtQixVQUFTO0FBQ2xDLE1BQU1DLG9CQUFvQixXQUFVO0FBQ3BDLE1BQU1DLGlCQUFpQixRQUFPO0FBQzlCLE1BQU1DLDJCQUEyQixzQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vZGVscy9uYW1lLnRzPzBhMDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRiID0gXCJtYWluLXN0YWNrZmxvd1wiXG5leHBvcnQgY29uc3QgcXVlc3Rpb25Db2xsZWN0aW9uID0gXCJxdWVzdGlvbnNcIlxuZXhwb3J0IGNvbnN0IGFuc3dlckNvbGxlY3Rpb24gPSBcImFuc3dlcnNcIlxuZXhwb3J0IGNvbnN0IGNvbW1lbnRDb2xsZWN0aW9uID0gXCJjb21tZW50c1wiXG5leHBvcnQgY29uc3Qgdm90ZUNvbGxlY3Rpb24gPSBcInZvdGVzXCJcbmV4cG9ydCBjb25zdCBxdWVzdGlvbkF0dGFjaG1lbnRCdWNrZXQgPSBcInF1ZXN0aW9uLWF0dGFjaG1lbnRcIiJdLCJuYW1lcyI6WyJkYiIsInF1ZXN0aW9uQ29sbGVjdGlvbiIsImFuc3dlckNvbGxlY3Rpb24iLCJjb21tZW50Q29sbGVjdGlvbiIsInZvdGVDb2xsZWN0aW9uIiwicXVlc3Rpb25BdHRhY2htZW50QnVja2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/models/name.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/answer.collection.ts":
/*!************************************************!*\
  !*** ./src/models/server/answer.collection.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createAnswerCollection)\n/* harmony export */ });\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\nasync function createAnswerCollection() {\n    // Creating Collection\n    await _config__WEBPACK_IMPORTED_MODULE_2__.databases.createCollection(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.answerCollection, _name__WEBPACK_IMPORTED_MODULE_1__.answerCollection, [\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.create(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"any\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.update(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.delete(\"users\")\n    ]);\n    console.log(\"Answer Collection Created\");\n    // Creating Attributes\n    await Promise.all([\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.answerCollection, \"content\", 10000, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.answerCollection, \"questionId\", 50, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.answerCollection, \"authorId\", 50, true)\n    ]);\n    console.log(\"Answer Attributes Created\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvYW5zd2VyLmNvbGxlY3Rpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzRDtBQUNQO0FBQ1Y7QUFFdEIsZUFBZUk7SUFDMUIsc0JBQXNCO0lBQ3RCLE1BQU1ELDhDQUFTQSxDQUFDRSxnQkFBZ0IsQ0FBQ0gscUNBQUVBLEVBQUVELG1EQUFnQkEsRUFBRUEsbURBQWdCQSxFQUFFO1FBQ3JFRCxxREFBVUEsQ0FBQ00sTUFBTSxDQUFDO1FBQ2xCTixxREFBVUEsQ0FBQ08sSUFBSSxDQUFDO1FBQ2hCUCxxREFBVUEsQ0FBQ08sSUFBSSxDQUFDO1FBQ2hCUCxxREFBVUEsQ0FBQ1EsTUFBTSxDQUFDO1FBQ2xCUixxREFBVUEsQ0FBQ1MsTUFBTSxDQUFDO0tBQ3JCO0lBQ0RDLFFBQVFDLEdBQUcsQ0FBQztJQUVaLHNCQUFzQjtJQUN0QixNQUFNQyxRQUFRQyxHQUFHLENBQUM7UUFDZFYsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDWixxQ0FBRUEsRUFBRUQsbURBQWdCQSxFQUFFLFdBQVcsT0FBTztRQUN4RUUsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDWixxQ0FBRUEsRUFBRUQsbURBQWdCQSxFQUFFLGNBQWMsSUFBSTtRQUN4RUUsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDWixxQ0FBRUEsRUFBRUQsbURBQWdCQSxFQUFFLFlBQVksSUFBSTtLQUN6RTtJQUNEUyxRQUFRQyxHQUFHLENBQUM7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vZGVscy9zZXJ2ZXIvYW5zd2VyLmNvbGxlY3Rpb24udHM/YWUyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmRleFR5cGUsIFBlcm1pc3Npb24gfSBmcm9tIFwibm9kZS1hcHB3cml0ZVwiO1xuaW1wb3J0IHsgYW5zd2VyQ29sbGVjdGlvbiwgZGIgfSBmcm9tIFwiLi4vbmFtZVwiO1xuaW1wb3J0IHsgZGF0YWJhc2VzIH0gZnJvbSBcIi4vY29uZmlnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUFuc3dlckNvbGxlY3Rpb24oKSB7XG4gICAgLy8gQ3JlYXRpbmcgQ29sbGVjdGlvblxuICAgIGF3YWl0IGRhdGFiYXNlcy5jcmVhdGVDb2xsZWN0aW9uKGRiLCBhbnN3ZXJDb2xsZWN0aW9uLCBhbnN3ZXJDb2xsZWN0aW9uLCBbXG4gICAgICAgIFBlcm1pc3Npb24uY3JlYXRlKFwidXNlcnNcIiksXG4gICAgICAgIFBlcm1pc3Npb24ucmVhZChcImFueVwiKSxcbiAgICAgICAgUGVybWlzc2lvbi5yZWFkKFwidXNlcnNcIiksXG4gICAgICAgIFBlcm1pc3Npb24udXBkYXRlKFwidXNlcnNcIiksXG4gICAgICAgIFBlcm1pc3Npb24uZGVsZXRlKFwidXNlcnNcIiksXG4gICAgXSk7XG4gICAgY29uc29sZS5sb2coXCJBbnN3ZXIgQ29sbGVjdGlvbiBDcmVhdGVkXCIpO1xuXG4gICAgLy8gQ3JlYXRpbmcgQXR0cmlidXRlc1xuICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgYW5zd2VyQ29sbGVjdGlvbiwgXCJjb250ZW50XCIsIDEwMDAwLCB0cnVlKSxcbiAgICAgICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgYW5zd2VyQ29sbGVjdGlvbiwgXCJxdWVzdGlvbklkXCIsIDUwLCB0cnVlKSxcbiAgICAgICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgYW5zd2VyQ29sbGVjdGlvbiwgXCJhdXRob3JJZFwiLCA1MCwgdHJ1ZSksXG4gICAgXSk7XG4gICAgY29uc29sZS5sb2coXCJBbnN3ZXIgQXR0cmlidXRlcyBDcmVhdGVkXCIpO1xufVxuIl0sIm5hbWVzIjpbIlBlcm1pc3Npb24iLCJhbnN3ZXJDb2xsZWN0aW9uIiwiZGIiLCJkYXRhYmFzZXMiLCJjcmVhdGVBbnN3ZXJDb2xsZWN0aW9uIiwiY3JlYXRlQ29sbGVjdGlvbiIsImNyZWF0ZSIsInJlYWQiLCJ1cGRhdGUiLCJkZWxldGUiLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsImFsbCIsImNyZWF0ZVN0cmluZ0F0dHJpYnV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/answer.collection.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/comment.collection.ts":
/*!*************************************************!*\
  !*** ./src/models/server/comment.collection.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createCommentCollection)\n/* harmony export */ });\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\nasync function createCommentCollection() {\n    // Creating Collection\n    await _config__WEBPACK_IMPORTED_MODULE_2__.databases.createCollection(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, [\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.create(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"any\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.update(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.delete(\"users\")\n    ]);\n    console.log(\"Comment Collection Created\");\n    // Creating Attributes\n    await Promise.all([\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, \"content\", 10000, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createEnumAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, \"type\", [\n            \"answer\",\n            \"question\"\n        ], true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, \"typeId\", 50, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.commentCollection, \"authorId\", 50, true)\n    ]);\n    console.log(\"Comment Attributes Created\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvY29tbWVudC5jb2xsZWN0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDSztBQUNYO0FBRXRCLGVBQWVJO0lBQzFCLHNCQUFzQjtJQUN0QixNQUFNRCw4Q0FBU0EsQ0FBQ0UsZ0JBQWdCLENBQUNILHFDQUFFQSxFQUFFRCxvREFBaUJBLEVBQUVBLG9EQUFpQkEsRUFBRTtRQUN2RUQscURBQVVBLENBQUNNLE1BQU0sQ0FBQztRQUNsQk4scURBQVVBLENBQUNPLElBQUksQ0FBQztRQUNoQlAscURBQVVBLENBQUNPLElBQUksQ0FBQztRQUNoQlAscURBQVVBLENBQUNRLE1BQU0sQ0FBQztRQUNsQlIscURBQVVBLENBQUNTLE1BQU0sQ0FBQztLQUNyQjtJQUNEQyxRQUFRQyxHQUFHLENBQUM7SUFFWixzQkFBc0I7SUFDdEIsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1FBQ2RWLDhDQUFTQSxDQUFDVyxxQkFBcUIsQ0FBQ1oscUNBQUVBLEVBQUVELG9EQUFpQkEsRUFBRSxXQUFXLE9BQU87UUFDekVFLDhDQUFTQSxDQUFDWSxtQkFBbUIsQ0FBQ2IscUNBQUVBLEVBQUVELG9EQUFpQkEsRUFBRSxRQUFRO1lBQUM7WUFBVTtTQUFXLEVBQUU7UUFDckZFLDhDQUFTQSxDQUFDVyxxQkFBcUIsQ0FBQ1oscUNBQUVBLEVBQUVELG9EQUFpQkEsRUFBRSxVQUFVLElBQUk7UUFDckVFLDhDQUFTQSxDQUFDVyxxQkFBcUIsQ0FBQ1oscUNBQUVBLEVBQUVELG9EQUFpQkEsRUFBRSxZQUFZLElBQUk7S0FDMUU7SUFDRFMsUUFBUUMsR0FBRyxDQUFDO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9tb2RlbHMvc2VydmVyL2NvbW1lbnQuY29sbGVjdGlvbi50cz80OWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBlcm1pc3Npb24gfSBmcm9tIFwibm9kZS1hcHB3cml0ZVwiO1xuaW1wb3J0IHsgY29tbWVudENvbGxlY3Rpb24sIGRiIH0gZnJvbSBcIi4uL25hbWVcIjtcbmltcG9ydCB7IGRhdGFiYXNlcyB9IGZyb20gXCIuL2NvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDb21tZW50Q29sbGVjdGlvbigpIHtcbiAgICAvLyBDcmVhdGluZyBDb2xsZWN0aW9uXG4gICAgYXdhaXQgZGF0YWJhc2VzLmNyZWF0ZUNvbGxlY3Rpb24oZGIsIGNvbW1lbnRDb2xsZWN0aW9uLCBjb21tZW50Q29sbGVjdGlvbiwgW1xuICAgICAgICBQZXJtaXNzaW9uLmNyZWF0ZShcInVzZXJzXCIpLFxuICAgICAgICBQZXJtaXNzaW9uLnJlYWQoXCJhbnlcIiksXG4gICAgICAgIFBlcm1pc3Npb24ucmVhZChcInVzZXJzXCIpLFxuICAgICAgICBQZXJtaXNzaW9uLnVwZGF0ZShcInVzZXJzXCIpLFxuICAgICAgICBQZXJtaXNzaW9uLmRlbGV0ZShcInVzZXJzXCIpLFxuICAgIF0pO1xuICAgIGNvbnNvbGUubG9nKFwiQ29tbWVudCBDb2xsZWN0aW9uIENyZWF0ZWRcIik7XG5cbiAgICAvLyBDcmVhdGluZyBBdHRyaWJ1dGVzXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBkYXRhYmFzZXMuY3JlYXRlU3RyaW5nQXR0cmlidXRlKGRiLCBjb21tZW50Q29sbGVjdGlvbiwgXCJjb250ZW50XCIsIDEwMDAwLCB0cnVlKSxcbiAgICAgICAgZGF0YWJhc2VzLmNyZWF0ZUVudW1BdHRyaWJ1dGUoZGIsIGNvbW1lbnRDb2xsZWN0aW9uLCBcInR5cGVcIiwgW1wiYW5zd2VyXCIsIFwicXVlc3Rpb25cIl0sIHRydWUpLFxuICAgICAgICBkYXRhYmFzZXMuY3JlYXRlU3RyaW5nQXR0cmlidXRlKGRiLCBjb21tZW50Q29sbGVjdGlvbiwgXCJ0eXBlSWRcIiwgNTAsIHRydWUpLFxuICAgICAgICBkYXRhYmFzZXMuY3JlYXRlU3RyaW5nQXR0cmlidXRlKGRiLCBjb21tZW50Q29sbGVjdGlvbiwgXCJhdXRob3JJZFwiLCA1MCwgdHJ1ZSksXG4gICAgXSk7XG4gICAgY29uc29sZS5sb2coXCJDb21tZW50IEF0dHJpYnV0ZXMgQ3JlYXRlZFwiKTtcbn1cbiJdLCJuYW1lcyI6WyJQZXJtaXNzaW9uIiwiY29tbWVudENvbGxlY3Rpb24iLCJkYiIsImRhdGFiYXNlcyIsImNyZWF0ZUNvbW1lbnRDb2xsZWN0aW9uIiwiY3JlYXRlQ29sbGVjdGlvbiIsImNyZWF0ZSIsInJlYWQiLCJ1cGRhdGUiLCJkZWxldGUiLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsImFsbCIsImNyZWF0ZVN0cmluZ0F0dHJpYnV0ZSIsImNyZWF0ZUVudW1BdHRyaWJ1dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/comment.collection.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/config.ts":
/*!*************************************!*\
  !*** ./src/models/server/config.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   avatars: () => (/* binding */ avatars),\n/* harmony export */   client: () => (/* binding */ client),\n/* harmony export */   databases: () => (/* binding */ databases),\n/* harmony export */   storage: () => (/* binding */ storage),\n/* harmony export */   users: () => (/* binding */ users)\n/* harmony export */ });\n/* harmony import */ var _app_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/env */ \"(middleware)/./src/app/env.ts\");\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n\n\nlet client = new node_appwrite__WEBPACK_IMPORTED_MODULE_1__.Client();\nclient.setEndpoint(_app_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].appwrite.endpoint) // Your API Endpoint\n.setProject(_app_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].appwrite.projectId) // Your project ID\n.setKey(_app_env__WEBPACK_IMPORTED_MODULE_0__[\"default\"].appwrite.apikey) // Your secret API key\n;\nconst databases = new node_appwrite__WEBPACK_IMPORTED_MODULE_1__.Databases(client);\nconst avatars = new node_appwrite__WEBPACK_IMPORTED_MODULE_1__.Avatars(client);\nconst storage = new node_appwrite__WEBPACK_IMPORTED_MODULE_1__.Storage(client);\nconst users = new node_appwrite__WEBPACK_IMPORTED_MODULE_1__.Users(client);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNEI7QUFFNEM7QUFFeEUsSUFBSU0sU0FBUyxJQUFJSixpREFBTUE7QUFFdkJJLE9BQ0tDLFdBQVcsQ0FBQ1AsZ0RBQUdBLENBQUNRLFFBQVEsQ0FBQ0MsUUFBUSxFQUFFLG9CQUFvQjtDQUN2REMsVUFBVSxDQUFDVixnREFBR0EsQ0FBQ1EsUUFBUSxDQUFDRyxTQUFTLEVBQUUsa0JBQWtCO0NBQ3JEQyxNQUFNLENBQUNaLGdEQUFHQSxDQUFDUSxRQUFRLENBQUNLLE1BQU0sRUFBRSxzQkFBc0I7O0FBSXZELE1BQU1DLFlBQVksSUFBSVgsb0RBQVNBLENBQUNHO0FBQ2hDLE1BQU1TLFVBQVUsSUFBSWQsa0RBQU9BLENBQUNLO0FBQzVCLE1BQU1VLFVBQVUsSUFBSVosa0RBQU9BLENBQUNFO0FBQzVCLE1BQU1XLFFBQVEsSUFBSVosZ0RBQUtBLENBQUNDO0FBRzRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9tb2RlbHMvc2VydmVyL2NvbmZpZy50cz8xMjZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbnYgZnJvbSBcIkAvYXBwL2VudlwiO1xuXG5pbXBvcnQge0F2YXRhcnMsIENsaWVudCwgRGF0YWJhc2VzLCBTdG9yYWdlLCBVc2Vyc30gZnJvbSBcIm5vZGUtYXBwd3JpdGVcIlxuXG5sZXQgY2xpZW50ID0gbmV3IENsaWVudCgpO1xuXG5jbGllbnRcbiAgICAuc2V0RW5kcG9pbnQoZW52LmFwcHdyaXRlLmVuZHBvaW50KSAvLyBZb3VyIEFQSSBFbmRwb2ludFxuICAgIC5zZXRQcm9qZWN0KGVudi5hcHB3cml0ZS5wcm9qZWN0SWQpIC8vIFlvdXIgcHJvamVjdCBJRFxuICAgIC5zZXRLZXkoZW52LmFwcHdyaXRlLmFwaWtleSkgLy8gWW91ciBzZWNyZXQgQVBJIGtleVxuICAgIFxuO1xuXG5jb25zdCBkYXRhYmFzZXMgPSBuZXcgRGF0YWJhc2VzKGNsaWVudClcbmNvbnN0IGF2YXRhcnMgPSBuZXcgQXZhdGFycyhjbGllbnQpO1xuY29uc3Qgc3RvcmFnZSA9IG5ldyBTdG9yYWdlKGNsaWVudCk7XG5jb25zdCB1c2VycyA9IG5ldyBVc2VycyhjbGllbnQpXG5cblxuZXhwb3J0IHsgY2xpZW50LCBkYXRhYmFzZXMsIHVzZXJzLCBhdmF0YXJzLCBzdG9yYWdlfSJdLCJuYW1lcyI6WyJlbnYiLCJBdmF0YXJzIiwiQ2xpZW50IiwiRGF0YWJhc2VzIiwiU3RvcmFnZSIsIlVzZXJzIiwiY2xpZW50Iiwic2V0RW5kcG9pbnQiLCJhcHB3cml0ZSIsImVuZHBvaW50Iiwic2V0UHJvamVjdCIsInByb2plY3RJZCIsInNldEtleSIsImFwaWtleSIsImRhdGFiYXNlcyIsImF2YXRhcnMiLCJzdG9yYWdlIiwidXNlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/config.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/dbSetup.ts":
/*!**************************************!*\
  !*** ./src/models/server/dbSetup.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getOrCreateDB)\n/* harmony export */ });\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _answer_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./answer.collection */ \"(middleware)/./src/models/server/answer.collection.ts\");\n/* harmony import */ var _comment_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./comment.collection */ \"(middleware)/./src/models/server/comment.collection.ts\");\n/* harmony import */ var _question_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./question.collection */ \"(middleware)/./src/models/server/question.collection.ts\");\n/* harmony import */ var _vote_collection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./vote.collection */ \"(middleware)/./src/models/server/vote.collection.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\n\n\n\nasync function getOrCreateDB() {\n    try {\n        await _config__WEBPACK_IMPORTED_MODULE_5__.databases.get(_name__WEBPACK_IMPORTED_MODULE_0__.db);\n        console.log(\"Database connection\");\n    } catch (error) {\n        try {\n            await _config__WEBPACK_IMPORTED_MODULE_5__.databases.create(_name__WEBPACK_IMPORTED_MODULE_0__.db, _name__WEBPACK_IMPORTED_MODULE_0__.db);\n            console.log(\"database created\");\n            //create collections\n            await Promise.all([\n                (0,_question_collection__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                (0,_answer_collection__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n                (0,_comment_collection__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n                (0,_vote_collection__WEBPACK_IMPORTED_MODULE_4__[\"default\"])()\n            ]);\n            console.log(\"Collection created\");\n            console.log(\"Database connected\");\n        } catch (error) {\n            console.log(\"Error creating databases or collection\", error);\n        }\n    }\n    return _config__WEBPACK_IMPORTED_MODULE_5__.databases;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvZGJTZXR1cC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZCO0FBQzRCO0FBQ0U7QUFDRTtBQUNSO0FBRWhCO0FBRXRCLGVBQWVNO0lBQzVCLElBQUk7UUFDRixNQUFNRCw4Q0FBU0EsQ0FBQ0UsR0FBRyxDQUFDUCxxQ0FBRUE7UUFDdEJRLFFBQVFDLEdBQUcsQ0FBQztJQUNkLEVBQUUsT0FBT0MsT0FBTztRQUNkLElBQUk7WUFDRixNQUFNTCw4Q0FBU0EsQ0FBQ00sTUFBTSxDQUFDWCxxQ0FBRUEsRUFBRUEscUNBQUVBO1lBQzdCUSxRQUFRQyxHQUFHLENBQUM7WUFDWixvQkFBb0I7WUFDcEIsTUFBTUcsUUFBUUMsR0FBRyxDQUFDO2dCQUNoQlYsZ0VBQXdCQTtnQkFDeEJGLDhEQUFzQkE7Z0JBQ3RCQywrREFBdUJBO2dCQUN2QkUsNERBQW9CQTthQUVyQjtZQUNESSxRQUFRQyxHQUFHLENBQUM7WUFDWkQsUUFBUUMsR0FBRyxDQUFDO1FBQ2QsRUFBRSxPQUFPQyxPQUFPO1lBQ2RGLFFBQVFDLEdBQUcsQ0FBQywwQ0FBMENDO1FBQ3hEO0lBQ0Y7SUFFQSxPQUFPTCw4Q0FBU0E7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vZGVscy9zZXJ2ZXIvZGJTZXR1cC50cz8wYzRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRiIH0gZnJvbSBcIi4uL25hbWVcIjtcbmltcG9ydCBjcmVhdGVBbnN3ZXJDb2xsZWN0aW9uIGZyb20gXCIuL2Fuc3dlci5jb2xsZWN0aW9uXCI7XG5pbXBvcnQgY3JlYXRlQ29tbWVudENvbGxlY3Rpb24gZnJvbSBcIi4vY29tbWVudC5jb2xsZWN0aW9uXCI7XG5pbXBvcnQgY3JlYXRlUXVlc3Rpb25Db2xsZWN0aW9uIGZyb20gXCIuL3F1ZXN0aW9uLmNvbGxlY3Rpb25cIjtcbmltcG9ydCBjcmVhdGVWb3RlQ29sbGVjdGlvbiBmcm9tIFwiLi92b3RlLmNvbGxlY3Rpb25cIjtcblxuaW1wb3J0IHsgZGF0YWJhc2VzIH0gZnJvbSBcIi4vY29uZmlnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldE9yQ3JlYXRlREIoKXtcbiAgdHJ5IHtcbiAgICBhd2FpdCBkYXRhYmFzZXMuZ2V0KGRiKVxuICAgIGNvbnNvbGUubG9nKFwiRGF0YWJhc2UgY29ubmVjdGlvblwiKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBkYXRhYmFzZXMuY3JlYXRlKGRiLCBkYilcbiAgICAgIGNvbnNvbGUubG9nKFwiZGF0YWJhc2UgY3JlYXRlZFwiKVxuICAgICAgLy9jcmVhdGUgY29sbGVjdGlvbnNcbiAgICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgY3JlYXRlUXVlc3Rpb25Db2xsZWN0aW9uKCksXG4gICAgICAgIGNyZWF0ZUFuc3dlckNvbGxlY3Rpb24oKSxcbiAgICAgICAgY3JlYXRlQ29tbWVudENvbGxlY3Rpb24oKSxcbiAgICAgICAgY3JlYXRlVm90ZUNvbGxlY3Rpb24oKSxcblxuICAgICAgXSlcbiAgICAgIGNvbnNvbGUubG9nKFwiQ29sbGVjdGlvbiBjcmVhdGVkXCIpXG4gICAgICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGNvbm5lY3RlZFwiKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVycm9yIGNyZWF0aW5nIGRhdGFiYXNlcyBvciBjb2xsZWN0aW9uXCIsIGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRhYmFzZXNcbn0iXSwibmFtZXMiOlsiZGIiLCJjcmVhdGVBbnN3ZXJDb2xsZWN0aW9uIiwiY3JlYXRlQ29tbWVudENvbGxlY3Rpb24iLCJjcmVhdGVRdWVzdGlvbkNvbGxlY3Rpb24iLCJjcmVhdGVWb3RlQ29sbGVjdGlvbiIsImRhdGFiYXNlcyIsImdldE9yQ3JlYXRlREIiLCJnZXQiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJjcmVhdGUiLCJQcm9taXNlIiwiYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/dbSetup.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/question.collection.ts":
/*!**************************************************!*\
  !*** ./src/models/server/question.collection.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createQuestionCollection)\n/* harmony export */ });\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\nasync function createQuestionCollection() {\n    // create collection\n    await _config__WEBPACK_IMPORTED_MODULE_2__.databases.createCollection(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, [\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"any\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.create(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.update(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.delete(\"users\")\n    ]);\n    console.log(\"Question collection is created\");\n    //creating attributes and Indexes\n    await Promise.all([\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, \"title\", 100, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, \"content\", 10000, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, \"authorId\", 50, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, \"tags\", 50, true, undefined, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.questionCollection, \"attachmentId\", 50, false)\n    ]);\n    console.log(\"Question Attributes created\");\n// create Indexes\n/*\n  await Promise.all([\n    databases.createIndex(\n      db,\n      questionCollection,\n      \"title\",\n      IndexType.Fulltext,\n      [\"title\"],\n      ['asc']\n    ),\n    databases.createIndex(\n      db,\n      questionCollection,\n      \"content\",\n      IndexType.Fulltext,\n      [\"content\"],\n      ['asc']\n    )\n  ])\n    */ }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvcXVlc3Rpb24uY29sbGVjdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1EO0FBRUw7QUFDWjtBQUduQixlQUFlSTtJQUM1QixvQkFBb0I7SUFDcEIsTUFBTUQsOENBQVNBLENBQUNFLGdCQUFnQixDQUFDSixxQ0FBRUEsRUFBRUMscURBQWtCQSxFQUFFQSxxREFBa0JBLEVBQUU7UUFDM0VGLHFEQUFVQSxDQUFDTSxJQUFJLENBQUM7UUFDaEJOLHFEQUFVQSxDQUFDTSxJQUFJLENBQUM7UUFDaEJOLHFEQUFVQSxDQUFDTyxNQUFNLENBQUM7UUFDbEJQLHFEQUFVQSxDQUFDUSxNQUFNLENBQUM7UUFDbEJSLHFEQUFVQSxDQUFDUyxNQUFNLENBQUM7S0FDbkI7SUFDREMsUUFBUUMsR0FBRyxDQUFDO0lBRVosaUNBQWlDO0lBRWpDLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztRQUNoQlYsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDYixxQ0FBRUEsRUFBRUMscURBQWtCQSxFQUFFLFNBQVMsS0FBSztRQUN0RUMsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDYixxQ0FBRUEsRUFBRUMscURBQWtCQSxFQUFFLFdBQVcsT0FBTztRQUMxRUMsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDYixxQ0FBRUEsRUFBRUMscURBQWtCQSxFQUFFLFlBQVksSUFBSTtRQUN4RUMsOENBQVNBLENBQUNXLHFCQUFxQixDQUFDYixxQ0FBRUEsRUFBRUMscURBQWtCQSxFQUFFLFFBQVEsSUFBSSxNQUFNYSxXQUFXO1FBQ3JGWiw4Q0FBU0EsQ0FBQ1cscUJBQXFCLENBQUNiLHFDQUFFQSxFQUFFQyxxREFBa0JBLEVBQUUsZ0JBQWdCLElBQUk7S0FDN0U7SUFDRFEsUUFBUUMsR0FBRyxDQUFDO0FBRVosaUJBQWlCO0FBRWpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJFLEdBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vZGVscy9zZXJ2ZXIvcXVlc3Rpb24uY29sbGVjdGlvbi50cz9mZDcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5kZXhUeXBlLCBQZXJtaXNzaW9ufSBmcm9tIFwibm9kZS1hcHB3cml0ZVwiXG5cbmltcG9ydCB7ZGIsIHF1ZXN0aW9uQ29sbGVjdGlvbn0gZnJvbSBcIi4uL25hbWVcIlxuaW1wb3J0IHtkYXRhYmFzZXN9IGZyb20gXCIuL2NvbmZpZ1wiXG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlUXVlc3Rpb25Db2xsZWN0aW9uKCl7XG4gIC8vIGNyZWF0ZSBjb2xsZWN0aW9uXG4gIGF3YWl0IGRhdGFiYXNlcy5jcmVhdGVDb2xsZWN0aW9uKGRiLCBxdWVzdGlvbkNvbGxlY3Rpb24sIHF1ZXN0aW9uQ29sbGVjdGlvbiwgW1xuICAgIFBlcm1pc3Npb24ucmVhZChcImFueVwiKSxcbiAgICBQZXJtaXNzaW9uLnJlYWQoXCJ1c2Vyc1wiKSxcbiAgICBQZXJtaXNzaW9uLmNyZWF0ZShcInVzZXJzXCIpLFxuICAgIFBlcm1pc3Npb24udXBkYXRlKFwidXNlcnNcIiksXG4gICAgUGVybWlzc2lvbi5kZWxldGUoXCJ1c2Vyc1wiKSxcbiAgXSlcbiAgY29uc29sZS5sb2coXCJRdWVzdGlvbiBjb2xsZWN0aW9uIGlzIGNyZWF0ZWRcIilcblxuICAvL2NyZWF0aW5nIGF0dHJpYnV0ZXMgYW5kIEluZGV4ZXNcblxuICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgcXVlc3Rpb25Db2xsZWN0aW9uLCBcInRpdGxlXCIsIDEwMCwgdHJ1ZSksXG4gICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgcXVlc3Rpb25Db2xsZWN0aW9uLCBcImNvbnRlbnRcIiwgMTAwMDAsIHRydWUpLFxuICAgIGRhdGFiYXNlcy5jcmVhdGVTdHJpbmdBdHRyaWJ1dGUoZGIsIHF1ZXN0aW9uQ29sbGVjdGlvbiwgXCJhdXRob3JJZFwiLCA1MCwgdHJ1ZSksXG4gICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgcXVlc3Rpb25Db2xsZWN0aW9uLCBcInRhZ3NcIiwgNTAsIHRydWUsIHVuZGVmaW5lZCwgdHJ1ZSksXG4gICAgZGF0YWJhc2VzLmNyZWF0ZVN0cmluZ0F0dHJpYnV0ZShkYiwgcXVlc3Rpb25Db2xsZWN0aW9uLCBcImF0dGFjaG1lbnRJZFwiLCA1MCwgZmFsc2UpLFxuICBdKTtcbiAgY29uc29sZS5sb2coXCJRdWVzdGlvbiBBdHRyaWJ1dGVzIGNyZWF0ZWRcIilcblxuICAvLyBjcmVhdGUgSW5kZXhlc1xuXG4gIC8qXG4gIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBkYXRhYmFzZXMuY3JlYXRlSW5kZXgoXG4gICAgICBkYixcbiAgICAgIHF1ZXN0aW9uQ29sbGVjdGlvbixcbiAgICAgIFwidGl0bGVcIixcbiAgICAgIEluZGV4VHlwZS5GdWxsdGV4dCxcbiAgICAgIFtcInRpdGxlXCJdLFxuICAgICAgWydhc2MnXVxuICAgICksXG4gICAgZGF0YWJhc2VzLmNyZWF0ZUluZGV4KFxuICAgICAgZGIsXG4gICAgICBxdWVzdGlvbkNvbGxlY3Rpb24sXG4gICAgICBcImNvbnRlbnRcIixcbiAgICAgIEluZGV4VHlwZS5GdWxsdGV4dCxcbiAgICAgIFtcImNvbnRlbnRcIl0sXG4gICAgICBbJ2FzYyddXG4gICAgKVxuICBdKVxuICAgICovXG59Il0sIm5hbWVzIjpbIlBlcm1pc3Npb24iLCJkYiIsInF1ZXN0aW9uQ29sbGVjdGlvbiIsImRhdGFiYXNlcyIsImNyZWF0ZVF1ZXN0aW9uQ29sbGVjdGlvbiIsImNyZWF0ZUNvbGxlY3Rpb24iLCJyZWFkIiwiY3JlYXRlIiwidXBkYXRlIiwiZGVsZXRlIiwiY29uc29sZSIsImxvZyIsIlByb21pc2UiLCJhbGwiLCJjcmVhdGVTdHJpbmdBdHRyaWJ1dGUiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/question.collection.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/storageSetup.ts":
/*!*******************************************!*\
  !*** ./src/models/server/storageSetup.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getOrCreateStorage)\n/* harmony export */ });\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\nasync function getOrCreateStorage() {\n    try {\n        await _config__WEBPACK_IMPORTED_MODULE_2__.storage.getBucket(_name__WEBPACK_IMPORTED_MODULE_1__.questionAttachmentBucket);\n        console.log(\"Storage Connected\");\n    } catch (error) {\n        try {\n            await _config__WEBPACK_IMPORTED_MODULE_2__.storage.createBucket(_name__WEBPACK_IMPORTED_MODULE_1__.questionAttachmentBucket, _name__WEBPACK_IMPORTED_MODULE_1__.questionAttachmentBucket, [\n                node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.create(\"users\"),\n                node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"any\"),\n                node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"users\"),\n                node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.update(\"users\"),\n                node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.delete(\"users\")\n            ], false, undefined, undefined, [\n                \"jpg\",\n                \"png\",\n                \"gif\",\n                \"jpeg\",\n                \"webp\",\n                \"heic\"\n            ]);\n            console.log(\"Storage Created\");\n            console.log(\"Storage Connected\");\n        } catch (error) {\n            console.error(\"Error creating storage:\", error);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvc3RvcmFnZVNldHVwLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDUTtBQUNoQjtBQUVwQixlQUFlRztJQUMxQixJQUFJO1FBQ0EsTUFBTUQsNENBQU9BLENBQUNFLFNBQVMsQ0FBQ0gsMkRBQXdCQTtRQUNoREksUUFBUUMsR0FBRyxDQUFDO0lBQ2hCLEVBQUUsT0FBT0MsT0FBTztRQUNaLElBQUk7WUFDQSxNQUFNTCw0Q0FBT0EsQ0FBQ00sWUFBWSxDQUN0QlAsMkRBQXdCQSxFQUN4QkEsMkRBQXdCQSxFQUN4QjtnQkFDSUQscURBQVVBLENBQUNTLE1BQU0sQ0FBQztnQkFDbEJULHFEQUFVQSxDQUFDVSxJQUFJLENBQUM7Z0JBQ2hCVixxREFBVUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUNoQlYscURBQVVBLENBQUNXLE1BQU0sQ0FBQztnQkFDbEJYLHFEQUFVQSxDQUFDWSxNQUFNLENBQUM7YUFDckIsRUFDRCxPQUNBQyxXQUNBQSxXQUNBO2dCQUFDO2dCQUFPO2dCQUFPO2dCQUFPO2dCQUFRO2dCQUFRO2FBQU87WUFHakRSLFFBQVFDLEdBQUcsQ0FBQztZQUNaRCxRQUFRQyxHQUFHLENBQUM7UUFDaEIsRUFBRSxPQUFPQyxPQUFPO1lBQ1pGLFFBQVFFLEtBQUssQ0FBQywyQkFBMkJBO1FBQzdDO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbW9kZWxzL3NlcnZlci9zdG9yYWdlU2V0dXAudHM/MDQ1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQZXJtaXNzaW9uIH0gZnJvbSBcIm5vZGUtYXBwd3JpdGVcIjtcbmltcG9ydCB7IHF1ZXN0aW9uQXR0YWNobWVudEJ1Y2tldCB9IGZyb20gXCIuLi9uYW1lXCI7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSBcIi4vY29uZmlnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldE9yQ3JlYXRlU3RvcmFnZSgpIHtcbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBzdG9yYWdlLmdldEJ1Y2tldChxdWVzdGlvbkF0dGFjaG1lbnRCdWNrZXQpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlN0b3JhZ2UgQ29ubmVjdGVkXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBzdG9yYWdlLmNyZWF0ZUJ1Y2tldChcbiAgICAgICAgICAgICAgICBxdWVzdGlvbkF0dGFjaG1lbnRCdWNrZXQsXG4gICAgICAgICAgICAgICAgcXVlc3Rpb25BdHRhY2htZW50QnVja2V0LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgUGVybWlzc2lvbi5jcmVhdGUoXCJ1c2Vyc1wiKSxcbiAgICAgICAgICAgICAgICAgICAgUGVybWlzc2lvbi5yZWFkKFwiYW55XCIpLFxuICAgICAgICAgICAgICAgICAgICBQZXJtaXNzaW9uLnJlYWQoXCJ1c2Vyc1wiKSxcbiAgICAgICAgICAgICAgICAgICAgUGVybWlzc2lvbi51cGRhdGUoXCJ1c2Vyc1wiKSxcbiAgICAgICAgICAgICAgICAgICAgUGVybWlzc2lvbi5kZWxldGUoXCJ1c2Vyc1wiKSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgW1wianBnXCIsIFwicG5nXCIsIFwiZ2lmXCIsIFwianBlZ1wiLCBcIndlYnBcIiwgXCJoZWljXCJdXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlN0b3JhZ2UgQ3JlYXRlZFwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3RvcmFnZSBDb25uZWN0ZWRcIik7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY3JlYXRpbmcgc3RvcmFnZTpcIiwgZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlBlcm1pc3Npb24iLCJxdWVzdGlvbkF0dGFjaG1lbnRCdWNrZXQiLCJzdG9yYWdlIiwiZ2V0T3JDcmVhdGVTdG9yYWdlIiwiZ2V0QnVja2V0IiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiY3JlYXRlQnVja2V0IiwiY3JlYXRlIiwicmVhZCIsInVwZGF0ZSIsImRlbGV0ZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/storageSetup.ts\n");

/***/ }),

/***/ "(middleware)/./src/models/server/vote.collection.ts":
/*!**********************************************!*\
  !*** ./src/models/server/vote.collection.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createVoteCollection)\n/* harmony export */ });\n/* harmony import */ var node_appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-appwrite */ \"(middleware)/./node_modules/node-appwrite/dist/index.mjs\");\n/* harmony import */ var _name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../name */ \"(middleware)/./src/models/name.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ \"(middleware)/./src/models/server/config.ts\");\n\n\n\nasync function createVoteCollection() {\n    // Creating Collection\n    await _config__WEBPACK_IMPORTED_MODULE_2__.databases.createCollection(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, [\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.create(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"any\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.read(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.update(\"users\"),\n        node_appwrite__WEBPACK_IMPORTED_MODULE_0__.Permission.delete(\"users\")\n    ]);\n    console.log(\"Vote Collection Created\");\n    // Creating Attributes\n    await Promise.all([\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createEnumAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, \"type\", [\n            \"question\",\n            \"answer\"\n        ], true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, \"typeId\", 50, true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createEnumAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, \"voteStatus\", [\n            \"upvoted\",\n            \"downvoted\"\n        ], true),\n        _config__WEBPACK_IMPORTED_MODULE_2__.databases.createStringAttribute(_name__WEBPACK_IMPORTED_MODULE_1__.db, _name__WEBPACK_IMPORTED_MODULE_1__.voteCollection, \"votedById\", 50, true)\n    ]);\n    console.log(\"Vote Attributes Created\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21vZGVscy9zZXJ2ZXIvdm90ZS5jb2xsZWN0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDRTtBQUNSO0FBRXRCLGVBQWVJO0lBQzFCLHNCQUFzQjtJQUN0QixNQUFNRCw4Q0FBU0EsQ0FBQ0UsZ0JBQWdCLENBQUNKLHFDQUFFQSxFQUFFQyxpREFBY0EsRUFBRUEsaURBQWNBLEVBQUU7UUFDakVGLHFEQUFVQSxDQUFDTSxNQUFNLENBQUM7UUFDbEJOLHFEQUFVQSxDQUFDTyxJQUFJLENBQUM7UUFDaEJQLHFEQUFVQSxDQUFDTyxJQUFJLENBQUM7UUFDaEJQLHFEQUFVQSxDQUFDUSxNQUFNLENBQUM7UUFDbEJSLHFEQUFVQSxDQUFDUyxNQUFNLENBQUM7S0FDckI7SUFDREMsUUFBUUMsR0FBRyxDQUFDO0lBRVosc0JBQXNCO0lBQ3RCLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztRQUNkViw4Q0FBU0EsQ0FBQ1csbUJBQW1CLENBQUNiLHFDQUFFQSxFQUFFQyxpREFBY0EsRUFBRSxRQUFRO1lBQUM7WUFBWTtTQUFTLEVBQUU7UUFDbEZDLDhDQUFTQSxDQUFDWSxxQkFBcUIsQ0FBQ2QscUNBQUVBLEVBQUVDLGlEQUFjQSxFQUFFLFVBQVUsSUFBSTtRQUNsRUMsOENBQVNBLENBQUNXLG1CQUFtQixDQUN6QmIscUNBQUVBLEVBQ0ZDLGlEQUFjQSxFQUNkLGNBQ0E7WUFBQztZQUFXO1NBQVksRUFDeEI7UUFFSkMsOENBQVNBLENBQUNZLHFCQUFxQixDQUFDZCxxQ0FBRUEsRUFBRUMsaURBQWNBLEVBQUUsYUFBYSxJQUFJO0tBQ3hFO0lBQ0RRLFFBQVFDLEdBQUcsQ0FBQztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbW9kZWxzL3NlcnZlci92b3RlLmNvbGxlY3Rpb24udHM/NjhjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQZXJtaXNzaW9uIH0gZnJvbSBcIm5vZGUtYXBwd3JpdGVcIjtcbmltcG9ydCB7IGRiLCB2b3RlQ29sbGVjdGlvbiB9IGZyb20gXCIuLi9uYW1lXCI7XG5pbXBvcnQgeyBkYXRhYmFzZXMgfSBmcm9tIFwiLi9jb25maWdcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlVm90ZUNvbGxlY3Rpb24oKSB7XG4gICAgLy8gQ3JlYXRpbmcgQ29sbGVjdGlvblxuICAgIGF3YWl0IGRhdGFiYXNlcy5jcmVhdGVDb2xsZWN0aW9uKGRiLCB2b3RlQ29sbGVjdGlvbiwgdm90ZUNvbGxlY3Rpb24sIFtcbiAgICAgICAgUGVybWlzc2lvbi5jcmVhdGUoXCJ1c2Vyc1wiKSxcbiAgICAgICAgUGVybWlzc2lvbi5yZWFkKFwiYW55XCIpLFxuICAgICAgICBQZXJtaXNzaW9uLnJlYWQoXCJ1c2Vyc1wiKSxcbiAgICAgICAgUGVybWlzc2lvbi51cGRhdGUoXCJ1c2Vyc1wiKSxcbiAgICAgICAgUGVybWlzc2lvbi5kZWxldGUoXCJ1c2Vyc1wiKSxcbiAgICBdKTtcbiAgICBjb25zb2xlLmxvZyhcIlZvdGUgQ29sbGVjdGlvbiBDcmVhdGVkXCIpO1xuXG4gICAgLy8gQ3JlYXRpbmcgQXR0cmlidXRlc1xuICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgZGF0YWJhc2VzLmNyZWF0ZUVudW1BdHRyaWJ1dGUoZGIsIHZvdGVDb2xsZWN0aW9uLCBcInR5cGVcIiwgW1wicXVlc3Rpb25cIiwgXCJhbnN3ZXJcIl0sIHRydWUpLFxuICAgICAgICBkYXRhYmFzZXMuY3JlYXRlU3RyaW5nQXR0cmlidXRlKGRiLCB2b3RlQ29sbGVjdGlvbiwgXCJ0eXBlSWRcIiwgNTAsIHRydWUpLFxuICAgICAgICBkYXRhYmFzZXMuY3JlYXRlRW51bUF0dHJpYnV0ZShcbiAgICAgICAgICAgIGRiLFxuICAgICAgICAgICAgdm90ZUNvbGxlY3Rpb24sXG4gICAgICAgICAgICBcInZvdGVTdGF0dXNcIixcbiAgICAgICAgICAgIFtcInVwdm90ZWRcIiwgXCJkb3dudm90ZWRcIl0sXG4gICAgICAgICAgICB0cnVlXG4gICAgICAgICksXG4gICAgICAgIGRhdGFiYXNlcy5jcmVhdGVTdHJpbmdBdHRyaWJ1dGUoZGIsIHZvdGVDb2xsZWN0aW9uLCBcInZvdGVkQnlJZFwiLCA1MCwgdHJ1ZSksXG4gICAgXSk7XG4gICAgY29uc29sZS5sb2coXCJWb3RlIEF0dHJpYnV0ZXMgQ3JlYXRlZFwiKTtcbn1cbiJdLCJuYW1lcyI6WyJQZXJtaXNzaW9uIiwiZGIiLCJ2b3RlQ29sbGVjdGlvbiIsImRhdGFiYXNlcyIsImNyZWF0ZVZvdGVDb2xsZWN0aW9uIiwiY3JlYXRlQ29sbGVjdGlvbiIsImNyZWF0ZSIsInJlYWQiLCJ1cGRhdGUiLCJkZWxldGUiLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsImFsbCIsImNyZWF0ZUVudW1BdHRyaWJ1dGUiLCJjcmVhdGVTdHJpbmdBdHRyaWJ1dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/models/server/vote.collection.ts\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNQSwyQ0FBMkMsSUFBSUMsTUFDbkQ7QUFHRixNQUFNQztJQUdKQyxVQUFnQjtRQUNkLE1BQU1IO0lBQ1I7SUFFQUksV0FBOEI7UUFDNUIsNEVBQTRFO1FBQzVFLE9BQU9DO0lBQ1Q7SUFFQUMsTUFBWTtRQUNWLE1BQU1OO0lBQ1I7SUFFQU8sT0FBYTtRQUNYLE1BQU1QO0lBQ1I7SUFFQVEsWUFBa0I7UUFDaEIsTUFBTVI7SUFDUjtBQUNGO0FBRUEsTUFBTVMsK0JBQStCQyxXQUFvQkMsaUJBQWlCO0FBRW5FLFNBQVNDO0lBR2QsSUFBSUgsOEJBQThCO1FBQ2hDLE9BQU8sSUFBSUE7SUFDYjtJQUNBLE9BQU8sSUFBSVA7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UudHM/OTdmNiJdLCJuYW1lcyI6WyJzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yIiwiRXJyb3IiLCJGYWtlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkaXNhYmxlIiwiZ2V0U3RvcmUiLCJ1bmRlZmluZWQiLCJydW4iLCJleGl0IiwiZW50ZXJXaXRoIiwibWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSIsImdsb2JhbFRoaXMiLCJBc3luY0xvY2FsU3RvcmFnZSIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage-instance.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage-instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7QUFHeEQsTUFBTUMsc0JBQ1hELDZFQUFBQSxHQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vLi4vc3JjL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS50cz8yOTk5Il0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwicmVxdWVzdEFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=static-generation-async-storage-instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQytEO0FBRXhELE1BQU1DLCtCQUNYRCw2RUFBQUEsR0FBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLWluc3RhbmNlLnRzP2Y3MjYiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/client.mjs":
/*!****************************************************!*\
  !*** ./node_modules/node-appwrite/dist/client.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppwriteException: () => (/* binding */ AppwriteException),\n/* harmony export */   Client: () => (/* binding */ Client),\n/* harmony export */   Query: () => (/* reexport safe */ _query_mjs__WEBPACK_IMPORTED_MODULE_2__.Query)\n/* harmony export */ });\n/* harmony import */ var node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch-native-with-agent */ \"(middleware)/./node_modules/node-fetch-native-with-agent/dist/native.mjs\");\n/* harmony import */ var node_fetch_native_with_agent_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node-fetch-native-with-agent/agent */ \"(middleware)/./node_modules/node-fetch-native-with-agent/dist/agent-stub.mjs\");\n/* harmony import */ var _query_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/query.mjs\");\n\n\n\n\n// src/client.ts\nvar AppwriteException = class extends Error {\n  constructor(message, code = 0, type = \"\", response = \"\") {\n    super(message);\n    this.name = \"AppwriteException\";\n    this.message = message;\n    this.code = code;\n    this.type = type;\n    this.response = response;\n  }\n};\nfunction getUserAgent() {\n  let ua = \"AppwriteNodeJSSDK/13.0.0\";\n  const platform = [];\n  if (typeof process !== \"undefined\") {\n    if (typeof process.platform === \"string\")\n      platform.push(process.platform);\n    if (typeof process.arch === \"string\")\n      platform.push(process.arch);\n  }\n  if (platform.length > 0) {\n    ua += ` (${platform.join(\"; \")})`;\n  }\n  if (typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\") {\n    ua += ` ${navigator.userAgent}`;\n  } else if (typeof globalThis.EdgeRuntime === \"string\") {\n    ua += ` EdgeRuntime`;\n  } else if (typeof process !== \"undefined\" && typeof process.version === \"string\") {\n    ua += ` Node.js/${process.version}`;\n  }\n  return ua;\n}\nvar _Client = class _Client {\n  constructor() {\n    this.config = {\n      endpoint: \"https://cloud.appwrite.io/v1\",\n      selfSigned: false,\n      project: \"\",\n      key: \"\",\n      jwt: \"\",\n      locale: \"\",\n      session: \"\",\n      forwardeduseragent: \"\"\n    };\n    this.headers = {\n      \"x-sdk-name\": \"Node.js\",\n      \"x-sdk-platform\": \"server\",\n      \"x-sdk-language\": \"nodejs\",\n      \"x-sdk-version\": \"13.0.0\",\n      \"user-agent\": getUserAgent(),\n      \"X-Appwrite-Response-Format\": \"1.5.0\"\n    };\n  }\n  /**\n   * Set Endpoint\n   *\n   * Your project endpoint\n   *\n   * @param {string} endpoint\n   *\n   * @returns {this}\n   */\n  setEndpoint(endpoint) {\n    this.config.endpoint = endpoint;\n    return this;\n  }\n  /**\n   * Set self-signed\n   *\n   * @param {boolean} selfSigned\n   *\n   * @returns {this}\n   */\n  setSelfSigned(selfSigned) {\n    if (typeof globalThis.EdgeRuntime !== \"undefined\") {\n      console.warn(\"setSelfSigned is not supported in edge runtimes.\");\n    }\n    this.config.selfSigned = selfSigned;\n    return this;\n  }\n  /**\n   * Add header\n   *\n   * @param {string} header\n   * @param {string} value\n   *\n   * @returns {this}\n   */\n  addHeader(header, value) {\n    this.headers[header.toLowerCase()] = value;\n    return this;\n  }\n  /**\n   * Set Project\n   *\n   * Your project ID\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setProject(value) {\n    this.headers[\"X-Appwrite-Project\"] = value;\n    this.config.project = value;\n    return this;\n  }\n  /**\n   * Set Key\n   *\n   * Your secret API key\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setKey(value) {\n    this.headers[\"X-Appwrite-Key\"] = value;\n    this.config.key = value;\n    return this;\n  }\n  /**\n   * Set JWT\n   *\n   * Your secret JSON Web Token\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setJWT(value) {\n    this.headers[\"X-Appwrite-JWT\"] = value;\n    this.config.jwt = value;\n    return this;\n  }\n  /**\n   * Set Locale\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setLocale(value) {\n    this.headers[\"X-Appwrite-Locale\"] = value;\n    this.config.locale = value;\n    return this;\n  }\n  /**\n   * Set Session\n   *\n   * The user session to authenticate with\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setSession(value) {\n    this.headers[\"X-Appwrite-Session\"] = value;\n    this.config.session = value;\n    return this;\n  }\n  /**\n   * Set ForwardedUserAgent\n   *\n   * The user agent string of the client that made the request\n   *\n   * @param value string\n   *\n   * @return {this}\n   */\n  setForwardedUserAgent(value) {\n    this.headers[\"X-Forwarded-User-Agent\"] = value;\n    this.config.forwardeduseragent = value;\n    return this;\n  }\n  prepareRequest(method, url, headers = {}, params = {}) {\n    method = method.toUpperCase();\n    headers = Object.assign({}, this.headers, headers);\n    let options = {\n      method,\n      headers,\n      ...(0,node_fetch_native_with_agent_agent__WEBPACK_IMPORTED_MODULE_1__.createAgent)(this.config.endpoint, { rejectUnauthorized: !this.config.selfSigned })\n    };\n    if (method === \"GET\") {\n      for (const [key, value] of Object.entries(_Client.flatten(params))) {\n        url.searchParams.append(key, value);\n      }\n    } else {\n      switch (headers[\"content-type\"]) {\n        case \"application/json\":\n          options.body = JSON.stringify(params);\n          break;\n        case \"multipart/form-data\":\n          const formData = new node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.FormData();\n          for (const [key, value] of Object.entries(params)) {\n            if (value instanceof node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.File) {\n              formData.append(key, value, value.name);\n            } else if (Array.isArray(value)) {\n              for (const nestedValue of value) {\n                formData.append(`${key}[]`, nestedValue);\n              }\n            } else {\n              formData.append(key, value);\n            }\n          }\n          options.body = formData;\n          delete headers[\"content-type\"];\n          break;\n      }\n    }\n    return { uri: url.toString(), options };\n  }\n  async chunkedUpload(method, url, headers = {}, originalPayload = {}, onProgress) {\n    const file = Object.values(originalPayload).find((value) => value instanceof node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.File);\n    if (file.size <= _Client.CHUNK_SIZE) {\n      return await this.call(method, url, headers, originalPayload);\n    }\n    let start = 0;\n    let response = null;\n    while (start < file.size) {\n      let end = start + _Client.CHUNK_SIZE;\n      if (end >= file.size) {\n        end = file.size;\n      }\n      headers[\"content-range\"] = `bytes ${start}-${end - 1}/${file.size}`;\n      const chunk = file.slice(start, end);\n      let payload = { ...originalPayload, file: new node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.File([chunk], file.name) };\n      response = await this.call(method, url, headers, payload);\n      if (onProgress && typeof onProgress === \"function\") {\n        onProgress({\n          $id: response.$id,\n          progress: Math.round(end / file.size * 100),\n          sizeUploaded: end,\n          chunksTotal: Math.ceil(file.size / _Client.CHUNK_SIZE),\n          chunksUploaded: Math.ceil(end / _Client.CHUNK_SIZE)\n        });\n      }\n      if (response && response.$id) {\n        headers[\"x-appwrite-id\"] = response.$id;\n      }\n      start = end;\n    }\n    return response;\n  }\n  async redirect(method, url, headers = {}, params = {}) {\n    const { uri, options } = this.prepareRequest(method, url, headers, params);\n    const response = await (0,node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.fetch)(uri, {\n      ...options,\n      redirect: \"manual\"\n    });\n    if (response.status !== 301 && response.status !== 302) {\n      throw new AppwriteException(\"Invalid redirect\", response.status);\n    }\n    return response.headers.get(\"location\") || \"\";\n  }\n  async call(method, url, headers = {}, params = {}, responseType = \"json\") {\n    var _a;\n    const { uri, options } = this.prepareRequest(method, url, headers, params);\n    let data = null;\n    const response = await (0,node_fetch_native_with_agent__WEBPACK_IMPORTED_MODULE_0__.fetch)(uri, options);\n    if ((_a = response.headers.get(\"content-type\")) == null ? void 0 : _a.includes(\"application/json\")) {\n      data = await response.json();\n    } else if (responseType === \"arrayBuffer\") {\n      data = await response.arrayBuffer();\n    } else {\n      data = {\n        message: await response.text()\n      };\n    }\n    if (400 <= response.status) {\n      throw new AppwriteException(data == null ? void 0 : data.message, response.status, data == null ? void 0 : data.type, data);\n    }\n    return data;\n  }\n  static flatten(data, prefix = \"\") {\n    let output = {};\n    for (const [key, value] of Object.entries(data)) {\n      let finalKey = prefix ? prefix + \"[\" + key + \"]\" : key;\n      if (Array.isArray(value)) {\n        output = { ...output, ..._Client.flatten(value, finalKey) };\n      } else {\n        output[finalKey] = value;\n      }\n    }\n    return output;\n  }\n};\n_Client.CHUNK_SIZE = 1024 * 1024 * 5;\nvar Client = _Client;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=client.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/client.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/authentication-factor.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/authentication-factor.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationFactor: () => (/* binding */ AuthenticationFactor)\n/* harmony export */ });\n// src/enums/authentication-factor.ts\nvar AuthenticationFactor = /* @__PURE__ */ ((AuthenticationFactor2) => {\n  AuthenticationFactor2[\"Email\"] = \"email\";\n  AuthenticationFactor2[\"Phone\"] = \"phone\";\n  AuthenticationFactor2[\"Totp\"] = \"totp\";\n  AuthenticationFactor2[\"Recoverycode\"] = \"recoverycode\";\n  return AuthenticationFactor2;\n})(AuthenticationFactor || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=authentication-factor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9hdXRoZW50aWNhdGlvbi1mYWN0b3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCOztBQUVHO0FBQ2hDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9hdXRoZW50aWNhdGlvbi1mYWN0b3IubWpzP2M1YjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2VudW1zL2F1dGhlbnRpY2F0aW9uLWZhY3Rvci50c1xudmFyIEF1dGhlbnRpY2F0aW9uRmFjdG9yID0gLyogQF9fUFVSRV9fICovICgoQXV0aGVudGljYXRpb25GYWN0b3IyKSA9PiB7XG4gIEF1dGhlbnRpY2F0aW9uRmFjdG9yMltcIkVtYWlsXCJdID0gXCJlbWFpbFwiO1xuICBBdXRoZW50aWNhdGlvbkZhY3RvcjJbXCJQaG9uZVwiXSA9IFwicGhvbmVcIjtcbiAgQXV0aGVudGljYXRpb25GYWN0b3IyW1wiVG90cFwiXSA9IFwidG90cFwiO1xuICBBdXRoZW50aWNhdGlvbkZhY3RvcjJbXCJSZWNvdmVyeWNvZGVcIl0gPSBcInJlY292ZXJ5Y29kZVwiO1xuICByZXR1cm4gQXV0aGVudGljYXRpb25GYWN0b3IyO1xufSkoQXV0aGVudGljYXRpb25GYWN0b3IgfHwge30pO1xuXG5leHBvcnQgeyBBdXRoZW50aWNhdGlvbkZhY3RvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aGVudGljYXRpb24tZmFjdG9yLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/authentication-factor.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/authenticator-type.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/authenticator-type.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticatorType: () => (/* binding */ AuthenticatorType)\n/* harmony export */ });\n// src/enums/authenticator-type.ts\nvar AuthenticatorType = /* @__PURE__ */ ((AuthenticatorType2) => {\n  AuthenticatorType2[\"Totp\"] = \"totp\";\n  return AuthenticatorType2;\n})(AuthenticatorType || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=authenticator-type.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9hdXRoZW50aWNhdG9yLXR5cGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMseUJBQXlCOztBQUVHO0FBQzdCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9hdXRoZW50aWNhdG9yLXR5cGUubWpzPzkzZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2VudW1zL2F1dGhlbnRpY2F0b3ItdHlwZS50c1xudmFyIEF1dGhlbnRpY2F0b3JUeXBlID0gLyogQF9fUFVSRV9fICovICgoQXV0aGVudGljYXRvclR5cGUyKSA9PiB7XG4gIEF1dGhlbnRpY2F0b3JUeXBlMltcIlRvdHBcIl0gPSBcInRvdHBcIjtcbiAgcmV0dXJuIEF1dGhlbnRpY2F0b3JUeXBlMjtcbn0pKEF1dGhlbnRpY2F0b3JUeXBlIHx8IHt9KTtcblxuZXhwb3J0IHsgQXV0aGVudGljYXRvclR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhlbnRpY2F0b3ItdHlwZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/authenticator-type.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/browser.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/browser.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Browser: () => (/* binding */ Browser)\n/* harmony export */ });\n// src/enums/browser.ts\nvar Browser = /* @__PURE__ */ ((Browser2) => {\n  Browser2[\"AvantBrowser\"] = \"aa\";\n  Browser2[\"AndroidWebViewBeta\"] = \"an\";\n  Browser2[\"GoogleChrome\"] = \"ch\";\n  Browser2[\"GoogleChromeIOS\"] = \"ci\";\n  Browser2[\"GoogleChromeMobile\"] = \"cm\";\n  Browser2[\"Chromium\"] = \"cr\";\n  Browser2[\"MozillaFirefox\"] = \"ff\";\n  Browser2[\"Safari\"] = \"sf\";\n  Browser2[\"MobileSafari\"] = \"mf\";\n  Browser2[\"MicrosoftEdge\"] = \"ps\";\n  Browser2[\"MicrosoftEdgeIOS\"] = \"oi\";\n  Browser2[\"OperaMini\"] = \"om\";\n  Browser2[\"Opera\"] = \"op\";\n  Browser2[\"OperaNext\"] = \"on\";\n  return Browser2;\n})(Browser || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=browser.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9icm93c2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZUFBZTs7QUFFRztBQUNuQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvZW51bXMvYnJvd3Nlci5tanM/MWU0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZW51bXMvYnJvd3Nlci50c1xudmFyIEJyb3dzZXIgPSAvKiBAX19QVVJFX18gKi8gKChCcm93c2VyMikgPT4ge1xuICBCcm93c2VyMltcIkF2YW50QnJvd3NlclwiXSA9IFwiYWFcIjtcbiAgQnJvd3NlcjJbXCJBbmRyb2lkV2ViVmlld0JldGFcIl0gPSBcImFuXCI7XG4gIEJyb3dzZXIyW1wiR29vZ2xlQ2hyb21lXCJdID0gXCJjaFwiO1xuICBCcm93c2VyMltcIkdvb2dsZUNocm9tZUlPU1wiXSA9IFwiY2lcIjtcbiAgQnJvd3NlcjJbXCJHb29nbGVDaHJvbWVNb2JpbGVcIl0gPSBcImNtXCI7XG4gIEJyb3dzZXIyW1wiQ2hyb21pdW1cIl0gPSBcImNyXCI7XG4gIEJyb3dzZXIyW1wiTW96aWxsYUZpcmVmb3hcIl0gPSBcImZmXCI7XG4gIEJyb3dzZXIyW1wiU2FmYXJpXCJdID0gXCJzZlwiO1xuICBCcm93c2VyMltcIk1vYmlsZVNhZmFyaVwiXSA9IFwibWZcIjtcbiAgQnJvd3NlcjJbXCJNaWNyb3NvZnRFZGdlXCJdID0gXCJwc1wiO1xuICBCcm93c2VyMltcIk1pY3Jvc29mdEVkZ2VJT1NcIl0gPSBcIm9pXCI7XG4gIEJyb3dzZXIyW1wiT3BlcmFNaW5pXCJdID0gXCJvbVwiO1xuICBCcm93c2VyMltcIk9wZXJhXCJdID0gXCJvcFwiO1xuICBCcm93c2VyMltcIk9wZXJhTmV4dFwiXSA9IFwib25cIjtcbiAgcmV0dXJuIEJyb3dzZXIyO1xufSkoQnJvd3NlciB8fCB7fSk7XG5cbmV4cG9ydCB7IEJyb3dzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/browser.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/compression.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/compression.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compression: () => (/* binding */ Compression)\n/* harmony export */ });\n// src/enums/compression.ts\nvar Compression = /* @__PURE__ */ ((Compression2) => {\n  Compression2[\"None\"] = \"none\";\n  Compression2[\"Gzip\"] = \"gzip\";\n  Compression2[\"Zstd\"] = \"zstd\";\n  return Compression2;\n})(Compression || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=compression.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9jb21wcmVzc2lvbi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUJBQW1COztBQUVHO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9jb21wcmVzc2lvbi5tanM/MDk3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZW51bXMvY29tcHJlc3Npb24udHNcbnZhciBDb21wcmVzc2lvbiA9IC8qIEBfX1BVUkVfXyAqLyAoKENvbXByZXNzaW9uMikgPT4ge1xuICBDb21wcmVzc2lvbjJbXCJOb25lXCJdID0gXCJub25lXCI7XG4gIENvbXByZXNzaW9uMltcIkd6aXBcIl0gPSBcImd6aXBcIjtcbiAgQ29tcHJlc3Npb24yW1wiWnN0ZFwiXSA9IFwienN0ZFwiO1xuICByZXR1cm4gQ29tcHJlc3Npb24yO1xufSkoQ29tcHJlc3Npb24gfHwge30pO1xuXG5leHBvcnQgeyBDb21wcmVzc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcHJlc3Npb24ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/compression.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/credit-card.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/credit-card.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreditCard: () => (/* binding */ CreditCard)\n/* harmony export */ });\n// src/enums/credit-card.ts\nvar CreditCard = /* @__PURE__ */ ((CreditCard2) => {\n  CreditCard2[\"AmericanExpress\"] = \"amex\";\n  CreditCard2[\"Argencard\"] = \"argencard\";\n  CreditCard2[\"Cabal\"] = \"cabal\";\n  CreditCard2[\"Cencosud\"] = \"cencosud\";\n  CreditCard2[\"DinersClub\"] = \"diners\";\n  CreditCard2[\"Discover\"] = \"discover\";\n  CreditCard2[\"Elo\"] = \"elo\";\n  CreditCard2[\"Hipercard\"] = \"hipercard\";\n  CreditCard2[\"JCB\"] = \"jcb\";\n  CreditCard2[\"Mastercard\"] = \"mastercard\";\n  CreditCard2[\"Naranja\"] = \"naranja\";\n  CreditCard2[\"TarjetaShopping\"] = \"targeta-shopping\";\n  CreditCard2[\"UnionChinaPay\"] = \"union-china-pay\";\n  CreditCard2[\"Visa\"] = \"visa\";\n  CreditCard2[\"MIR\"] = \"mir\";\n  CreditCard2[\"Maestro\"] = \"maestro\";\n  return CreditCard2;\n})(CreditCard || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=credit-card.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9jcmVkaXQtY2FyZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQkFBa0I7O0FBRUc7QUFDdEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL2NyZWRpdC1jYXJkLm1qcz9iZWUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9jcmVkaXQtY2FyZC50c1xudmFyIENyZWRpdENhcmQgPSAvKiBAX19QVVJFX18gKi8gKChDcmVkaXRDYXJkMikgPT4ge1xuICBDcmVkaXRDYXJkMltcIkFtZXJpY2FuRXhwcmVzc1wiXSA9IFwiYW1leFwiO1xuICBDcmVkaXRDYXJkMltcIkFyZ2VuY2FyZFwiXSA9IFwiYXJnZW5jYXJkXCI7XG4gIENyZWRpdENhcmQyW1wiQ2FiYWxcIl0gPSBcImNhYmFsXCI7XG4gIENyZWRpdENhcmQyW1wiQ2VuY29zdWRcIl0gPSBcImNlbmNvc3VkXCI7XG4gIENyZWRpdENhcmQyW1wiRGluZXJzQ2x1YlwiXSA9IFwiZGluZXJzXCI7XG4gIENyZWRpdENhcmQyW1wiRGlzY292ZXJcIl0gPSBcImRpc2NvdmVyXCI7XG4gIENyZWRpdENhcmQyW1wiRWxvXCJdID0gXCJlbG9cIjtcbiAgQ3JlZGl0Q2FyZDJbXCJIaXBlcmNhcmRcIl0gPSBcImhpcGVyY2FyZFwiO1xuICBDcmVkaXRDYXJkMltcIkpDQlwiXSA9IFwiamNiXCI7XG4gIENyZWRpdENhcmQyW1wiTWFzdGVyY2FyZFwiXSA9IFwibWFzdGVyY2FyZFwiO1xuICBDcmVkaXRDYXJkMltcIk5hcmFuamFcIl0gPSBcIm5hcmFuamFcIjtcbiAgQ3JlZGl0Q2FyZDJbXCJUYXJqZXRhU2hvcHBpbmdcIl0gPSBcInRhcmdldGEtc2hvcHBpbmdcIjtcbiAgQ3JlZGl0Q2FyZDJbXCJVbmlvbkNoaW5hUGF5XCJdID0gXCJ1bmlvbi1jaGluYS1wYXlcIjtcbiAgQ3JlZGl0Q2FyZDJbXCJWaXNhXCJdID0gXCJ2aXNhXCI7XG4gIENyZWRpdENhcmQyW1wiTUlSXCJdID0gXCJtaXJcIjtcbiAgQ3JlZGl0Q2FyZDJbXCJNYWVzdHJvXCJdID0gXCJtYWVzdHJvXCI7XG4gIHJldHVybiBDcmVkaXRDYXJkMjtcbn0pKENyZWRpdENhcmQgfHwge30pO1xuXG5leHBvcnQgeyBDcmVkaXRDYXJkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVkaXQtY2FyZC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/credit-card.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/execution-method.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/execution-method.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExecutionMethod: () => (/* binding */ ExecutionMethod)\n/* harmony export */ });\n// src/enums/execution-method.ts\nvar ExecutionMethod = /* @__PURE__ */ ((ExecutionMethod2) => {\n  ExecutionMethod2[\"GET\"] = \"GET\";\n  ExecutionMethod2[\"POST\"] = \"POST\";\n  ExecutionMethod2[\"PUT\"] = \"PUT\";\n  ExecutionMethod2[\"PATCH\"] = \"PATCH\";\n  ExecutionMethod2[\"DELETE\"] = \"DELETE\";\n  ExecutionMethod2[\"OPTIONS\"] = \"OPTIONS\";\n  return ExecutionMethod2;\n})(ExecutionMethod || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=execution-method.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9leGVjdXRpb24tbWV0aG9kLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx1QkFBdUI7O0FBRUc7QUFDM0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL2V4ZWN1dGlvbi1tZXRob2QubWpzP2Q0YzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2VudW1zL2V4ZWN1dGlvbi1tZXRob2QudHNcbnZhciBFeGVjdXRpb25NZXRob2QgPSAvKiBAX19QVVJFX18gKi8gKChFeGVjdXRpb25NZXRob2QyKSA9PiB7XG4gIEV4ZWN1dGlvbk1ldGhvZDJbXCJHRVRcIl0gPSBcIkdFVFwiO1xuICBFeGVjdXRpb25NZXRob2QyW1wiUE9TVFwiXSA9IFwiUE9TVFwiO1xuICBFeGVjdXRpb25NZXRob2QyW1wiUFVUXCJdID0gXCJQVVRcIjtcbiAgRXhlY3V0aW9uTWV0aG9kMltcIlBBVENIXCJdID0gXCJQQVRDSFwiO1xuICBFeGVjdXRpb25NZXRob2QyW1wiREVMRVRFXCJdID0gXCJERUxFVEVcIjtcbiAgRXhlY3V0aW9uTWV0aG9kMltcIk9QVElPTlNcIl0gPSBcIk9QVElPTlNcIjtcbiAgcmV0dXJuIEV4ZWN1dGlvbk1ldGhvZDI7XG59KShFeGVjdXRpb25NZXRob2QgfHwge30pO1xuXG5leHBvcnQgeyBFeGVjdXRpb25NZXRob2QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4ZWN1dGlvbi1tZXRob2QubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/execution-method.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/flag.mjs":
/*!********************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/flag.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Flag: () => (/* binding */ Flag)\n/* harmony export */ });\n// src/enums/flag.ts\nvar Flag = /* @__PURE__ */ ((Flag2) => {\n  Flag2[\"Afghanistan\"] = \"af\";\n  Flag2[\"Angola\"] = \"ao\";\n  Flag2[\"Albania\"] = \"al\";\n  Flag2[\"Andorra\"] = \"ad\";\n  Flag2[\"UnitedArabEmirates\"] = \"ae\";\n  Flag2[\"Argentina\"] = \"ar\";\n  Flag2[\"Armenia\"] = \"am\";\n  Flag2[\"AntiguaAndBarbuda\"] = \"ag\";\n  Flag2[\"Australia\"] = \"au\";\n  Flag2[\"Austria\"] = \"at\";\n  Flag2[\"Azerbaijan\"] = \"az\";\n  Flag2[\"Burundi\"] = \"bi\";\n  Flag2[\"Belgium\"] = \"be\";\n  Flag2[\"Benin\"] = \"bj\";\n  Flag2[\"BurkinaFaso\"] = \"bf\";\n  Flag2[\"Bangladesh\"] = \"bd\";\n  Flag2[\"Bulgaria\"] = \"bg\";\n  Flag2[\"Bahrain\"] = \"bh\";\n  Flag2[\"Bahamas\"] = \"bs\";\n  Flag2[\"BosniaAndHerzegovina\"] = \"ba\";\n  Flag2[\"Belarus\"] = \"by\";\n  Flag2[\"Belize\"] = \"bz\";\n  Flag2[\"Bolivia\"] = \"bo\";\n  Flag2[\"Brazil\"] = \"br\";\n  Flag2[\"Barbados\"] = \"bb\";\n  Flag2[\"BruneiDarussalam\"] = \"bn\";\n  Flag2[\"Bhutan\"] = \"bt\";\n  Flag2[\"Botswana\"] = \"bw\";\n  Flag2[\"CentralAfricanRepublic\"] = \"cf\";\n  Flag2[\"Canada\"] = \"ca\";\n  Flag2[\"Switzerland\"] = \"ch\";\n  Flag2[\"Chile\"] = \"cl\";\n  Flag2[\"China\"] = \"cn\";\n  Flag2[\"CoteDIvoire\"] = \"ci\";\n  Flag2[\"Cameroon\"] = \"cm\";\n  Flag2[\"DemocraticRepublicOfTheCongo\"] = \"cd\";\n  Flag2[\"RepublicOfTheCongo\"] = \"cg\";\n  Flag2[\"Colombia\"] = \"co\";\n  Flag2[\"Comoros\"] = \"km\";\n  Flag2[\"CapeVerde\"] = \"cv\";\n  Flag2[\"CostaRica\"] = \"cr\";\n  Flag2[\"Cuba\"] = \"cu\";\n  Flag2[\"Cyprus\"] = \"cy\";\n  Flag2[\"CzechRepublic\"] = \"cz\";\n  Flag2[\"Germany\"] = \"de\";\n  Flag2[\"Djibouti\"] = \"dj\";\n  Flag2[\"Dominica\"] = \"dm\";\n  Flag2[\"Denmark\"] = \"dk\";\n  Flag2[\"DominicanRepublic\"] = \"do\";\n  Flag2[\"Algeria\"] = \"dz\";\n  Flag2[\"Ecuador\"] = \"ec\";\n  Flag2[\"Egypt\"] = \"eg\";\n  Flag2[\"Eritrea\"] = \"er\";\n  Flag2[\"Spain\"] = \"es\";\n  Flag2[\"Estonia\"] = \"ee\";\n  Flag2[\"Ethiopia\"] = \"et\";\n  Flag2[\"Finland\"] = \"fi\";\n  Flag2[\"Fiji\"] = \"fj\";\n  Flag2[\"France\"] = \"fr\";\n  Flag2[\"MicronesiaFederatedStatesOf\"] = \"fm\";\n  Flag2[\"Gabon\"] = \"ga\";\n  Flag2[\"UnitedKingdom\"] = \"gb\";\n  Flag2[\"Georgia\"] = \"ge\";\n  Flag2[\"Ghana\"] = \"gh\";\n  Flag2[\"Guinea\"] = \"gn\";\n  Flag2[\"Gambia\"] = \"gm\";\n  Flag2[\"GuineaBissau\"] = \"gw\";\n  Flag2[\"EquatorialGuinea\"] = \"gq\";\n  Flag2[\"Greece\"] = \"gr\";\n  Flag2[\"Grenada\"] = \"gd\";\n  Flag2[\"Guatemala\"] = \"gt\";\n  Flag2[\"Guyana\"] = \"gy\";\n  Flag2[\"Honduras\"] = \"hn\";\n  Flag2[\"Croatia\"] = \"hr\";\n  Flag2[\"Haiti\"] = \"ht\";\n  Flag2[\"Hungary\"] = \"hu\";\n  Flag2[\"Indonesia\"] = \"id\";\n  Flag2[\"India\"] = \"in\";\n  Flag2[\"Ireland\"] = \"ie\";\n  Flag2[\"IranIslamicRepublicOf\"] = \"ir\";\n  Flag2[\"Iraq\"] = \"iq\";\n  Flag2[\"Iceland\"] = \"is\";\n  Flag2[\"Israel\"] = \"il\";\n  Flag2[\"Italy\"] = \"it\";\n  Flag2[\"Jamaica\"] = \"jm\";\n  Flag2[\"Jordan\"] = \"jo\";\n  Flag2[\"Japan\"] = \"jp\";\n  Flag2[\"Kazakhstan\"] = \"kz\";\n  Flag2[\"Kenya\"] = \"ke\";\n  Flag2[\"Kyrgyzstan\"] = \"kg\";\n  Flag2[\"Cambodia\"] = \"kh\";\n  Flag2[\"Kiribati\"] = \"ki\";\n  Flag2[\"SaintKittsAndNevis\"] = \"kn\";\n  Flag2[\"SouthKorea\"] = \"kr\";\n  Flag2[\"Kuwait\"] = \"kw\";\n  Flag2[\"LaoPeopleSDemocraticRepublic\"] = \"la\";\n  Flag2[\"Lebanon\"] = \"lb\";\n  Flag2[\"Liberia\"] = \"lr\";\n  Flag2[\"Libya\"] = \"ly\";\n  Flag2[\"SaintLucia\"] = \"lc\";\n  Flag2[\"Liechtenstein\"] = \"li\";\n  Flag2[\"SriLanka\"] = \"lk\";\n  Flag2[\"Lesotho\"] = \"ls\";\n  Flag2[\"Lithuania\"] = \"lt\";\n  Flag2[\"Luxembourg\"] = \"lu\";\n  Flag2[\"Latvia\"] = \"lv\";\n  Flag2[\"Morocco\"] = \"ma\";\n  Flag2[\"Monaco\"] = \"mc\";\n  Flag2[\"Moldova\"] = \"md\";\n  Flag2[\"Madagascar\"] = \"mg\";\n  Flag2[\"Maldives\"] = \"mv\";\n  Flag2[\"Mexico\"] = \"mx\";\n  Flag2[\"MarshallIslands\"] = \"mh\";\n  Flag2[\"NorthMacedonia\"] = \"mk\";\n  Flag2[\"Mali\"] = \"ml\";\n  Flag2[\"Malta\"] = \"mt\";\n  Flag2[\"Myanmar\"] = \"mm\";\n  Flag2[\"Montenegro\"] = \"me\";\n  Flag2[\"Mongolia\"] = \"mn\";\n  Flag2[\"Mozambique\"] = \"mz\";\n  Flag2[\"Mauritania\"] = \"mr\";\n  Flag2[\"Mauritius\"] = \"mu\";\n  Flag2[\"Malawi\"] = \"mw\";\n  Flag2[\"Malaysia\"] = \"my\";\n  Flag2[\"Namibia\"] = \"na\";\n  Flag2[\"Niger\"] = \"ne\";\n  Flag2[\"Nigeria\"] = \"ng\";\n  Flag2[\"Nicaragua\"] = \"ni\";\n  Flag2[\"Netherlands\"] = \"nl\";\n  Flag2[\"Norway\"] = \"no\";\n  Flag2[\"Nepal\"] = \"np\";\n  Flag2[\"Nauru\"] = \"nr\";\n  Flag2[\"NewZealand\"] = \"nz\";\n  Flag2[\"Oman\"] = \"om\";\n  Flag2[\"Pakistan\"] = \"pk\";\n  Flag2[\"Panama\"] = \"pa\";\n  Flag2[\"Peru\"] = \"pe\";\n  Flag2[\"Philippines\"] = \"ph\";\n  Flag2[\"Palau\"] = \"pw\";\n  Flag2[\"PapuaNewGuinea\"] = \"pg\";\n  Flag2[\"Poland\"] = \"pl\";\n  Flag2[\"FrenchPolynesia\"] = \"pf\";\n  Flag2[\"NorthKorea\"] = \"kp\";\n  Flag2[\"Portugal\"] = \"pt\";\n  Flag2[\"Paraguay\"] = \"py\";\n  Flag2[\"Qatar\"] = \"qa\";\n  Flag2[\"Romania\"] = \"ro\";\n  Flag2[\"Russia\"] = \"ru\";\n  Flag2[\"Rwanda\"] = \"rw\";\n  Flag2[\"SaudiArabia\"] = \"sa\";\n  Flag2[\"Sudan\"] = \"sd\";\n  Flag2[\"Senegal\"] = \"sn\";\n  Flag2[\"Singapore\"] = \"sg\";\n  Flag2[\"SolomonIslands\"] = \"sb\";\n  Flag2[\"SierraLeone\"] = \"sl\";\n  Flag2[\"ElSalvador\"] = \"sv\";\n  Flag2[\"SanMarino\"] = \"sm\";\n  Flag2[\"Somalia\"] = \"so\";\n  Flag2[\"Serbia\"] = \"rs\";\n  Flag2[\"SouthSudan\"] = \"ss\";\n  Flag2[\"SaoTomeAndPrincipe\"] = \"st\";\n  Flag2[\"Suriname\"] = \"sr\";\n  Flag2[\"Slovakia\"] = \"sk\";\n  Flag2[\"Slovenia\"] = \"si\";\n  Flag2[\"Sweden\"] = \"se\";\n  Flag2[\"Eswatini\"] = \"sz\";\n  Flag2[\"Seychelles\"] = \"sc\";\n  Flag2[\"Syria\"] = \"sy\";\n  Flag2[\"Chad\"] = \"td\";\n  Flag2[\"Togo\"] = \"tg\";\n  Flag2[\"Thailand\"] = \"th\";\n  Flag2[\"Tajikistan\"] = \"tj\";\n  Flag2[\"Turkmenistan\"] = \"tm\";\n  Flag2[\"TimorLeste\"] = \"tl\";\n  Flag2[\"Tonga\"] = \"to\";\n  Flag2[\"TrinidadAndTobago\"] = \"tt\";\n  Flag2[\"Tunisia\"] = \"tn\";\n  Flag2[\"Turkey\"] = \"tr\";\n  Flag2[\"Tuvalu\"] = \"tv\";\n  Flag2[\"Tanzania\"] = \"tz\";\n  Flag2[\"Uganda\"] = \"ug\";\n  Flag2[\"Ukraine\"] = \"ua\";\n  Flag2[\"Uruguay\"] = \"uy\";\n  Flag2[\"UnitedStates\"] = \"us\";\n  Flag2[\"Uzbekistan\"] = \"uz\";\n  Flag2[\"VaticanCity\"] = \"va\";\n  Flag2[\"SaintVincentAndTheGrenadines\"] = \"vc\";\n  Flag2[\"Venezuela\"] = \"ve\";\n  Flag2[\"Vietnam\"] = \"vn\";\n  Flag2[\"Vanuatu\"] = \"vu\";\n  Flag2[\"Samoa\"] = \"ws\";\n  Flag2[\"Yemen\"] = \"ye\";\n  Flag2[\"SouthAfrica\"] = \"za\";\n  Flag2[\"Zambia\"] = \"zm\";\n  Flag2[\"Zimbabwe\"] = \"zw\";\n  return Flag2;\n})(Flag || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=flag.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/flag.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/image-format.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/image-format.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageFormat: () => (/* binding */ ImageFormat)\n/* harmony export */ });\n// src/enums/image-format.ts\nvar ImageFormat = /* @__PURE__ */ ((ImageFormat2) => {\n  ImageFormat2[\"Jpg\"] = \"jpg\";\n  ImageFormat2[\"Jpeg\"] = \"jpeg\";\n  ImageFormat2[\"Gif\"] = \"gif\";\n  ImageFormat2[\"Png\"] = \"png\";\n  ImageFormat2[\"Webp\"] = \"webp\";\n  return ImageFormat2;\n})(ImageFormat || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=image-format.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9pbWFnZS1mb3JtYXQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxtQkFBbUI7O0FBRUc7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL2ltYWdlLWZvcm1hdC5tanM/MTE1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZW51bXMvaW1hZ2UtZm9ybWF0LnRzXG52YXIgSW1hZ2VGb3JtYXQgPSAvKiBAX19QVVJFX18gKi8gKChJbWFnZUZvcm1hdDIpID0+IHtcbiAgSW1hZ2VGb3JtYXQyW1wiSnBnXCJdID0gXCJqcGdcIjtcbiAgSW1hZ2VGb3JtYXQyW1wiSnBlZ1wiXSA9IFwianBlZ1wiO1xuICBJbWFnZUZvcm1hdDJbXCJHaWZcIl0gPSBcImdpZlwiO1xuICBJbWFnZUZvcm1hdDJbXCJQbmdcIl0gPSBcInBuZ1wiO1xuICBJbWFnZUZvcm1hdDJbXCJXZWJwXCJdID0gXCJ3ZWJwXCI7XG4gIHJldHVybiBJbWFnZUZvcm1hdDI7XG59KShJbWFnZUZvcm1hdCB8fCB7fSk7XG5cbmV4cG9ydCB7IEltYWdlRm9ybWF0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZS1mb3JtYXQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/image-format.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/image-gravity.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/image-gravity.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageGravity: () => (/* binding */ ImageGravity)\n/* harmony export */ });\n// src/enums/image-gravity.ts\nvar ImageGravity = /* @__PURE__ */ ((ImageGravity2) => {\n  ImageGravity2[\"Center\"] = \"center\";\n  ImageGravity2[\"Topleft\"] = \"top-left\";\n  ImageGravity2[\"Top\"] = \"top\";\n  ImageGravity2[\"Topright\"] = \"top-right\";\n  ImageGravity2[\"Left\"] = \"left\";\n  ImageGravity2[\"Right\"] = \"right\";\n  ImageGravity2[\"Bottomleft\"] = \"bottom-left\";\n  ImageGravity2[\"Bottom\"] = \"bottom\";\n  ImageGravity2[\"Bottomright\"] = \"bottom-right\";\n  return ImageGravity2;\n})(ImageGravity || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=image-gravity.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9pbWFnZS1ncmF2aXR5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0I7O0FBRUc7QUFDeEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL2ltYWdlLWdyYXZpdHkubWpzPzgxZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2VudW1zL2ltYWdlLWdyYXZpdHkudHNcbnZhciBJbWFnZUdyYXZpdHkgPSAvKiBAX19QVVJFX18gKi8gKChJbWFnZUdyYXZpdHkyKSA9PiB7XG4gIEltYWdlR3Jhdml0eTJbXCJDZW50ZXJcIl0gPSBcImNlbnRlclwiO1xuICBJbWFnZUdyYXZpdHkyW1wiVG9wbGVmdFwiXSA9IFwidG9wLWxlZnRcIjtcbiAgSW1hZ2VHcmF2aXR5MltcIlRvcFwiXSA9IFwidG9wXCI7XG4gIEltYWdlR3Jhdml0eTJbXCJUb3ByaWdodFwiXSA9IFwidG9wLXJpZ2h0XCI7XG4gIEltYWdlR3Jhdml0eTJbXCJMZWZ0XCJdID0gXCJsZWZ0XCI7XG4gIEltYWdlR3Jhdml0eTJbXCJSaWdodFwiXSA9IFwicmlnaHRcIjtcbiAgSW1hZ2VHcmF2aXR5MltcIkJvdHRvbWxlZnRcIl0gPSBcImJvdHRvbS1sZWZ0XCI7XG4gIEltYWdlR3Jhdml0eTJbXCJCb3R0b21cIl0gPSBcImJvdHRvbVwiO1xuICBJbWFnZUdyYXZpdHkyW1wiQm90dG9tcmlnaHRcIl0gPSBcImJvdHRvbS1yaWdodFwiO1xuICByZXR1cm4gSW1hZ2VHcmF2aXR5Mjtcbn0pKEltYWdlR3Jhdml0eSB8fCB7fSk7XG5cbmV4cG9ydCB7IEltYWdlR3Jhdml0eSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtZ3Jhdml0eS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/image-gravity.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/index-type.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/index-type.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexType: () => (/* binding */ IndexType)\n/* harmony export */ });\n// src/enums/index-type.ts\nvar IndexType = /* @__PURE__ */ ((IndexType2) => {\n  IndexType2[\"Key\"] = \"key\";\n  IndexType2[\"Fulltext\"] = \"fulltext\";\n  IndexType2[\"Unique\"] = \"unique\";\n  return IndexType2;\n})(IndexType || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index-type.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9pbmRleC10eXBlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxpQkFBaUI7O0FBRUc7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL2luZGV4LXR5cGUubWpzP2VmZWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2VudW1zL2luZGV4LXR5cGUudHNcbnZhciBJbmRleFR5cGUgPSAvKiBAX19QVVJFX18gKi8gKChJbmRleFR5cGUyKSA9PiB7XG4gIEluZGV4VHlwZTJbXCJLZXlcIl0gPSBcImtleVwiO1xuICBJbmRleFR5cGUyW1wiRnVsbHRleHRcIl0gPSBcImZ1bGx0ZXh0XCI7XG4gIEluZGV4VHlwZTJbXCJVbmlxdWVcIl0gPSBcInVuaXF1ZVwiO1xuICByZXR1cm4gSW5kZXhUeXBlMjtcbn0pKEluZGV4VHlwZSB8fCB7fSk7XG5cbmV4cG9ydCB7IEluZGV4VHlwZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgtdHlwZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/index-type.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/messaging-provider-type.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/messaging-provider-type.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MessagingProviderType: () => (/* binding */ MessagingProviderType)\n/* harmony export */ });\n// src/enums/messaging-provider-type.ts\nvar MessagingProviderType = /* @__PURE__ */ ((MessagingProviderType2) => {\n  MessagingProviderType2[\"Email\"] = \"email\";\n  MessagingProviderType2[\"Sms\"] = \"sms\";\n  MessagingProviderType2[\"Push\"] = \"push\";\n  return MessagingProviderType2;\n})(MessagingProviderType || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=messaging-provider-type.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9tZXNzYWdpbmctcHJvdmlkZXItdHlwZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCOztBQUVHO0FBQ2pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9tZXNzYWdpbmctcHJvdmlkZXItdHlwZS5tanM/N2RmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZW51bXMvbWVzc2FnaW5nLXByb3ZpZGVyLXR5cGUudHNcbnZhciBNZXNzYWdpbmdQcm92aWRlclR5cGUgPSAvKiBAX19QVVJFX18gKi8gKChNZXNzYWdpbmdQcm92aWRlclR5cGUyKSA9PiB7XG4gIE1lc3NhZ2luZ1Byb3ZpZGVyVHlwZTJbXCJFbWFpbFwiXSA9IFwiZW1haWxcIjtcbiAgTWVzc2FnaW5nUHJvdmlkZXJUeXBlMltcIlNtc1wiXSA9IFwic21zXCI7XG4gIE1lc3NhZ2luZ1Byb3ZpZGVyVHlwZTJbXCJQdXNoXCJdID0gXCJwdXNoXCI7XG4gIHJldHVybiBNZXNzYWdpbmdQcm92aWRlclR5cGUyO1xufSkoTWVzc2FnaW5nUHJvdmlkZXJUeXBlIHx8IHt9KTtcblxuZXhwb3J0IHsgTWVzc2FnaW5nUHJvdmlkZXJUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdpbmctcHJvdmlkZXItdHlwZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/messaging-provider-type.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/name.mjs":
/*!********************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/name.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Name: () => (/* binding */ Name)\n/* harmony export */ });\n// src/enums/name.ts\nvar Name = /* @__PURE__ */ ((Name2) => {\n  Name2[\"V1database\"] = \"v1-database\";\n  Name2[\"V1deletes\"] = \"v1-deletes\";\n  Name2[\"V1audits\"] = \"v1-audits\";\n  Name2[\"V1mails\"] = \"v1-mails\";\n  Name2[\"V1functions\"] = \"v1-functions\";\n  Name2[\"V1usage\"] = \"v1-usage\";\n  Name2[\"V1usagedump\"] = \"v1-usage-dump\";\n  Name2[\"Webhooksv1\"] = \"webhooksv1\";\n  Name2[\"V1certificates\"] = \"v1-certificates\";\n  Name2[\"V1builds\"] = \"v1-builds\";\n  Name2[\"V1messaging\"] = \"v1-messaging\";\n  Name2[\"V1migrations\"] = \"v1-migrations\";\n  return Name2;\n})(Name || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=name.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9uYW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxZQUFZOztBQUVHO0FBQ2hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9uYW1lLm1qcz83MjdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9uYW1lLnRzXG52YXIgTmFtZSA9IC8qIEBfX1BVUkVfXyAqLyAoKE5hbWUyKSA9PiB7XG4gIE5hbWUyW1wiVjFkYXRhYmFzZVwiXSA9IFwidjEtZGF0YWJhc2VcIjtcbiAgTmFtZTJbXCJWMWRlbGV0ZXNcIl0gPSBcInYxLWRlbGV0ZXNcIjtcbiAgTmFtZTJbXCJWMWF1ZGl0c1wiXSA9IFwidjEtYXVkaXRzXCI7XG4gIE5hbWUyW1wiVjFtYWlsc1wiXSA9IFwidjEtbWFpbHNcIjtcbiAgTmFtZTJbXCJWMWZ1bmN0aW9uc1wiXSA9IFwidjEtZnVuY3Rpb25zXCI7XG4gIE5hbWUyW1wiVjF1c2FnZVwiXSA9IFwidjEtdXNhZ2VcIjtcbiAgTmFtZTJbXCJWMXVzYWdlZHVtcFwiXSA9IFwidjEtdXNhZ2UtZHVtcFwiO1xuICBOYW1lMltcIldlYmhvb2tzdjFcIl0gPSBcIndlYmhvb2tzdjFcIjtcbiAgTmFtZTJbXCJWMWNlcnRpZmljYXRlc1wiXSA9IFwidjEtY2VydGlmaWNhdGVzXCI7XG4gIE5hbWUyW1wiVjFidWlsZHNcIl0gPSBcInYxLWJ1aWxkc1wiO1xuICBOYW1lMltcIlYxbWVzc2FnaW5nXCJdID0gXCJ2MS1tZXNzYWdpbmdcIjtcbiAgTmFtZTJbXCJWMW1pZ3JhdGlvbnNcIl0gPSBcInYxLW1pZ3JhdGlvbnNcIjtcbiAgcmV0dXJuIE5hbWUyO1xufSkoTmFtZSB8fCB7fSk7XG5cbmV4cG9ydCB7IE5hbWUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5hbWUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/name.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/o-auth-provider.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/o-auth-provider.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAuthProvider: () => (/* binding */ OAuthProvider)\n/* harmony export */ });\n// src/enums/o-auth-provider.ts\nvar OAuthProvider = /* @__PURE__ */ ((OAuthProvider2) => {\n  OAuthProvider2[\"Amazon\"] = \"amazon\";\n  OAuthProvider2[\"Apple\"] = \"apple\";\n  OAuthProvider2[\"Auth0\"] = \"auth0\";\n  OAuthProvider2[\"Authentik\"] = \"authentik\";\n  OAuthProvider2[\"Autodesk\"] = \"autodesk\";\n  OAuthProvider2[\"Bitbucket\"] = \"bitbucket\";\n  OAuthProvider2[\"Bitly\"] = \"bitly\";\n  OAuthProvider2[\"Box\"] = \"box\";\n  OAuthProvider2[\"Dailymotion\"] = \"dailymotion\";\n  OAuthProvider2[\"Discord\"] = \"discord\";\n  OAuthProvider2[\"Disqus\"] = \"disqus\";\n  OAuthProvider2[\"Dropbox\"] = \"dropbox\";\n  OAuthProvider2[\"Etsy\"] = \"etsy\";\n  OAuthProvider2[\"Facebook\"] = \"facebook\";\n  OAuthProvider2[\"Github\"] = \"github\";\n  OAuthProvider2[\"Gitlab\"] = \"gitlab\";\n  OAuthProvider2[\"Google\"] = \"google\";\n  OAuthProvider2[\"Linkedin\"] = \"linkedin\";\n  OAuthProvider2[\"Microsoft\"] = \"microsoft\";\n  OAuthProvider2[\"Notion\"] = \"notion\";\n  OAuthProvider2[\"Oidc\"] = \"oidc\";\n  OAuthProvider2[\"Okta\"] = \"okta\";\n  OAuthProvider2[\"Paypal\"] = \"paypal\";\n  OAuthProvider2[\"PaypalSandbox\"] = \"paypalSandbox\";\n  OAuthProvider2[\"Podio\"] = \"podio\";\n  OAuthProvider2[\"Salesforce\"] = \"salesforce\";\n  OAuthProvider2[\"Slack\"] = \"slack\";\n  OAuthProvider2[\"Spotify\"] = \"spotify\";\n  OAuthProvider2[\"Stripe\"] = \"stripe\";\n  OAuthProvider2[\"Tradeshift\"] = \"tradeshift\";\n  OAuthProvider2[\"TradeshiftBox\"] = \"tradeshiftBox\";\n  OAuthProvider2[\"Twitch\"] = \"twitch\";\n  OAuthProvider2[\"Wordpress\"] = \"wordpress\";\n  OAuthProvider2[\"Yahoo\"] = \"yahoo\";\n  OAuthProvider2[\"Yammer\"] = \"yammer\";\n  OAuthProvider2[\"Yandex\"] = \"yandex\";\n  OAuthProvider2[\"Zoho\"] = \"zoho\";\n  OAuthProvider2[\"Zoom\"] = \"zoom\";\n  OAuthProvider2[\"Mock\"] = \"mock\";\n  return OAuthProvider2;\n})(OAuthProvider || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=o-auth-provider.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9vLWF1dGgtcHJvdmlkZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHFCQUFxQjs7QUFFRztBQUN6QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvZW51bXMvby1hdXRoLXByb3ZpZGVyLm1qcz9jZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9vLWF1dGgtcHJvdmlkZXIudHNcbnZhciBPQXV0aFByb3ZpZGVyID0gLyogQF9fUFVSRV9fICovICgoT0F1dGhQcm92aWRlcjIpID0+IHtcbiAgT0F1dGhQcm92aWRlcjJbXCJBbWF6b25cIl0gPSBcImFtYXpvblwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkFwcGxlXCJdID0gXCJhcHBsZVwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkF1dGgwXCJdID0gXCJhdXRoMFwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkF1dGhlbnRpa1wiXSA9IFwiYXV0aGVudGlrXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiQXV0b2Rlc2tcIl0gPSBcImF1dG9kZXNrXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiQml0YnVja2V0XCJdID0gXCJiaXRidWNrZXRcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJCaXRseVwiXSA9IFwiYml0bHlcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJCb3hcIl0gPSBcImJveFwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkRhaWx5bW90aW9uXCJdID0gXCJkYWlseW1vdGlvblwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkRpc2NvcmRcIl0gPSBcImRpc2NvcmRcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJEaXNxdXNcIl0gPSBcImRpc3F1c1wiO1xuICBPQXV0aFByb3ZpZGVyMltcIkRyb3Bib3hcIl0gPSBcImRyb3Bib3hcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJFdHN5XCJdID0gXCJldHN5XCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiRmFjZWJvb2tcIl0gPSBcImZhY2Vib29rXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiR2l0aHViXCJdID0gXCJnaXRodWJcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJHaXRsYWJcIl0gPSBcImdpdGxhYlwiO1xuICBPQXV0aFByb3ZpZGVyMltcIkdvb2dsZVwiXSA9IFwiZ29vZ2xlXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiTGlua2VkaW5cIl0gPSBcImxpbmtlZGluXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiTWljcm9zb2Z0XCJdID0gXCJtaWNyb3NvZnRcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJOb3Rpb25cIl0gPSBcIm5vdGlvblwiO1xuICBPQXV0aFByb3ZpZGVyMltcIk9pZGNcIl0gPSBcIm9pZGNcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJPa3RhXCJdID0gXCJva3RhXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiUGF5cGFsXCJdID0gXCJwYXlwYWxcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJQYXlwYWxTYW5kYm94XCJdID0gXCJwYXlwYWxTYW5kYm94XCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiUG9kaW9cIl0gPSBcInBvZGlvXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiU2FsZXNmb3JjZVwiXSA9IFwic2FsZXNmb3JjZVwiO1xuICBPQXV0aFByb3ZpZGVyMltcIlNsYWNrXCJdID0gXCJzbGFja1wiO1xuICBPQXV0aFByb3ZpZGVyMltcIlNwb3RpZnlcIl0gPSBcInNwb3RpZnlcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJTdHJpcGVcIl0gPSBcInN0cmlwZVwiO1xuICBPQXV0aFByb3ZpZGVyMltcIlRyYWRlc2hpZnRcIl0gPSBcInRyYWRlc2hpZnRcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJUcmFkZXNoaWZ0Qm94XCJdID0gXCJ0cmFkZXNoaWZ0Qm94XCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiVHdpdGNoXCJdID0gXCJ0d2l0Y2hcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJXb3JkcHJlc3NcIl0gPSBcIndvcmRwcmVzc1wiO1xuICBPQXV0aFByb3ZpZGVyMltcIllhaG9vXCJdID0gXCJ5YWhvb1wiO1xuICBPQXV0aFByb3ZpZGVyMltcIllhbW1lclwiXSA9IFwieWFtbWVyXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiWWFuZGV4XCJdID0gXCJ5YW5kZXhcIjtcbiAgT0F1dGhQcm92aWRlcjJbXCJab2hvXCJdID0gXCJ6b2hvXCI7XG4gIE9BdXRoUHJvdmlkZXIyW1wiWm9vbVwiXSA9IFwiem9vbVwiO1xuICBPQXV0aFByb3ZpZGVyMltcIk1vY2tcIl0gPSBcIm1vY2tcIjtcbiAgcmV0dXJuIE9BdXRoUHJvdmlkZXIyO1xufSkoT0F1dGhQcm92aWRlciB8fCB7fSk7XG5cbmV4cG9ydCB7IE9BdXRoUHJvdmlkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW8tYXV0aC1wcm92aWRlci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/o-auth-provider.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/password-hash.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/password-hash.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PasswordHash: () => (/* binding */ PasswordHash)\n/* harmony export */ });\n// src/enums/password-hash.ts\nvar PasswordHash = /* @__PURE__ */ ((PasswordHash2) => {\n  PasswordHash2[\"Sha1\"] = \"sha1\";\n  PasswordHash2[\"Sha224\"] = \"sha224\";\n  PasswordHash2[\"Sha256\"] = \"sha256\";\n  PasswordHash2[\"Sha384\"] = \"sha384\";\n  PasswordHash2[\"Sha512224\"] = \"sha512/224\";\n  PasswordHash2[\"Sha512256\"] = \"sha512/256\";\n  PasswordHash2[\"Sha512\"] = \"sha512\";\n  PasswordHash2[\"Sha3224\"] = \"sha3-224\";\n  PasswordHash2[\"Sha3256\"] = \"sha3-256\";\n  PasswordHash2[\"Sha3384\"] = \"sha3-384\";\n  PasswordHash2[\"Sha3512\"] = \"sha3-512\";\n  return PasswordHash2;\n})(PasswordHash || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=password-hash.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9wYXNzd29yZC1oYXNoLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9COztBQUVHO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9wYXNzd29yZC1oYXNoLm1qcz80YTJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9wYXNzd29yZC1oYXNoLnRzXG52YXIgUGFzc3dvcmRIYXNoID0gLyogQF9fUFVSRV9fICovICgoUGFzc3dvcmRIYXNoMikgPT4ge1xuICBQYXNzd29yZEhhc2gyW1wiU2hhMVwiXSA9IFwic2hhMVwiO1xuICBQYXNzd29yZEhhc2gyW1wiU2hhMjI0XCJdID0gXCJzaGEyMjRcIjtcbiAgUGFzc3dvcmRIYXNoMltcIlNoYTI1NlwiXSA9IFwic2hhMjU2XCI7XG4gIFBhc3N3b3JkSGFzaDJbXCJTaGEzODRcIl0gPSBcInNoYTM4NFwiO1xuICBQYXNzd29yZEhhc2gyW1wiU2hhNTEyMjI0XCJdID0gXCJzaGE1MTIvMjI0XCI7XG4gIFBhc3N3b3JkSGFzaDJbXCJTaGE1MTIyNTZcIl0gPSBcInNoYTUxMi8yNTZcIjtcbiAgUGFzc3dvcmRIYXNoMltcIlNoYTUxMlwiXSA9IFwic2hhNTEyXCI7XG4gIFBhc3N3b3JkSGFzaDJbXCJTaGEzMjI0XCJdID0gXCJzaGEzLTIyNFwiO1xuICBQYXNzd29yZEhhc2gyW1wiU2hhMzI1NlwiXSA9IFwic2hhMy0yNTZcIjtcbiAgUGFzc3dvcmRIYXNoMltcIlNoYTMzODRcIl0gPSBcInNoYTMtMzg0XCI7XG4gIFBhc3N3b3JkSGFzaDJbXCJTaGEzNTEyXCJdID0gXCJzaGEzLTUxMlwiO1xuICByZXR1cm4gUGFzc3dvcmRIYXNoMjtcbn0pKFBhc3N3b3JkSGFzaCB8fCB7fSk7XG5cbmV4cG9ydCB7IFBhc3N3b3JkSGFzaCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFzc3dvcmQtaGFzaC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/password-hash.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/relation-mutate.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/relation-mutate.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RelationMutate: () => (/* binding */ RelationMutate)\n/* harmony export */ });\n// src/enums/relation-mutate.ts\nvar RelationMutate = /* @__PURE__ */ ((RelationMutate2) => {\n  RelationMutate2[\"Cascade\"] = \"cascade\";\n  RelationMutate2[\"Restrict\"] = \"restrict\";\n  RelationMutate2[\"SetNull\"] = \"setNull\";\n  return RelationMutate2;\n})(RelationMutate || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=relation-mutate.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9yZWxhdGlvbi1tdXRhdGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQjs7QUFFRztBQUMxQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvZW51bXMvcmVsYXRpb24tbXV0YXRlLm1qcz9lOTBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9yZWxhdGlvbi1tdXRhdGUudHNcbnZhciBSZWxhdGlvbk11dGF0ZSA9IC8qIEBfX1BVUkVfXyAqLyAoKFJlbGF0aW9uTXV0YXRlMikgPT4ge1xuICBSZWxhdGlvbk11dGF0ZTJbXCJDYXNjYWRlXCJdID0gXCJjYXNjYWRlXCI7XG4gIFJlbGF0aW9uTXV0YXRlMltcIlJlc3RyaWN0XCJdID0gXCJyZXN0cmljdFwiO1xuICBSZWxhdGlvbk11dGF0ZTJbXCJTZXROdWxsXCJdID0gXCJzZXROdWxsXCI7XG4gIHJldHVybiBSZWxhdGlvbk11dGF0ZTI7XG59KShSZWxhdGlvbk11dGF0ZSB8fCB7fSk7XG5cbmV4cG9ydCB7IFJlbGF0aW9uTXV0YXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWxhdGlvbi1tdXRhdGUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/relation-mutate.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/relationship-type.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/relationship-type.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RelationshipType: () => (/* binding */ RelationshipType)\n/* harmony export */ });\n// src/enums/relationship-type.ts\nvar RelationshipType = /* @__PURE__ */ ((RelationshipType2) => {\n  RelationshipType2[\"OneToOne\"] = \"oneToOne\";\n  RelationshipType2[\"ManyToOne\"] = \"manyToOne\";\n  RelationshipType2[\"ManyToMany\"] = \"manyToMany\";\n  RelationshipType2[\"OneToMany\"] = \"oneToMany\";\n  return RelationshipType2;\n})(RelationshipType || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=relationship-type.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9yZWxhdGlvbnNoaXAtdHlwZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3QkFBd0I7O0FBRUc7QUFDNUI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbm9kZS1hcHB3cml0ZS9kaXN0L2VudW1zL3JlbGF0aW9uc2hpcC10eXBlLm1qcz9lYmY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9yZWxhdGlvbnNoaXAtdHlwZS50c1xudmFyIFJlbGF0aW9uc2hpcFR5cGUgPSAvKiBAX19QVVJFX18gKi8gKChSZWxhdGlvbnNoaXBUeXBlMikgPT4ge1xuICBSZWxhdGlvbnNoaXBUeXBlMltcIk9uZVRvT25lXCJdID0gXCJvbmVUb09uZVwiO1xuICBSZWxhdGlvbnNoaXBUeXBlMltcIk1hbnlUb09uZVwiXSA9IFwibWFueVRvT25lXCI7XG4gIFJlbGF0aW9uc2hpcFR5cGUyW1wiTWFueVRvTWFueVwiXSA9IFwibWFueVRvTWFueVwiO1xuICBSZWxhdGlvbnNoaXBUeXBlMltcIk9uZVRvTWFueVwiXSA9IFwib25lVG9NYW55XCI7XG4gIHJldHVybiBSZWxhdGlvbnNoaXBUeXBlMjtcbn0pKFJlbGF0aW9uc2hpcFR5cGUgfHwge30pO1xuXG5leHBvcnQgeyBSZWxhdGlvbnNoaXBUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWxhdGlvbnNoaXAtdHlwZS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/relationship-type.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/runtime.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/runtime.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runtime: () => (/* binding */ Runtime)\n/* harmony export */ });\n// src/enums/runtime.ts\nvar Runtime = /* @__PURE__ */ ((Runtime2) => {\n  Runtime2[\"Node145\"] = \"node-14.5\";\n  Runtime2[\"Node160\"] = \"node-16.0\";\n  Runtime2[\"Node180\"] = \"node-18.0\";\n  Runtime2[\"Node190\"] = \"node-19.0\";\n  Runtime2[\"Node200\"] = \"node-20.0\";\n  Runtime2[\"Node210\"] = \"node-21.0\";\n  Runtime2[\"Php80\"] = \"php-8.0\";\n  Runtime2[\"Php81\"] = \"php-8.1\";\n  Runtime2[\"Php82\"] = \"php-8.2\";\n  Runtime2[\"Php83\"] = \"php-8.3\";\n  Runtime2[\"Ruby30\"] = \"ruby-3.0\";\n  Runtime2[\"Ruby31\"] = \"ruby-3.1\";\n  Runtime2[\"Ruby32\"] = \"ruby-3.2\";\n  Runtime2[\"Ruby33\"] = \"ruby-3.3\";\n  Runtime2[\"Python38\"] = \"python-3.8\";\n  Runtime2[\"Python39\"] = \"python-3.9\";\n  Runtime2[\"Python310\"] = \"python-3.10\";\n  Runtime2[\"Python311\"] = \"python-3.11\";\n  Runtime2[\"Python312\"] = \"python-3.12\";\n  Runtime2[\"Pythonml311\"] = \"python-ml-3.11\";\n  Runtime2[\"Deno140\"] = \"deno-1.40\";\n  Runtime2[\"Dart215\"] = \"dart-2.15\";\n  Runtime2[\"Dart216\"] = \"dart-2.16\";\n  Runtime2[\"Dart217\"] = \"dart-2.17\";\n  Runtime2[\"Dart218\"] = \"dart-2.18\";\n  Runtime2[\"Dart30\"] = \"dart-3.0\";\n  Runtime2[\"Dart31\"] = \"dart-3.1\";\n  Runtime2[\"Dart33\"] = \"dart-3.3\";\n  Runtime2[\"Dotnet31\"] = \"dotnet-3.1\";\n  Runtime2[\"Dotnet60\"] = \"dotnet-6.0\";\n  Runtime2[\"Dotnet70\"] = \"dotnet-7.0\";\n  Runtime2[\"Java80\"] = \"java-8.0\";\n  Runtime2[\"Java110\"] = \"java-11.0\";\n  Runtime2[\"Java170\"] = \"java-17.0\";\n  Runtime2[\"Java180\"] = \"java-18.0\";\n  Runtime2[\"Java210\"] = \"java-21.0\";\n  Runtime2[\"Swift55\"] = \"swift-5.5\";\n  Runtime2[\"Swift58\"] = \"swift-5.8\";\n  Runtime2[\"Swift59\"] = \"swift-5.9\";\n  Runtime2[\"Kotlin16\"] = \"kotlin-1.6\";\n  Runtime2[\"Kotlin18\"] = \"kotlin-1.8\";\n  Runtime2[\"Kotlin19\"] = \"kotlin-1.9\";\n  Runtime2[\"Cpp17\"] = \"cpp-17\";\n  Runtime2[\"Cpp20\"] = \"cpp-20\";\n  Runtime2[\"Bun10\"] = \"bun-1.0\";\n  return Runtime2;\n})(Runtime || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=runtime.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9ydW50aW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxlQUFlOztBQUVHO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9ydW50aW1lLm1qcz84OTRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9ydW50aW1lLnRzXG52YXIgUnVudGltZSA9IC8qIEBfX1BVUkVfXyAqLyAoKFJ1bnRpbWUyKSA9PiB7XG4gIFJ1bnRpbWUyW1wiTm9kZTE0NVwiXSA9IFwibm9kZS0xNC41XCI7XG4gIFJ1bnRpbWUyW1wiTm9kZTE2MFwiXSA9IFwibm9kZS0xNi4wXCI7XG4gIFJ1bnRpbWUyW1wiTm9kZTE4MFwiXSA9IFwibm9kZS0xOC4wXCI7XG4gIFJ1bnRpbWUyW1wiTm9kZTE5MFwiXSA9IFwibm9kZS0xOS4wXCI7XG4gIFJ1bnRpbWUyW1wiTm9kZTIwMFwiXSA9IFwibm9kZS0yMC4wXCI7XG4gIFJ1bnRpbWUyW1wiTm9kZTIxMFwiXSA9IFwibm9kZS0yMS4wXCI7XG4gIFJ1bnRpbWUyW1wiUGhwODBcIl0gPSBcInBocC04LjBcIjtcbiAgUnVudGltZTJbXCJQaHA4MVwiXSA9IFwicGhwLTguMVwiO1xuICBSdW50aW1lMltcIlBocDgyXCJdID0gXCJwaHAtOC4yXCI7XG4gIFJ1bnRpbWUyW1wiUGhwODNcIl0gPSBcInBocC04LjNcIjtcbiAgUnVudGltZTJbXCJSdWJ5MzBcIl0gPSBcInJ1YnktMy4wXCI7XG4gIFJ1bnRpbWUyW1wiUnVieTMxXCJdID0gXCJydWJ5LTMuMVwiO1xuICBSdW50aW1lMltcIlJ1YnkzMlwiXSA9IFwicnVieS0zLjJcIjtcbiAgUnVudGltZTJbXCJSdWJ5MzNcIl0gPSBcInJ1YnktMy4zXCI7XG4gIFJ1bnRpbWUyW1wiUHl0aG9uMzhcIl0gPSBcInB5dGhvbi0zLjhcIjtcbiAgUnVudGltZTJbXCJQeXRob24zOVwiXSA9IFwicHl0aG9uLTMuOVwiO1xuICBSdW50aW1lMltcIlB5dGhvbjMxMFwiXSA9IFwicHl0aG9uLTMuMTBcIjtcbiAgUnVudGltZTJbXCJQeXRob24zMTFcIl0gPSBcInB5dGhvbi0zLjExXCI7XG4gIFJ1bnRpbWUyW1wiUHl0aG9uMzEyXCJdID0gXCJweXRob24tMy4xMlwiO1xuICBSdW50aW1lMltcIlB5dGhvbm1sMzExXCJdID0gXCJweXRob24tbWwtMy4xMVwiO1xuICBSdW50aW1lMltcIkRlbm8xNDBcIl0gPSBcImRlbm8tMS40MFwiO1xuICBSdW50aW1lMltcIkRhcnQyMTVcIl0gPSBcImRhcnQtMi4xNVwiO1xuICBSdW50aW1lMltcIkRhcnQyMTZcIl0gPSBcImRhcnQtMi4xNlwiO1xuICBSdW50aW1lMltcIkRhcnQyMTdcIl0gPSBcImRhcnQtMi4xN1wiO1xuICBSdW50aW1lMltcIkRhcnQyMThcIl0gPSBcImRhcnQtMi4xOFwiO1xuICBSdW50aW1lMltcIkRhcnQzMFwiXSA9IFwiZGFydC0zLjBcIjtcbiAgUnVudGltZTJbXCJEYXJ0MzFcIl0gPSBcImRhcnQtMy4xXCI7XG4gIFJ1bnRpbWUyW1wiRGFydDMzXCJdID0gXCJkYXJ0LTMuM1wiO1xuICBSdW50aW1lMltcIkRvdG5ldDMxXCJdID0gXCJkb3RuZXQtMy4xXCI7XG4gIFJ1bnRpbWUyW1wiRG90bmV0NjBcIl0gPSBcImRvdG5ldC02LjBcIjtcbiAgUnVudGltZTJbXCJEb3RuZXQ3MFwiXSA9IFwiZG90bmV0LTcuMFwiO1xuICBSdW50aW1lMltcIkphdmE4MFwiXSA9IFwiamF2YS04LjBcIjtcbiAgUnVudGltZTJbXCJKYXZhMTEwXCJdID0gXCJqYXZhLTExLjBcIjtcbiAgUnVudGltZTJbXCJKYXZhMTcwXCJdID0gXCJqYXZhLTE3LjBcIjtcbiAgUnVudGltZTJbXCJKYXZhMTgwXCJdID0gXCJqYXZhLTE4LjBcIjtcbiAgUnVudGltZTJbXCJKYXZhMjEwXCJdID0gXCJqYXZhLTIxLjBcIjtcbiAgUnVudGltZTJbXCJTd2lmdDU1XCJdID0gXCJzd2lmdC01LjVcIjtcbiAgUnVudGltZTJbXCJTd2lmdDU4XCJdID0gXCJzd2lmdC01LjhcIjtcbiAgUnVudGltZTJbXCJTd2lmdDU5XCJdID0gXCJzd2lmdC01LjlcIjtcbiAgUnVudGltZTJbXCJLb3RsaW4xNlwiXSA9IFwia290bGluLTEuNlwiO1xuICBSdW50aW1lMltcIktvdGxpbjE4XCJdID0gXCJrb3RsaW4tMS44XCI7XG4gIFJ1bnRpbWUyW1wiS290bGluMTlcIl0gPSBcImtvdGxpbi0xLjlcIjtcbiAgUnVudGltZTJbXCJDcHAxN1wiXSA9IFwiY3BwLTE3XCI7XG4gIFJ1bnRpbWUyW1wiQ3BwMjBcIl0gPSBcImNwcC0yMFwiO1xuICBSdW50aW1lMltcIkJ1bjEwXCJdID0gXCJidW4tMS4wXCI7XG4gIHJldHVybiBSdW50aW1lMjtcbn0pKFJ1bnRpbWUgfHwge30pO1xuXG5leHBvcnQgeyBSdW50aW1lIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ydW50aW1lLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/runtime.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/enums/smtp-encryption.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/enums/smtp-encryption.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmtpEncryption: () => (/* binding */ SmtpEncryption)\n/* harmony export */ });\n// src/enums/smtp-encryption.ts\nvar SmtpEncryption = /* @__PURE__ */ ((SmtpEncryption2) => {\n  SmtpEncryption2[\"None\"] = \"none\";\n  SmtpEncryption2[\"Ssl\"] = \"ssl\";\n  SmtpEncryption2[\"Tls\"] = \"tls\";\n  return SmtpEncryption2;\n})(SmtpEncryption || {});\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=smtp-encryption.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9lbnVtcy9zbXRwLWVuY3J5cHRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNCQUFzQjs7QUFFRztBQUMxQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvZW51bXMvc210cC1lbmNyeXB0aW9uLm1qcz9iMDVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lbnVtcy9zbXRwLWVuY3J5cHRpb24udHNcbnZhciBTbXRwRW5jcnlwdGlvbiA9IC8qIEBfX1BVUkVfXyAqLyAoKFNtdHBFbmNyeXB0aW9uMikgPT4ge1xuICBTbXRwRW5jcnlwdGlvbjJbXCJOb25lXCJdID0gXCJub25lXCI7XG4gIFNtdHBFbmNyeXB0aW9uMltcIlNzbFwiXSA9IFwic3NsXCI7XG4gIFNtdHBFbmNyeXB0aW9uMltcIlRsc1wiXSA9IFwidGxzXCI7XG4gIHJldHVybiBTbXRwRW5jcnlwdGlvbjI7XG59KShTbXRwRW5jcnlwdGlvbiB8fCB7fSk7XG5cbmV4cG9ydCB7IFNtdHBFbmNyeXB0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zbXRwLWVuY3J5cHRpb24ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/enums/smtp-encryption.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/id.mjs":
/*!************************************************!*\
  !*** ./node_modules/node-appwrite/dist/id.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID: () => (/* binding */ ID)\n/* harmony export */ });\n// src/id.ts\nvar ID = class _ID {\n  // Generate an hex ID based on timestamp\n  // Recreated from https://www.php.net/manual/en/function.uniqid.php\n  static #hexTimestamp() {\n    const now = /* @__PURE__ */ new Date();\n    const sec = Math.floor(now.getTime() / 1e3);\n    const msec = now.getMilliseconds();\n    const hexTimestamp = sec.toString(16) + msec.toString(16).padStart(5, \"0\");\n    return hexTimestamp;\n  }\n  static custom(id) {\n    return id;\n  }\n  static unique(padding = 7) {\n    const baseId = _ID.#hexTimestamp();\n    let randomPadding = \"\";\n    for (let i = 0; i < padding; i++) {\n      const randomHexDigit = Math.floor(Math.random() * 16).toString(16);\n      randomPadding += randomHexDigit;\n    }\n    return baseId + randomPadding;\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=id.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9pZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWM7QUFDZDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvaWQubWpzPzU2NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2lkLnRzXG52YXIgSUQgPSBjbGFzcyBfSUQge1xuICAvLyBHZW5lcmF0ZSBhbiBoZXggSUQgYmFzZWQgb24gdGltZXN0YW1wXG4gIC8vIFJlY3JlYXRlZCBmcm9tIGh0dHBzOi8vd3d3LnBocC5uZXQvbWFudWFsL2VuL2Z1bmN0aW9uLnVuaXFpZC5waHBcbiAgc3RhdGljICNoZXhUaW1lc3RhbXAoKSB7XG4gICAgY29uc3Qgbm93ID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCk7XG4gICAgY29uc3Qgc2VjID0gTWF0aC5mbG9vcihub3cuZ2V0VGltZSgpIC8gMWUzKTtcbiAgICBjb25zdCBtc2VjID0gbm93LmdldE1pbGxpc2Vjb25kcygpO1xuICAgIGNvbnN0IGhleFRpbWVzdGFtcCA9IHNlYy50b1N0cmluZygxNikgKyBtc2VjLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg1LCBcIjBcIik7XG4gICAgcmV0dXJuIGhleFRpbWVzdGFtcDtcbiAgfVxuICBzdGF0aWMgY3VzdG9tKGlkKSB7XG4gICAgcmV0dXJuIGlkO1xuICB9XG4gIHN0YXRpYyB1bmlxdWUocGFkZGluZyA9IDcpIHtcbiAgICBjb25zdCBiYXNlSWQgPSBfSUQuI2hleFRpbWVzdGFtcCgpO1xuICAgIGxldCByYW5kb21QYWRkaW5nID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZGRpbmc7IGkrKykge1xuICAgICAgY29uc3QgcmFuZG9tSGV4RGlnaXQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNikudG9TdHJpbmcoMTYpO1xuICAgICAgcmFuZG9tUGFkZGluZyArPSByYW5kb21IZXhEaWdpdDtcbiAgICB9XG4gICAgcmV0dXJuIGJhc2VJZCArIHJhbmRvbVBhZGRpbmc7XG4gIH1cbn07XG5cbmV4cG9ydCB7IElEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/id.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/node-appwrite/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Account: () => (/* reexport safe */ _services_account_mjs__WEBPACK_IMPORTED_MODULE_1__.Account),\n/* harmony export */   AppwriteException: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException),\n/* harmony export */   AuthenticationFactor: () => (/* reexport safe */ _enums_authentication_factor_mjs__WEBPACK_IMPORTED_MODULE_16__.AuthenticationFactor),\n/* harmony export */   AuthenticatorType: () => (/* reexport safe */ _enums_authenticator_type_mjs__WEBPACK_IMPORTED_MODULE_15__.AuthenticatorType),\n/* harmony export */   Avatars: () => (/* reexport safe */ _services_avatars_mjs__WEBPACK_IMPORTED_MODULE_2__.Avatars),\n/* harmony export */   Browser: () => (/* reexport safe */ _enums_browser_mjs__WEBPACK_IMPORTED_MODULE_18__.Browser),\n/* harmony export */   Client: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.Client),\n/* harmony export */   Compression: () => (/* reexport safe */ _enums_compression_mjs__WEBPACK_IMPORTED_MODULE_28__.Compression),\n/* harmony export */   CreditCard: () => (/* reexport safe */ _enums_credit_card_mjs__WEBPACK_IMPORTED_MODULE_19__.CreditCard),\n/* harmony export */   Databases: () => (/* reexport safe */ _services_databases_mjs__WEBPACK_IMPORTED_MODULE_3__.Databases),\n/* harmony export */   ExecutionMethod: () => (/* reexport safe */ _enums_execution_method_mjs__WEBPACK_IMPORTED_MODULE_25__.ExecutionMethod),\n/* harmony export */   Flag: () => (/* reexport safe */ _enums_flag_mjs__WEBPACK_IMPORTED_MODULE_20__.Flag),\n/* harmony export */   Functions: () => (/* reexport safe */ _services_functions_mjs__WEBPACK_IMPORTED_MODULE_4__.Functions),\n/* harmony export */   Graphql: () => (/* reexport safe */ _services_graphql_mjs__WEBPACK_IMPORTED_MODULE_5__.Graphql),\n/* harmony export */   Health: () => (/* reexport safe */ _services_health_mjs__WEBPACK_IMPORTED_MODULE_6__.Health),\n/* harmony export */   ID: () => (/* reexport safe */ _id_mjs__WEBPACK_IMPORTED_MODULE_14__.ID),\n/* harmony export */   ImageFormat: () => (/* reexport safe */ _enums_image_format_mjs__WEBPACK_IMPORTED_MODULE_30__.ImageFormat),\n/* harmony export */   ImageGravity: () => (/* reexport safe */ _enums_image_gravity_mjs__WEBPACK_IMPORTED_MODULE_29__.ImageGravity),\n/* harmony export */   IndexType: () => (/* reexport safe */ _enums_index_type_mjs__WEBPACK_IMPORTED_MODULE_23__.IndexType),\n/* harmony export */   Locale: () => (/* reexport safe */ _services_locale_mjs__WEBPACK_IMPORTED_MODULE_7__.Locale),\n/* harmony export */   Messaging: () => (/* reexport safe */ _services_messaging_mjs__WEBPACK_IMPORTED_MODULE_8__.Messaging),\n/* harmony export */   MessagingProviderType: () => (/* reexport safe */ _enums_messaging_provider_type_mjs__WEBPACK_IMPORTED_MODULE_32__.MessagingProviderType),\n/* harmony export */   Name: () => (/* reexport safe */ _enums_name_mjs__WEBPACK_IMPORTED_MODULE_26__.Name),\n/* harmony export */   OAuthProvider: () => (/* reexport safe */ _enums_o_auth_provider_mjs__WEBPACK_IMPORTED_MODULE_17__.OAuthProvider),\n/* harmony export */   PasswordHash: () => (/* reexport safe */ _enums_password_hash_mjs__WEBPACK_IMPORTED_MODULE_31__.PasswordHash),\n/* harmony export */   Permission: () => (/* reexport safe */ _permission_mjs__WEBPACK_IMPORTED_MODULE_12__.Permission),\n/* harmony export */   Query: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.Query),\n/* harmony export */   RelationMutate: () => (/* reexport safe */ _enums_relation_mutate_mjs__WEBPACK_IMPORTED_MODULE_22__.RelationMutate),\n/* harmony export */   RelationshipType: () => (/* reexport safe */ _enums_relationship_type_mjs__WEBPACK_IMPORTED_MODULE_21__.RelationshipType),\n/* harmony export */   Role: () => (/* reexport safe */ _role_mjs__WEBPACK_IMPORTED_MODULE_13__.Role),\n/* harmony export */   Runtime: () => (/* reexport safe */ _enums_runtime_mjs__WEBPACK_IMPORTED_MODULE_24__.Runtime),\n/* harmony export */   SmtpEncryption: () => (/* reexport safe */ _enums_smtp_encryption_mjs__WEBPACK_IMPORTED_MODULE_27__.SmtpEncryption),\n/* harmony export */   Storage: () => (/* reexport safe */ _services_storage_mjs__WEBPACK_IMPORTED_MODULE_9__.Storage),\n/* harmony export */   Teams: () => (/* reexport safe */ _services_teams_mjs__WEBPACK_IMPORTED_MODULE_10__.Teams),\n/* harmony export */   Users: () => (/* reexport safe */ _services_users_mjs__WEBPACK_IMPORTED_MODULE_11__.Users)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n/* harmony import */ var _services_account_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/account.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/account.mjs\");\n/* harmony import */ var _services_avatars_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/avatars.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/avatars.mjs\");\n/* harmony import */ var _services_databases_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/databases.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/databases.mjs\");\n/* harmony import */ var _services_functions_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/functions.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/functions.mjs\");\n/* harmony import */ var _services_graphql_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/graphql.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/graphql.mjs\");\n/* harmony import */ var _services_health_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/health.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/health.mjs\");\n/* harmony import */ var _services_locale_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./services/locale.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/locale.mjs\");\n/* harmony import */ var _services_messaging_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/messaging.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/messaging.mjs\");\n/* harmony import */ var _services_storage_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./services/storage.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/storage.mjs\");\n/* harmony import */ var _services_teams_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./services/teams.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/teams.mjs\");\n/* harmony import */ var _services_users_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/users.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/services/users.mjs\");\n/* harmony import */ var _permission_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./permission.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/permission.mjs\");\n/* harmony import */ var _role_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./role.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/role.mjs\");\n/* harmony import */ var _id_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./id.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/id.mjs\");\n/* harmony import */ var _enums_authenticator_type_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./enums/authenticator-type.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/authenticator-type.mjs\");\n/* harmony import */ var _enums_authentication_factor_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./enums/authentication-factor.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/authentication-factor.mjs\");\n/* harmony import */ var _enums_o_auth_provider_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./enums/o-auth-provider.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/o-auth-provider.mjs\");\n/* harmony import */ var _enums_browser_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./enums/browser.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/browser.mjs\");\n/* harmony import */ var _enums_credit_card_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./enums/credit-card.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/credit-card.mjs\");\n/* harmony import */ var _enums_flag_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./enums/flag.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/flag.mjs\");\n/* harmony import */ var _enums_relationship_type_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./enums/relationship-type.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/relationship-type.mjs\");\n/* harmony import */ var _enums_relation_mutate_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./enums/relation-mutate.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/relation-mutate.mjs\");\n/* harmony import */ var _enums_index_type_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./enums/index-type.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/index-type.mjs\");\n/* harmony import */ var _enums_runtime_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./enums/runtime.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/runtime.mjs\");\n/* harmony import */ var _enums_execution_method_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./enums/execution-method.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/execution-method.mjs\");\n/* harmony import */ var _enums_name_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./enums/name.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/name.mjs\");\n/* harmony import */ var _enums_smtp_encryption_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./enums/smtp-encryption.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/smtp-encryption.mjs\");\n/* harmony import */ var _enums_compression_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./enums/compression.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/compression.mjs\");\n/* harmony import */ var _enums_image_gravity_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./enums/image-gravity.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/image-gravity.mjs\");\n/* harmony import */ var _enums_image_format_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./enums/image-format.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/image-format.mjs\");\n/* harmony import */ var _enums_password_hash_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./enums/password-hash.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/password-hash.mjs\");\n/* harmony import */ var _enums_messaging_provider_type_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./enums/messaging-provider-type.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/enums/messaging-provider-type.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0U7QUFDZjtBQUNBO0FBQ0k7QUFDQTtBQUNKO0FBQ0Y7QUFDQTtBQUNNO0FBQ0o7QUFDSjtBQUNBO0FBQ0M7QUFDWjtBQUNKO0FBQ3FDO0FBQ007QUFDYjtBQUNkO0FBQ087QUFDYjtBQUN5QjtBQUNKO0FBQ1Y7QUFDTDtBQUNpQjtBQUN2QjtBQUNxQjtBQUNQO0FBQ0c7QUFDRjtBQUNFO0FBQ21CO0FBQzVFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9pbmRleC5tanM/Mzk5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBcHB3cml0ZUV4Y2VwdGlvbiwgQ2xpZW50LCBRdWVyeSB9IGZyb20gJy4vY2xpZW50Lm1qcyc7XG5leHBvcnQgeyBBY2NvdW50IH0gZnJvbSAnLi9zZXJ2aWNlcy9hY2NvdW50Lm1qcyc7XG5leHBvcnQgeyBBdmF0YXJzIH0gZnJvbSAnLi9zZXJ2aWNlcy9hdmF0YXJzLm1qcyc7XG5leHBvcnQgeyBEYXRhYmFzZXMgfSBmcm9tICcuL3NlcnZpY2VzL2RhdGFiYXNlcy5tanMnO1xuZXhwb3J0IHsgRnVuY3Rpb25zIH0gZnJvbSAnLi9zZXJ2aWNlcy9mdW5jdGlvbnMubWpzJztcbmV4cG9ydCB7IEdyYXBocWwgfSBmcm9tICcuL3NlcnZpY2VzL2dyYXBocWwubWpzJztcbmV4cG9ydCB7IEhlYWx0aCB9IGZyb20gJy4vc2VydmljZXMvaGVhbHRoLm1qcyc7XG5leHBvcnQgeyBMb2NhbGUgfSBmcm9tICcuL3NlcnZpY2VzL2xvY2FsZS5tanMnO1xuZXhwb3J0IHsgTWVzc2FnaW5nIH0gZnJvbSAnLi9zZXJ2aWNlcy9tZXNzYWdpbmcubWpzJztcbmV4cG9ydCB7IFN0b3JhZ2UgfSBmcm9tICcuL3NlcnZpY2VzL3N0b3JhZ2UubWpzJztcbmV4cG9ydCB7IFRlYW1zIH0gZnJvbSAnLi9zZXJ2aWNlcy90ZWFtcy5tanMnO1xuZXhwb3J0IHsgVXNlcnMgfSBmcm9tICcuL3NlcnZpY2VzL3VzZXJzLm1qcyc7XG5leHBvcnQgeyBQZXJtaXNzaW9uIH0gZnJvbSAnLi9wZXJtaXNzaW9uLm1qcyc7XG5leHBvcnQgeyBSb2xlIH0gZnJvbSAnLi9yb2xlLm1qcyc7XG5leHBvcnQgeyBJRCB9IGZyb20gJy4vaWQubWpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0b3JUeXBlIH0gZnJvbSAnLi9lbnVtcy9hdXRoZW50aWNhdG9yLXR5cGUubWpzJztcbmV4cG9ydCB7IEF1dGhlbnRpY2F0aW9uRmFjdG9yIH0gZnJvbSAnLi9lbnVtcy9hdXRoZW50aWNhdGlvbi1mYWN0b3IubWpzJztcbmV4cG9ydCB7IE9BdXRoUHJvdmlkZXIgfSBmcm9tICcuL2VudW1zL28tYXV0aC1wcm92aWRlci5tanMnO1xuZXhwb3J0IHsgQnJvd3NlciB9IGZyb20gJy4vZW51bXMvYnJvd3Nlci5tanMnO1xuZXhwb3J0IHsgQ3JlZGl0Q2FyZCB9IGZyb20gJy4vZW51bXMvY3JlZGl0LWNhcmQubWpzJztcbmV4cG9ydCB7IEZsYWcgfSBmcm9tICcuL2VudW1zL2ZsYWcubWpzJztcbmV4cG9ydCB7IFJlbGF0aW9uc2hpcFR5cGUgfSBmcm9tICcuL2VudW1zL3JlbGF0aW9uc2hpcC10eXBlLm1qcyc7XG5leHBvcnQgeyBSZWxhdGlvbk11dGF0ZSB9IGZyb20gJy4vZW51bXMvcmVsYXRpb24tbXV0YXRlLm1qcyc7XG5leHBvcnQgeyBJbmRleFR5cGUgfSBmcm9tICcuL2VudW1zL2luZGV4LXR5cGUubWpzJztcbmV4cG9ydCB7IFJ1bnRpbWUgfSBmcm9tICcuL2VudW1zL3J1bnRpbWUubWpzJztcbmV4cG9ydCB7IEV4ZWN1dGlvbk1ldGhvZCB9IGZyb20gJy4vZW51bXMvZXhlY3V0aW9uLW1ldGhvZC5tanMnO1xuZXhwb3J0IHsgTmFtZSB9IGZyb20gJy4vZW51bXMvbmFtZS5tanMnO1xuZXhwb3J0IHsgU210cEVuY3J5cHRpb24gfSBmcm9tICcuL2VudW1zL3NtdHAtZW5jcnlwdGlvbi5tanMnO1xuZXhwb3J0IHsgQ29tcHJlc3Npb24gfSBmcm9tICcuL2VudW1zL2NvbXByZXNzaW9uLm1qcyc7XG5leHBvcnQgeyBJbWFnZUdyYXZpdHkgfSBmcm9tICcuL2VudW1zL2ltYWdlLWdyYXZpdHkubWpzJztcbmV4cG9ydCB7IEltYWdlRm9ybWF0IH0gZnJvbSAnLi9lbnVtcy9pbWFnZS1mb3JtYXQubWpzJztcbmV4cG9ydCB7IFBhc3N3b3JkSGFzaCB9IGZyb20gJy4vZW51bXMvcGFzc3dvcmQtaGFzaC5tanMnO1xuZXhwb3J0IHsgTWVzc2FnaW5nUHJvdmlkZXJUeXBlIH0gZnJvbSAnLi9lbnVtcy9tZXNzYWdpbmctcHJvdmlkZXItdHlwZS5tanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/permission.mjs":
/*!********************************************************!*\
  !*** ./node_modules/node-appwrite/dist/permission.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permission: () => (/* binding */ Permission)\n/* harmony export */ });\n// src/permission.ts\nvar Permission = class {\n};\nPermission.read = (role) => {\n  return `read(\"${role}\")`;\n};\nPermission.write = (role) => {\n  return `write(\"${role}\")`;\n};\nPermission.create = (role) => {\n  return `create(\"${role}\")`;\n};\nPermission.update = (role) => {\n  return `update(\"${role}\")`;\n};\nPermission.delete = (role) => {\n  return `delete(\"${role}\")`;\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=permission.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9wZXJtaXNzaW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsS0FBSztBQUN2QjtBQUNBO0FBQ0EsbUJBQW1CLEtBQUs7QUFDeEI7QUFDQTtBQUNBLG9CQUFvQixLQUFLO0FBQ3pCO0FBQ0E7QUFDQSxvQkFBb0IsS0FBSztBQUN6QjtBQUNBO0FBQ0Esb0JBQW9CLEtBQUs7QUFDekI7O0FBRXNCO0FBQ3RCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9wZXJtaXNzaW9uLm1qcz8wYmUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wZXJtaXNzaW9uLnRzXG52YXIgUGVybWlzc2lvbiA9IGNsYXNzIHtcbn07XG5QZXJtaXNzaW9uLnJlYWQgPSAocm9sZSkgPT4ge1xuICByZXR1cm4gYHJlYWQoXCIke3JvbGV9XCIpYDtcbn07XG5QZXJtaXNzaW9uLndyaXRlID0gKHJvbGUpID0+IHtcbiAgcmV0dXJuIGB3cml0ZShcIiR7cm9sZX1cIilgO1xufTtcblBlcm1pc3Npb24uY3JlYXRlID0gKHJvbGUpID0+IHtcbiAgcmV0dXJuIGBjcmVhdGUoXCIke3JvbGV9XCIpYDtcbn07XG5QZXJtaXNzaW9uLnVwZGF0ZSA9IChyb2xlKSA9PiB7XG4gIHJldHVybiBgdXBkYXRlKFwiJHtyb2xlfVwiKWA7XG59O1xuUGVybWlzc2lvbi5kZWxldGUgPSAocm9sZSkgPT4ge1xuICByZXR1cm4gYGRlbGV0ZShcIiR7cm9sZX1cIilgO1xufTtcblxuZXhwb3J0IHsgUGVybWlzc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVybWlzc2lvbi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/permission.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/query.mjs":
/*!***************************************************!*\
  !*** ./node_modules/node-appwrite/dist/query.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query)\n/* harmony export */ });\n// src/query.ts\nvar _Query = class _Query {\n  constructor(method, attribute, values) {\n    this.method = method;\n    this.attribute = attribute;\n    if (values !== void 0) {\n      if (Array.isArray(values)) {\n        this.values = values;\n      } else {\n        this.values = [values];\n      }\n    }\n  }\n  toString() {\n    return JSON.stringify({\n      method: this.method,\n      attribute: this.attribute,\n      values: this.values\n    });\n  }\n};\n_Query.equal = (attribute, value) => new _Query(\"equal\", attribute, value).toString();\n_Query.notEqual = (attribute, value) => new _Query(\"notEqual\", attribute, value).toString();\n_Query.lessThan = (attribute, value) => new _Query(\"lessThan\", attribute, value).toString();\n_Query.lessThanEqual = (attribute, value) => new _Query(\"lessThanEqual\", attribute, value).toString();\n_Query.greaterThan = (attribute, value) => new _Query(\"greaterThan\", attribute, value).toString();\n_Query.greaterThanEqual = (attribute, value) => new _Query(\"greaterThanEqual\", attribute, value).toString();\n_Query.isNull = (attribute) => new _Query(\"isNull\", attribute).toString();\n_Query.isNotNull = (attribute) => new _Query(\"isNotNull\", attribute).toString();\n_Query.between = (attribute, start, end) => new _Query(\"between\", attribute, [start, end]).toString();\n_Query.startsWith = (attribute, value) => new _Query(\"startsWith\", attribute, value).toString();\n_Query.endsWith = (attribute, value) => new _Query(\"endsWith\", attribute, value).toString();\n_Query.select = (attributes) => new _Query(\"select\", void 0, attributes).toString();\n_Query.search = (attribute, value) => new _Query(\"search\", attribute, value).toString();\n_Query.orderDesc = (attribute) => new _Query(\"orderDesc\", attribute).toString();\n_Query.orderAsc = (attribute) => new _Query(\"orderAsc\", attribute).toString();\n_Query.cursorAfter = (documentId) => new _Query(\"cursorAfter\", void 0, documentId).toString();\n_Query.cursorBefore = (documentId) => new _Query(\"cursorBefore\", void 0, documentId).toString();\n_Query.limit = (limit) => new _Query(\"limit\", void 0, limit).toString();\n_Query.offset = (offset) => new _Query(\"offset\", void 0, offset).toString();\n_Query.contains = (attribute, value) => new _Query(\"contains\", attribute, value).toString();\n_Query.or = (queries) => new _Query(\"or\", void 0, queries.map((query) => JSON.parse(query))).toString();\n_Query.and = (queries) => new _Query(\"and\", void 0, queries.map((query) => JSON.parse(query))).toString();\nvar Query = _Query;\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=query.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9xdWVyeS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpQjtBQUNqQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3QvcXVlcnkubWpzPzZmNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3F1ZXJ5LnRzXG52YXIgX1F1ZXJ5ID0gY2xhc3MgX1F1ZXJ5IHtcbiAgY29uc3RydWN0b3IobWV0aG9kLCBhdHRyaWJ1dGUsIHZhbHVlcykge1xuICAgIHRoaXMubWV0aG9kID0gbWV0aG9kO1xuICAgIHRoaXMuYXR0cmlidXRlID0gYXR0cmlidXRlO1xuICAgIGlmICh2YWx1ZXMgIT09IHZvaWQgMCkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICB0aGlzLnZhbHVlcyA9IHZhbHVlcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudmFsdWVzID0gW3ZhbHVlc107XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBtZXRob2Q6IHRoaXMubWV0aG9kLFxuICAgICAgYXR0cmlidXRlOiB0aGlzLmF0dHJpYnV0ZSxcbiAgICAgIHZhbHVlczogdGhpcy52YWx1ZXNcbiAgICB9KTtcbiAgfVxufTtcbl9RdWVyeS5lcXVhbCA9IChhdHRyaWJ1dGUsIHZhbHVlKSA9PiBuZXcgX1F1ZXJ5KFwiZXF1YWxcIiwgYXR0cmlidXRlLCB2YWx1ZSkudG9TdHJpbmcoKTtcbl9RdWVyeS5ub3RFcXVhbCA9IChhdHRyaWJ1dGUsIHZhbHVlKSA9PiBuZXcgX1F1ZXJ5KFwibm90RXF1YWxcIiwgYXR0cmlidXRlLCB2YWx1ZSkudG9TdHJpbmcoKTtcbl9RdWVyeS5sZXNzVGhhbiA9IChhdHRyaWJ1dGUsIHZhbHVlKSA9PiBuZXcgX1F1ZXJ5KFwibGVzc1RoYW5cIiwgYXR0cmlidXRlLCB2YWx1ZSkudG9TdHJpbmcoKTtcbl9RdWVyeS5sZXNzVGhhbkVxdWFsID0gKGF0dHJpYnV0ZSwgdmFsdWUpID0+IG5ldyBfUXVlcnkoXCJsZXNzVGhhbkVxdWFsXCIsIGF0dHJpYnV0ZSwgdmFsdWUpLnRvU3RyaW5nKCk7XG5fUXVlcnkuZ3JlYXRlclRoYW4gPSAoYXR0cmlidXRlLCB2YWx1ZSkgPT4gbmV3IF9RdWVyeShcImdyZWF0ZXJUaGFuXCIsIGF0dHJpYnV0ZSwgdmFsdWUpLnRvU3RyaW5nKCk7XG5fUXVlcnkuZ3JlYXRlclRoYW5FcXVhbCA9IChhdHRyaWJ1dGUsIHZhbHVlKSA9PiBuZXcgX1F1ZXJ5KFwiZ3JlYXRlclRoYW5FcXVhbFwiLCBhdHRyaWJ1dGUsIHZhbHVlKS50b1N0cmluZygpO1xuX1F1ZXJ5LmlzTnVsbCA9IChhdHRyaWJ1dGUpID0+IG5ldyBfUXVlcnkoXCJpc051bGxcIiwgYXR0cmlidXRlKS50b1N0cmluZygpO1xuX1F1ZXJ5LmlzTm90TnVsbCA9IChhdHRyaWJ1dGUpID0+IG5ldyBfUXVlcnkoXCJpc05vdE51bGxcIiwgYXR0cmlidXRlKS50b1N0cmluZygpO1xuX1F1ZXJ5LmJldHdlZW4gPSAoYXR0cmlidXRlLCBzdGFydCwgZW5kKSA9PiBuZXcgX1F1ZXJ5KFwiYmV0d2VlblwiLCBhdHRyaWJ1dGUsIFtzdGFydCwgZW5kXSkudG9TdHJpbmcoKTtcbl9RdWVyeS5zdGFydHNXaXRoID0gKGF0dHJpYnV0ZSwgdmFsdWUpID0+IG5ldyBfUXVlcnkoXCJzdGFydHNXaXRoXCIsIGF0dHJpYnV0ZSwgdmFsdWUpLnRvU3RyaW5nKCk7XG5fUXVlcnkuZW5kc1dpdGggPSAoYXR0cmlidXRlLCB2YWx1ZSkgPT4gbmV3IF9RdWVyeShcImVuZHNXaXRoXCIsIGF0dHJpYnV0ZSwgdmFsdWUpLnRvU3RyaW5nKCk7XG5fUXVlcnkuc2VsZWN0ID0gKGF0dHJpYnV0ZXMpID0+IG5ldyBfUXVlcnkoXCJzZWxlY3RcIiwgdm9pZCAwLCBhdHRyaWJ1dGVzKS50b1N0cmluZygpO1xuX1F1ZXJ5LnNlYXJjaCA9IChhdHRyaWJ1dGUsIHZhbHVlKSA9PiBuZXcgX1F1ZXJ5KFwic2VhcmNoXCIsIGF0dHJpYnV0ZSwgdmFsdWUpLnRvU3RyaW5nKCk7XG5fUXVlcnkub3JkZXJEZXNjID0gKGF0dHJpYnV0ZSkgPT4gbmV3IF9RdWVyeShcIm9yZGVyRGVzY1wiLCBhdHRyaWJ1dGUpLnRvU3RyaW5nKCk7XG5fUXVlcnkub3JkZXJBc2MgPSAoYXR0cmlidXRlKSA9PiBuZXcgX1F1ZXJ5KFwib3JkZXJBc2NcIiwgYXR0cmlidXRlKS50b1N0cmluZygpO1xuX1F1ZXJ5LmN1cnNvckFmdGVyID0gKGRvY3VtZW50SWQpID0+IG5ldyBfUXVlcnkoXCJjdXJzb3JBZnRlclwiLCB2b2lkIDAsIGRvY3VtZW50SWQpLnRvU3RyaW5nKCk7XG5fUXVlcnkuY3Vyc29yQmVmb3JlID0gKGRvY3VtZW50SWQpID0+IG5ldyBfUXVlcnkoXCJjdXJzb3JCZWZvcmVcIiwgdm9pZCAwLCBkb2N1bWVudElkKS50b1N0cmluZygpO1xuX1F1ZXJ5LmxpbWl0ID0gKGxpbWl0KSA9PiBuZXcgX1F1ZXJ5KFwibGltaXRcIiwgdm9pZCAwLCBsaW1pdCkudG9TdHJpbmcoKTtcbl9RdWVyeS5vZmZzZXQgPSAob2Zmc2V0KSA9PiBuZXcgX1F1ZXJ5KFwib2Zmc2V0XCIsIHZvaWQgMCwgb2Zmc2V0KS50b1N0cmluZygpO1xuX1F1ZXJ5LmNvbnRhaW5zID0gKGF0dHJpYnV0ZSwgdmFsdWUpID0+IG5ldyBfUXVlcnkoXCJjb250YWluc1wiLCBhdHRyaWJ1dGUsIHZhbHVlKS50b1N0cmluZygpO1xuX1F1ZXJ5Lm9yID0gKHF1ZXJpZXMpID0+IG5ldyBfUXVlcnkoXCJvclwiLCB2b2lkIDAsIHF1ZXJpZXMubWFwKChxdWVyeSkgPT4gSlNPTi5wYXJzZShxdWVyeSkpKS50b1N0cmluZygpO1xuX1F1ZXJ5LmFuZCA9IChxdWVyaWVzKSA9PiBuZXcgX1F1ZXJ5KFwiYW5kXCIsIHZvaWQgMCwgcXVlcmllcy5tYXAoKHF1ZXJ5KSA9PiBKU09OLnBhcnNlKHF1ZXJ5KSkpLnRvU3RyaW5nKCk7XG52YXIgUXVlcnkgPSBfUXVlcnk7XG5cbmV4cG9ydCB7IFF1ZXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/query.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/role.mjs":
/*!**************************************************!*\
  !*** ./node_modules/node-appwrite/dist/role.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Role: () => (/* binding */ Role)\n/* harmony export */ });\n// src/role.ts\nvar Role = class {\n  /**\n   * Grants access to anyone.\n   * \n   * This includes authenticated and unauthenticated users.\n   * \n   * @returns {string}\n   */\n  static any() {\n    return \"any\";\n  }\n  /**\n   * Grants access to a specific user by user ID.\n   * \n   * You can optionally pass verified or unverified for\n   * `status` to target specific types of users.\n   *\n   * @param {string} id \n   * @param {string} status \n   * @returns {string}\n   */\n  static user(id, status = \"\") {\n    if (status === \"\") {\n      return `user:${id}`;\n    }\n    return `user:${id}/${status}`;\n  }\n  /**\n   * Grants access to any authenticated or anonymous user.\n   * \n   * You can optionally pass verified or unverified for\n   * `status` to target specific types of users.\n   * \n   * @param {string} status \n   * @returns {string}\n   */\n  static users(status = \"\") {\n    if (status === \"\") {\n      return \"users\";\n    }\n    return `users/${status}`;\n  }\n  /**\n   * Grants access to any guest user without a session.\n   * \n   * Authenticated users don't have access to this role.\n   * \n   * @returns {string}\n   */\n  static guests() {\n    return \"guests\";\n  }\n  /**\n   * Grants access to a team by team ID.\n   * \n   * You can optionally pass a role for `role` to target\n   * team members with the specified role.\n   * \n   * @param {string} id \n   * @param {string} role \n   * @returns {string}\n   */\n  static team(id, role = \"\") {\n    if (role === \"\") {\n      return `team:${id}`;\n    }\n    return `team:${id}/${role}`;\n  }\n  /**\n   * Grants access to a specific member of a team.\n   * \n   * When the member is removed from the team, they will\n   * no longer have access.\n   * \n   * @param {string} id \n   * @returns {string}\n   */\n  static member(id) {\n    return `member:${id}`;\n  }\n  /**\n   * Grants access to a user with the specified label.\n   * \n   * @param {string} name \n   * @returns  {string}\n   */\n  static label(name) {\n    return `label:${name}`;\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=role.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9yb2xlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsR0FBRztBQUN4QjtBQUNBLG1CQUFtQixHQUFHLEdBQUcsT0FBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixHQUFHO0FBQ3hCO0FBQ0EsbUJBQW1CLEdBQUcsR0FBRyxLQUFLO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGVBQWU7QUFDZjtBQUNBO0FBQ0EscUJBQXFCLEdBQUc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxvQkFBb0IsS0FBSztBQUN6QjtBQUNBOztBQUVnQjtBQUNoQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3Qvcm9sZS5tanM/NDMxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcm9sZS50c1xudmFyIFJvbGUgPSBjbGFzcyB7XG4gIC8qKlxuICAgKiBHcmFudHMgYWNjZXNzIHRvIGFueW9uZS5cbiAgICogXG4gICAqIFRoaXMgaW5jbHVkZXMgYXV0aGVudGljYXRlZCBhbmQgdW5hdXRoZW50aWNhdGVkIHVzZXJzLlxuICAgKiBcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIHN0YXRpYyBhbnkoKSB7XG4gICAgcmV0dXJuIFwiYW55XCI7XG4gIH1cbiAgLyoqXG4gICAqIEdyYW50cyBhY2Nlc3MgdG8gYSBzcGVjaWZpYyB1c2VyIGJ5IHVzZXIgSUQuXG4gICAqIFxuICAgKiBZb3UgY2FuIG9wdGlvbmFsbHkgcGFzcyB2ZXJpZmllZCBvciB1bnZlcmlmaWVkIGZvclxuICAgKiBgc3RhdHVzYCB0byB0YXJnZXQgc3BlY2lmaWMgdHlwZXMgb2YgdXNlcnMuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZCBcbiAgICogQHBhcmFtIHtzdHJpbmd9IHN0YXR1cyBcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIHN0YXRpYyB1c2VyKGlkLCBzdGF0dXMgPSBcIlwiKSB7XG4gICAgaWYgKHN0YXR1cyA9PT0gXCJcIikge1xuICAgICAgcmV0dXJuIGB1c2VyOiR7aWR9YDtcbiAgICB9XG4gICAgcmV0dXJuIGB1c2VyOiR7aWR9LyR7c3RhdHVzfWA7XG4gIH1cbiAgLyoqXG4gICAqIEdyYW50cyBhY2Nlc3MgdG8gYW55IGF1dGhlbnRpY2F0ZWQgb3IgYW5vbnltb3VzIHVzZXIuXG4gICAqIFxuICAgKiBZb3UgY2FuIG9wdGlvbmFsbHkgcGFzcyB2ZXJpZmllZCBvciB1bnZlcmlmaWVkIGZvclxuICAgKiBgc3RhdHVzYCB0byB0YXJnZXQgc3BlY2lmaWMgdHlwZXMgb2YgdXNlcnMuXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gc3RhdHVzIFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgc3RhdGljIHVzZXJzKHN0YXR1cyA9IFwiXCIpIHtcbiAgICBpZiAoc3RhdHVzID09PSBcIlwiKSB7XG4gICAgICByZXR1cm4gXCJ1c2Vyc1wiO1xuICAgIH1cbiAgICByZXR1cm4gYHVzZXJzLyR7c3RhdHVzfWA7XG4gIH1cbiAgLyoqXG4gICAqIEdyYW50cyBhY2Nlc3MgdG8gYW55IGd1ZXN0IHVzZXIgd2l0aG91dCBhIHNlc3Npb24uXG4gICAqIFxuICAgKiBBdXRoZW50aWNhdGVkIHVzZXJzIGRvbid0IGhhdmUgYWNjZXNzIHRvIHRoaXMgcm9sZS5cbiAgICogXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgZ3Vlc3RzKCkge1xuICAgIHJldHVybiBcImd1ZXN0c1wiO1xuICB9XG4gIC8qKlxuICAgKiBHcmFudHMgYWNjZXNzIHRvIGEgdGVhbSBieSB0ZWFtIElELlxuICAgKiBcbiAgICogWW91IGNhbiBvcHRpb25hbGx5IHBhc3MgYSByb2xlIGZvciBgcm9sZWAgdG8gdGFyZ2V0XG4gICAqIHRlYW0gbWVtYmVycyB3aXRoIHRoZSBzcGVjaWZpZWQgcm9sZS5cbiAgICogXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZCBcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJvbGUgXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgdGVhbShpZCwgcm9sZSA9IFwiXCIpIHtcbiAgICBpZiAocm9sZSA9PT0gXCJcIikge1xuICAgICAgcmV0dXJuIGB0ZWFtOiR7aWR9YDtcbiAgICB9XG4gICAgcmV0dXJuIGB0ZWFtOiR7aWR9LyR7cm9sZX1gO1xuICB9XG4gIC8qKlxuICAgKiBHcmFudHMgYWNjZXNzIHRvIGEgc3BlY2lmaWMgbWVtYmVyIG9mIGEgdGVhbS5cbiAgICogXG4gICAqIFdoZW4gdGhlIG1lbWJlciBpcyByZW1vdmVkIGZyb20gdGhlIHRlYW0sIHRoZXkgd2lsbFxuICAgKiBubyBsb25nZXIgaGF2ZSBhY2Nlc3MuXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgbWVtYmVyKGlkKSB7XG4gICAgcmV0dXJuIGBtZW1iZXI6JHtpZH1gO1xuICB9XG4gIC8qKlxuICAgKiBHcmFudHMgYWNjZXNzIHRvIGEgdXNlciB3aXRoIHRoZSBzcGVjaWZpZWQgbGFiZWwuXG4gICAqIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBcbiAgICogQHJldHVybnMgIHtzdHJpbmd9XG4gICAqL1xuICBzdGF0aWMgbGFiZWwobmFtZSkge1xuICAgIHJldHVybiBgbGFiZWw6JHtuYW1lfWA7XG4gIH1cbn07XG5cbmV4cG9ydCB7IFJvbGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvbGUubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/role.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/account.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/account.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Account: () => (/* binding */ Account)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/account.ts\nvar Account = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * Get account\n   *\n   * Get the currently logged in user.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async get() {\n    const apiPath = \"/account\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create account\n   *\n   * Use this endpoint to allow a new user to register a new account in your project. After the user registration completes successfully, you can use the [/account/verfication](https://appwrite.io/docs/references/cloud/client-web/account#createVerification) route to start verifying the user email address. To allow the new user to login to their new account, you need to create a new [account session](https://appwrite.io/docs/references/cloud/client-web/account#createEmailSession).\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async create(userId, email, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update email\n       *\n       * Update currently logged in user account email address. After changing user address, the user confirmation status will get reset. A new confirmation email is not sent automatically however you can use the send confirmation email endpoint again to send the confirmation email. For security measures, user password is required to complete this request.\n  This endpoint can also be used to convert an anonymous account to a normal one, by passing an email address and a new password.\n  \n       *\n       * @param {string} email\n       * @param {string} password\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.User<Preferences>>}\n       */\n  async updateEmail(email, password) {\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account/email\";\n    const payload = {};\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List Identities\n   *\n   * Get the list of identities for the currently logged in user.\n   *\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.IdentityList>}\n   */\n  async listIdentities(queries) {\n    const apiPath = \"/account/identities\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete identity\n   *\n   * Delete an identity by its unique ID.\n   *\n   * @param {string} identityId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteIdentity(identityId) {\n    if (typeof identityId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"identityId\"');\n    }\n    const apiPath = \"/account/identities/{identityId}\".replace(\"{identityId}\", identityId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create JWT\n   *\n   * Use this endpoint to create a JSON Web Token. You can use the resulting JWT to authenticate on behalf of the current user when working with the Appwrite server-side API and SDKs. The JWT secret is valid for 15 minutes from its creation and will be invalid if the user will logout in that time frame.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Jwt>}\n   */\n  async createJWT() {\n    const apiPath = \"/account/jwt\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List logs\n   *\n   * Get the list of latest security activity logs for the currently logged in user. Each log returns user IP address, location and date and time of log.\n   *\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listLogs(queries) {\n    const apiPath = \"/account/logs\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update MFA\n   *\n   * Enable or disable MFA on an account.\n   *\n   * @param {boolean} mfa\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateMFA(mfa) {\n    if (typeof mfa === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"mfa\"');\n    }\n    const apiPath = \"/account/mfa\";\n    const payload = {};\n    if (typeof mfa !== \"undefined\") {\n      payload[\"mfa\"] = mfa;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Add Authenticator\n   *\n   * Add an authenticator app to be used as an MFA factor. Verify the authenticator using the [verify authenticator](/docs/references/cloud/client-web/account#updateMfaAuthenticator) method.\n   *\n   * @param {AuthenticatorType} type\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaType>}\n   */\n  async createMfaAuthenticator(type) {\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    const apiPath = \"/account/mfa/authenticators/{type}\".replace(\"{type}\", type);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Verify Authenticator\n   *\n   * Verify an authenticator app after adding it using the [add authenticator](/docs/references/cloud/client-web/account#createMfaAuthenticator) method. add \n   *\n   * @param {AuthenticatorType} type\n   * @param {string} otp\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateMfaAuthenticator(type, otp) {\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    if (typeof otp === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"otp\"');\n    }\n    const apiPath = \"/account/mfa/authenticators/{type}\".replace(\"{type}\", type);\n    const payload = {};\n    if (typeof otp !== \"undefined\") {\n      payload[\"otp\"] = otp;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete Authenticator\n   *\n   * Delete an authenticator for a user by ID.\n   *\n   * @param {AuthenticatorType} type\n   * @param {string} otp\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteMfaAuthenticator(type, otp) {\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    if (typeof otp === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"otp\"');\n    }\n    const apiPath = \"/account/mfa/authenticators/{type}\".replace(\"{type}\", type);\n    const payload = {};\n    if (typeof otp !== \"undefined\") {\n      payload[\"otp\"] = otp;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create 2FA Challenge\n   *\n   * Begin the process of MFA verification after sign-in. Finish the flow with [updateMfaChallenge](/docs/references/cloud/client-web/account#updateMfaChallenge) method.\n   *\n   * @param {AuthenticationFactor} factor\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaChallenge>}\n   */\n  async createMfaChallenge(factor) {\n    if (typeof factor === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"factor\"');\n    }\n    const apiPath = \"/account/mfa/challenge\";\n    const payload = {};\n    if (typeof factor !== \"undefined\") {\n      payload[\"factor\"] = factor;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create MFA Challenge (confirmation)\n   *\n   * Complete the MFA challenge by providing the one-time password. Finish the process of MFA verification by providing the one-time password. To begin the flow, use [createMfaChallenge](/docs/references/cloud/client-web/account#createMfaChallenge) method.\n   *\n   * @param {string} challengeId\n   * @param {string} otp\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async updateMfaChallenge(challengeId, otp) {\n    if (typeof challengeId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"challengeId\"');\n    }\n    if (typeof otp === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"otp\"');\n    }\n    const apiPath = \"/account/mfa/challenge\";\n    const payload = {};\n    if (typeof challengeId !== \"undefined\") {\n      payload[\"challengeId\"] = challengeId;\n    }\n    if (typeof otp !== \"undefined\") {\n      payload[\"otp\"] = otp;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List Factors\n   *\n   * List the factors available on the account to be used as a MFA challange.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaFactors>}\n   */\n  async listMfaFactors() {\n    const apiPath = \"/account/mfa/factors\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get MFA Recovery Codes\n   *\n   * Get recovery codes that can be used as backup for MFA flow. Before getting codes, they must be generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes) method. An OTP challenge is required to read recovery codes.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async getMfaRecoveryCodes() {\n    const apiPath = \"/account/mfa/recovery-codes\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create MFA Recovery Codes\n   *\n   * Generate recovery codes as backup for MFA flow. It&#039;s recommended to generate and show then immediately after user successfully adds their authehticator. Recovery codes can be used as a MFA verification type in [createMfaChallenge](/docs/references/cloud/client-web/account#createMfaChallenge) method.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async createMfaRecoveryCodes() {\n    const apiPath = \"/account/mfa/recovery-codes\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Regenerate MFA Recovery Codes\n   *\n   * Regenerate recovery codes that can be used as backup for MFA flow. Before regenerating codes, they must be first generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes) method. An OTP challenge is required to regenreate recovery codes.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async updateMfaRecoveryCodes() {\n    const apiPath = \"/account/mfa/recovery-codes\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update name\n   *\n   * Update currently logged in user account name.\n   *\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateName(name) {\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/account/name\";\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update password\n   *\n   * Update currently logged in user password. For validation, user is required to pass in the new password, and the old password. For users created with OAuth, Team Invites and Magic URL, oldPassword is optional.\n   *\n   * @param {string} password\n   * @param {string} oldPassword\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePassword(password, oldPassword) {\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account/password\";\n    const payload = {};\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof oldPassword !== \"undefined\") {\n      payload[\"oldPassword\"] = oldPassword;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update phone\n   *\n   * Update the currently logged in user&#039;s phone number. After updating the phone number, the phone verification status will be reset. A confirmation SMS is not sent automatically, however you can use the [POST /account/verification/phone](https://appwrite.io/docs/references/cloud/client-web/account#createPhoneVerification) endpoint to send a confirmation SMS.\n   *\n   * @param {string} phone\n   * @param {string} password\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePhone(phone, password) {\n    if (typeof phone === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"phone\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account/phone\";\n    const payload = {};\n    if (typeof phone !== \"undefined\") {\n      payload[\"phone\"] = phone;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get account preferences\n   *\n   * Get the preferences as a key-value object for the currently logged in user.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Preferences>}\n   */\n  async getPrefs() {\n    const apiPath = \"/account/prefs\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update preferences\n   *\n   * Update currently logged in user account preferences. The object you pass is stored as is, and replaces any previous value. The maximum allowed prefs size is 64kB and throws error if exceeded.\n   *\n   * @param {Partial<Preferences>} prefs\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePrefs(prefs) {\n    if (typeof prefs === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"prefs\"');\n    }\n    const apiPath = \"/account/prefs\";\n    const payload = {};\n    if (typeof prefs !== \"undefined\") {\n      payload[\"prefs\"] = prefs;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create password recovery\n   *\n   * Sends the user an email with a temporary secret key for password reset. When the user clicks the confirmation link he is redirected back to your app password reset URL with the secret key and email address values attached to the URL query string. Use the query string params to submit a request to the [PUT /account/recovery](https://appwrite.io/docs/references/cloud/client-web/account#updateRecovery) endpoint to complete the process. The verification link sent to the user&#039;s email address is valid for 1 hour.\n   *\n   * @param {string} email\n   * @param {string} url\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Token>}\n   */\n  async createRecovery(email, url) {\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof url === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"url\"');\n    }\n    const apiPath = \"/account/recovery\";\n    const payload = {};\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create password recovery (confirmation)\n       *\n       * Use this endpoint to complete the user account password reset. Both the **userId** and **secret** arguments will be passed as query parameters to the redirect URL you have provided when sending your request to the [POST /account/recovery](https://appwrite.io/docs/references/cloud/client-web/account#createRecovery) endpoint.\n  \n  Please note that in order to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md) the only valid redirect URLs are the ones from domains you have set when adding your platforms in the console interface.\n       *\n       * @param {string} userId\n       * @param {string} secret\n       * @param {string} password\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async updateRecovery(userId, secret, password) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account/recovery\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List sessions\n   *\n   * Get the list of active sessions across different devices for the currently logged in user.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.SessionList>}\n   */\n  async listSessions() {\n    const apiPath = \"/account/sessions\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete sessions\n   *\n   * Delete all sessions from the user account and remove any sessions cookies from the end client.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteSessions() {\n    const apiPath = \"/account/sessions\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create anonymous session\n   *\n   * Use this endpoint to allow a new user to register an anonymous account in your project. This route will also create a new session for the user. To allow the new user to convert an anonymous account to a normal account, you need to update its [email and password](https://appwrite.io/docs/references/cloud/client-web/account#updateEmail) or create an [OAuth2 session](https://appwrite.io/docs/references/cloud/client-web/account#CreateOAuth2Session).\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async createAnonymousSession() {\n    const apiPath = \"/account/sessions/anonymous\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create email password session\n       *\n       * Allow the user to login into their account by providing a valid email and password combination. This route will create a new session for the user.\n  \n  A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).\n       *\n       * @param {string} email\n       * @param {string} password\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Session>}\n       */\n  async createEmailPasswordSession(email, password) {\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/account/sessions/email\";\n    const payload = {};\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update magic URL session\n   *\n   * Use this endpoint to create a session from token. Provide the **userId** and **secret** parameters from the successful response of authentication flows initiated by token creation. For example, magic URL and phone login.\n   *\n   * @param {string} userId\n   * @param {string} secret\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async updateMagicURLSession(userId, secret) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/account/sessions/magic-url\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update phone session\n   *\n   * Use this endpoint to create a session from token. Provide the **userId** and **secret** parameters from the successful response of authentication flows initiated by token creation. For example, magic URL and phone login.\n   *\n   * @param {string} userId\n   * @param {string} secret\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async updatePhoneSession(userId, secret) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/account/sessions/phone\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create session\n   *\n   * Use this endpoint to create a session from token. Provide the **userId** and **secret** parameters from the successful response of authentication flows initiated by token creation. For example, magic URL and phone login.\n   *\n   * @param {string} userId\n   * @param {string} secret\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async createSession(userId, secret) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/account/sessions/token\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get session\n   *\n   * Use this endpoint to get a logged in user&#039;s session using a Session ID. Inputting &#039;current&#039; will return the current session being used.\n   *\n   * @param {string} sessionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async getSession(sessionId) {\n    if (typeof sessionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"sessionId\"');\n    }\n    const apiPath = \"/account/sessions/{sessionId}\".replace(\"{sessionId}\", sessionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update session\n   *\n   * Use this endpoint to extend a session&#039;s length. Extending a session is useful when session expiry is short. If the session was created using an OAuth provider, this endpoint refreshes the access token from the provider.\n   *\n   * @param {string} sessionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Session>}\n   */\n  async updateSession(sessionId) {\n    if (typeof sessionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"sessionId\"');\n    }\n    const apiPath = \"/account/sessions/{sessionId}\".replace(\"{sessionId}\", sessionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete session\n   *\n   * Logout the user. Use &#039;current&#039; as the session ID to logout on this device, use a session ID to logout on another device. If you&#039;re looking to logout the user on all devices, use [Delete Sessions](https://appwrite.io/docs/references/cloud/client-web/account#deleteSessions) instead.\n   *\n   * @param {string} sessionId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteSession(sessionId) {\n    if (typeof sessionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"sessionId\"');\n    }\n    const apiPath = \"/account/sessions/{sessionId}\".replace(\"{sessionId}\", sessionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update status\n   *\n   * Block the currently logged in user account. Behind the scene, the user record is not deleted but permanently blocked from any access. To completely delete a user, use the Users API instead.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateStatus() {\n    const apiPath = \"/account/status\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create email token (OTP)\n       *\n       * Sends the user an email with a secret key for creating a session. If the provided user ID has not be registered, a new user will be created. Use the returned user ID and secret and submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The secret sent to the user&#039;s email is valid for 15 minutes.\n  \n  A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).\n       *\n       * @param {string} userId\n       * @param {string} email\n       * @param {boolean} phrase\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async createEmailToken(userId, email, phrase) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    const apiPath = \"/account/tokens/email\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof phrase !== \"undefined\") {\n      payload[\"phrase\"] = phrase;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create magic URL token\n       *\n       * Sends the user an email with a secret key for creating a session. If the provided user ID has not been registered, a new user will be created. When the user clicks the link in the email, the user is redirected back to the URL you provided with the secret key and userId values attached to the URL query string. Use the query string parameters to submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The link sent to the user&#039;s email address is valid for 1 hour. If you are on a mobile device you can leave the URL parameter empty, so that the login completion will be handled by your Appwrite instance by default.\n  \n  A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).\n  \n       *\n       * @param {string} userId\n       * @param {string} email\n       * @param {string} url\n       * @param {boolean} phrase\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async createMagicURLToken(userId, email, url, phrase) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    const apiPath = \"/account/tokens/magic-url\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    if (typeof phrase !== \"undefined\") {\n      payload[\"phrase\"] = phrase;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create OAuth2 token\n       *\n       * Allow the user to login to their account using the OAuth2 provider of their choice. Each OAuth2 provider should be enabled from the Appwrite console first. Use the success and failure arguments to provide a redirect URL&#039;s back to your app when login is completed. \n  \n  If authentication succeeds, `userId` and `secret` of a token will be appended to the success URL as query parameters. These can be used to create a new session using the [Create session](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint.\n  \n  A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).\n       *\n       * @param {OAuthProvider} provider\n       * @param {string} success\n       * @param {string} failure\n       * @param {string[]} scopes\n       * @throws {AppwriteException}\n       * @returns {Promise<string>}\n       */\n  async createOAuth2Token(provider, success, failure, scopes) {\n    if (typeof provider === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"provider\"');\n    }\n    const apiPath = \"/account/tokens/oauth2/{provider}\".replace(\"{provider}\", provider);\n    const payload = {};\n    if (typeof success !== \"undefined\") {\n      payload[\"success\"] = success;\n    }\n    if (typeof failure !== \"undefined\") {\n      payload[\"failure\"] = failure;\n    }\n    if (typeof scopes !== \"undefined\") {\n      payload[\"scopes\"] = scopes;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.redirect(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create phone token\n       *\n       * Sends the user an SMS with a secret key for creating a session. If the provided user ID has not be registered, a new user will be created. Use the returned user ID and secret and submit a request to the [POST /v1/account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process. The secret sent to the user&#039;s phone is valid for 15 minutes.\n  \n  A user is limited to 10 active sessions at a time by default. [Learn more about session limits](https://appwrite.io/docs/authentication-security#limits).\n       *\n       * @param {string} userId\n       * @param {string} phone\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async createPhoneToken(userId, phone) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof phone === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"phone\"');\n    }\n    const apiPath = \"/account/tokens/phone\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof phone !== \"undefined\") {\n      payload[\"phone\"] = phone;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create email verification\n       *\n       * Use this endpoint to send a verification message to your user email address to confirm they are the valid owners of that address. Both the **userId** and **secret** arguments will be passed as query parameters to the URL you have provided to be attached to the verification email. The provided URL should redirect the user back to your app and allow you to complete the verification process by verifying both the **userId** and **secret** parameters. Learn more about how to [complete the verification process](https://appwrite.io/docs/references/cloud/client-web/account#updateVerification). The verification link sent to the user&#039;s email address is valid for 7 days.\n  \n  Please note that in order to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md), the only valid redirect URLs are the ones from domains you have set when adding your platforms in the console interface.\n  \n       *\n       * @param {string} url\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async createVerification(url) {\n    if (typeof url === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"url\"');\n    }\n    const apiPath = \"/account/verification\";\n    const payload = {};\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create email verification (confirmation)\n   *\n   * Use this endpoint to complete the user email verification process. Use both the **userId** and **secret** parameters that were attached to your app URL to verify the user email ownership. If confirmed this route will return a 200 status code.\n   *\n   * @param {string} userId\n   * @param {string} secret\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Token>}\n   */\n  async updateVerification(userId, secret) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/account/verification\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create phone verification\n   *\n   * Use this endpoint to send a verification SMS to the currently logged in user. This endpoint is meant for use after updating a user&#039;s phone number using the [accountUpdatePhone](https://appwrite.io/docs/references/cloud/client-web/account#updatePhone) endpoint. Learn more about how to [complete the verification process](https://appwrite.io/docs/references/cloud/client-web/account#updatePhoneVerification). The verification code sent to the user&#039;s phone number is valid for 15 minutes.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Token>}\n   */\n  async createPhoneVerification() {\n    const apiPath = \"/account/verification/phone\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create phone verification (confirmation)\n   *\n   * Use this endpoint to complete the user phone verification process. Use the **userId** and **secret** that were sent to your user&#039;s phone number to verify the user email ownership. If confirmed this route will return a 200 status code.\n   *\n   * @param {string} userId\n   * @param {string} secret\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Token>}\n   */\n  async updatePhoneVerification(userId, secret) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/account/verification/phone\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=account.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/account.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/avatars.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/avatars.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Avatars: () => (/* binding */ Avatars)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/avatars.ts\nvar Avatars = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n       * Get browser icon\n       *\n       * You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user [GET /account/sessions](https://appwrite.io/docs/references/cloud/client-web/account#getSessions) endpoint. Use width, height and quality arguments to change the output settings.\n  \n  When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n       *\n       * @param {Browser} code\n       * @param {number} width\n       * @param {number} height\n       * @param {number} quality\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getBrowser(code, width, height, quality) {\n    if (typeof code === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"code\"');\n    }\n    const apiPath = \"/avatars/browsers/{code}\".replace(\"{code}\", code);\n    const payload = {};\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    if (typeof quality !== \"undefined\") {\n      payload[\"quality\"] = quality;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get credit card icon\n       *\n       * The credit card endpoint will return you the icon of the credit card provider you need. Use width, height and quality arguments to change the output settings.\n  \n  When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n  \n       *\n       * @param {CreditCard} code\n       * @param {number} width\n       * @param {number} height\n       * @param {number} quality\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getCreditCard(code, width, height, quality) {\n    if (typeof code === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"code\"');\n    }\n    const apiPath = \"/avatars/credit-cards/{code}\".replace(\"{code}\", code);\n    const payload = {};\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    if (typeof quality !== \"undefined\") {\n      payload[\"quality\"] = quality;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get favicon\n       *\n       * Use this endpoint to fetch the favorite icon (AKA favicon) of any remote website URL.\n  \n       *\n       * @param {string} url\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getFavicon(url) {\n    if (typeof url === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"url\"');\n    }\n    const apiPath = \"/avatars/favicon\";\n    const payload = {};\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get country flag\n       *\n       * You can use this endpoint to show different country flags icons to your users. The code argument receives the 2 letter country code. Use width, height and quality arguments to change the output settings. Country codes follow the [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) standard.\n  \n  When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n  \n       *\n       * @param {Flag} code\n       * @param {number} width\n       * @param {number} height\n       * @param {number} quality\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getFlag(code, width, height, quality) {\n    if (typeof code === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"code\"');\n    }\n    const apiPath = \"/avatars/flags/{code}\".replace(\"{code}\", code);\n    const payload = {};\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    if (typeof quality !== \"undefined\") {\n      payload[\"quality\"] = quality;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get image from URL\n       *\n       * Use this endpoint to fetch a remote image URL and crop it to any image size you want. This endpoint is very useful if you need to crop and display remote images in your app or in case you want to make sure a 3rd party image is properly served using a TLS protocol.\n  \n  When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 400x400px.\n  \n       *\n       * @param {string} url\n       * @param {number} width\n       * @param {number} height\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getImage(url, width, height) {\n    if (typeof url === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"url\"');\n    }\n    const apiPath = \"/avatars/image\";\n    const payload = {};\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get user initials\n       *\n       * Use this endpoint to show your user initials avatar icon on your website or app. By default, this route will try to print your logged-in user name or email initials. You can also overwrite the user name if you pass the &#039;name&#039; parameter. If no name is given and no user is logged, an empty avatar will be returned.\n  \n  You can use the color and background params to change the avatar colors. By default, a random theme will be selected. The random theme will persist for the user&#039;s initials when reloading the same theme will always return for the same initials.\n  \n  When one dimension is specified and the other is 0, the image is scaled with preserved aspect ratio. If both dimensions are 0, the API provides an image at source quality. If dimensions are not specified, the default size of image returned is 100x100px.\n  \n       *\n       * @param {string} name\n       * @param {number} width\n       * @param {number} height\n       * @param {string} background\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getInitials(name, width, height, background) {\n    const apiPath = \"/avatars/initials\";\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    if (typeof background !== \"undefined\") {\n      payload[\"background\"] = background;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n       * Get QR code\n       *\n       * Converts a given plain text to a QR code image. You can use the query parameters to change the size and style of the resulting image.\n  \n       *\n       * @param {string} text\n       * @param {number} size\n       * @param {number} margin\n       * @param {boolean} download\n       * @throws {AppwriteException}\n       * @returns {Promise<ArrayBuffer>}\n       */\n  async getQR(text, size, margin, download) {\n    if (typeof text === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"text\"');\n    }\n    const apiPath = \"/avatars/qr\";\n    const payload = {};\n    if (typeof text !== \"undefined\") {\n      payload[\"text\"] = text;\n    }\n    if (typeof size !== \"undefined\") {\n      payload[\"size\"] = size;\n    }\n    if (typeof margin !== \"undefined\") {\n      payload[\"margin\"] = margin;\n    }\n    if (typeof download !== \"undefined\") {\n      payload[\"download\"] = download;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=avatars.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9zZXJ2aWNlcy9hdmF0YXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0Esd0NBQXdDLEtBQUssWUFBWSxLQUFLO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixZQUFZO0FBQzdCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLDRDQUE0QyxLQUFLLFlBQVksS0FBSztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EscUNBQXFDLEtBQUssWUFBWSxLQUFLO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwT0FBME8sV0FBVztBQUNyUDtBQUNBLHdLQUF3SztBQUN4SztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1CO0FBQ25CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9zZXJ2aWNlcy9hdmF0YXJzLm1qcz9mMWRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcHdyaXRlRXhjZXB0aW9uIH0gZnJvbSAnLi4vY2xpZW50Lm1qcyc7XG5cbi8vIHNyYy9zZXJ2aWNlcy9hdmF0YXJzLnRzXG52YXIgQXZhdGFycyA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoY2xpZW50KSB7XG4gICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBHZXQgYnJvd3NlciBpY29uXG4gICAgICAgKlxuICAgICAgICogWW91IGNhbiB1c2UgdGhpcyBlbmRwb2ludCB0byBzaG93IGRpZmZlcmVudCBicm93c2VyIGljb25zIHRvIHlvdXIgdXNlcnMuIFRoZSBjb2RlIGFyZ3VtZW50IHJlY2VpdmVzIHRoZSBicm93c2VyIGNvZGUgYXMgaXQgYXBwZWFycyBpbiB5b3VyIHVzZXIgW0dFVCAvYWNjb3VudC9zZXNzaW9uc10oaHR0cHM6Ly9hcHB3cml0ZS5pby9kb2NzL3JlZmVyZW5jZXMvY2xvdWQvY2xpZW50LXdlYi9hY2NvdW50I2dldFNlc3Npb25zKSBlbmRwb2ludC4gVXNlIHdpZHRoLCBoZWlnaHQgYW5kIHF1YWxpdHkgYXJndW1lbnRzIHRvIGNoYW5nZSB0aGUgb3V0cHV0IHNldHRpbmdzLlxuICBcbiAgV2hlbiBvbmUgZGltZW5zaW9uIGlzIHNwZWNpZmllZCBhbmQgdGhlIG90aGVyIGlzIDAsIHRoZSBpbWFnZSBpcyBzY2FsZWQgd2l0aCBwcmVzZXJ2ZWQgYXNwZWN0IHJhdGlvLiBJZiBib3RoIGRpbWVuc2lvbnMgYXJlIDAsIHRoZSBBUEkgcHJvdmlkZXMgYW4gaW1hZ2UgYXQgc291cmNlIHF1YWxpdHkuIElmIGRpbWVuc2lvbnMgYXJlIG5vdCBzcGVjaWZpZWQsIHRoZSBkZWZhdWx0IHNpemUgb2YgaW1hZ2UgcmV0dXJuZWQgaXMgMTAweDEwMHB4LlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QnJvd3Nlcn0gY29kZVxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gcXVhbGl0eVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheUJ1ZmZlcj59XG4gICAgICAgKi9cbiAgYXN5bmMgZ2V0QnJvd3Nlcihjb2RlLCB3aWR0aCwgaGVpZ2h0LCBxdWFsaXR5KSB7XG4gICAgaWYgKHR5cGVvZiBjb2RlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvZGVcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvYXZhdGFycy9icm93c2Vycy97Y29kZX1cIi5yZXBsYWNlKFwie2NvZGV9XCIsIGNvZGUpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHdpZHRoICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wid2lkdGhcIl0gPSB3aWR0aDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBoZWlnaHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJoZWlnaHRcIl0gPSBoZWlnaHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcXVhbGl0eSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInF1YWxpdHlcIl0gPSBxdWFsaXR5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWQsXG4gICAgICBcImFycmF5QnVmZmVyXCJcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogR2V0IGNyZWRpdCBjYXJkIGljb25cbiAgICAgICAqXG4gICAgICAgKiBUaGUgY3JlZGl0IGNhcmQgZW5kcG9pbnQgd2lsbCByZXR1cm4geW91IHRoZSBpY29uIG9mIHRoZSBjcmVkaXQgY2FyZCBwcm92aWRlciB5b3UgbmVlZC4gVXNlIHdpZHRoLCBoZWlnaHQgYW5kIHF1YWxpdHkgYXJndW1lbnRzIHRvIGNoYW5nZSB0aGUgb3V0cHV0IHNldHRpbmdzLlxuICBcbiAgV2hlbiBvbmUgZGltZW5zaW9uIGlzIHNwZWNpZmllZCBhbmQgdGhlIG90aGVyIGlzIDAsIHRoZSBpbWFnZSBpcyBzY2FsZWQgd2l0aCBwcmVzZXJ2ZWQgYXNwZWN0IHJhdGlvLiBJZiBib3RoIGRpbWVuc2lvbnMgYXJlIDAsIHRoZSBBUEkgcHJvdmlkZXMgYW4gaW1hZ2UgYXQgc291cmNlIHF1YWxpdHkuIElmIGRpbWVuc2lvbnMgYXJlIG5vdCBzcGVjaWZpZWQsIHRoZSBkZWZhdWx0IHNpemUgb2YgaW1hZ2UgcmV0dXJuZWQgaXMgMTAweDEwMHB4LlxuICBcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge0NyZWRpdENhcmR9IGNvZGVcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3aWR0aFxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodFxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHF1YWxpdHlcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8QXJyYXlCdWZmZXI+fVxuICAgICAgICovXG4gIGFzeW5jIGdldENyZWRpdENhcmQoY29kZSwgd2lkdGgsIGhlaWdodCwgcXVhbGl0eSkge1xuICAgIGlmICh0eXBlb2YgY29kZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2RlXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2F2YXRhcnMvY3JlZGl0LWNhcmRzL3tjb2RlfVwiLnJlcGxhY2UoXCJ7Y29kZX1cIiwgY29kZSk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Ygd2lkdGggIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ3aWR0aFwiXSA9IHdpZHRoO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGhlaWdodCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImhlaWdodFwiXSA9IGhlaWdodDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBxdWFsaXR5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicXVhbGl0eVwiXSA9IHF1YWxpdHk7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZ2V0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZCxcbiAgICAgIFwiYXJyYXlCdWZmZXJcIlxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBHZXQgZmF2aWNvblxuICAgICAgICpcbiAgICAgICAqIFVzZSB0aGlzIGVuZHBvaW50IHRvIGZldGNoIHRoZSBmYXZvcml0ZSBpY29uIChBS0EgZmF2aWNvbikgb2YgYW55IHJlbW90ZSB3ZWJzaXRlIFVSTC5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheUJ1ZmZlcj59XG4gICAgICAgKi9cbiAgYXN5bmMgZ2V0RmF2aWNvbih1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJ1cmxcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvYXZhdGFycy9mYXZpY29uXCI7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgdXJsICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1widXJsXCJdID0gdXJsO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWQsXG4gICAgICBcImFycmF5QnVmZmVyXCJcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogR2V0IGNvdW50cnkgZmxhZ1xuICAgICAgICpcbiAgICAgICAqIFlvdSBjYW4gdXNlIHRoaXMgZW5kcG9pbnQgdG8gc2hvdyBkaWZmZXJlbnQgY291bnRyeSBmbGFncyBpY29ucyB0byB5b3VyIHVzZXJzLiBUaGUgY29kZSBhcmd1bWVudCByZWNlaXZlcyB0aGUgMiBsZXR0ZXIgY291bnRyeSBjb2RlLiBVc2Ugd2lkdGgsIGhlaWdodCBhbmQgcXVhbGl0eSBhcmd1bWVudHMgdG8gY2hhbmdlIHRoZSBvdXRwdXQgc2V0dGluZ3MuIENvdW50cnkgY29kZXMgZm9sbG93IHRoZSBbSVNPIDMxNjYtMV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzMxNjYtMSkgc3RhbmRhcmQuXG4gIFxuICBXaGVuIG9uZSBkaW1lbnNpb24gaXMgc3BlY2lmaWVkIGFuZCB0aGUgb3RoZXIgaXMgMCwgdGhlIGltYWdlIGlzIHNjYWxlZCB3aXRoIHByZXNlcnZlZCBhc3BlY3QgcmF0aW8uIElmIGJvdGggZGltZW5zaW9ucyBhcmUgMCwgdGhlIEFQSSBwcm92aWRlcyBhbiBpbWFnZSBhdCBzb3VyY2UgcXVhbGl0eS4gSWYgZGltZW5zaW9ucyBhcmUgbm90IHNwZWNpZmllZCwgdGhlIGRlZmF1bHQgc2l6ZSBvZiBpbWFnZSByZXR1cm5lZCBpcyAxMDB4MTAwcHguXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7RmxhZ30gY29kZVxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gcXVhbGl0eVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheUJ1ZmZlcj59XG4gICAgICAgKi9cbiAgYXN5bmMgZ2V0RmxhZyhjb2RlLCB3aWR0aCwgaGVpZ2h0LCBxdWFsaXR5KSB7XG4gICAgaWYgKHR5cGVvZiBjb2RlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvZGVcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvYXZhdGFycy9mbGFncy97Y29kZX1cIi5yZXBsYWNlKFwie2NvZGV9XCIsIGNvZGUpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHdpZHRoICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wid2lkdGhcIl0gPSB3aWR0aDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBoZWlnaHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJoZWlnaHRcIl0gPSBoZWlnaHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcXVhbGl0eSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInF1YWxpdHlcIl0gPSBxdWFsaXR5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWQsXG4gICAgICBcImFycmF5QnVmZmVyXCJcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogR2V0IGltYWdlIGZyb20gVVJMXG4gICAgICAgKlxuICAgICAgICogVXNlIHRoaXMgZW5kcG9pbnQgdG8gZmV0Y2ggYSByZW1vdGUgaW1hZ2UgVVJMIGFuZCBjcm9wIGl0IHRvIGFueSBpbWFnZSBzaXplIHlvdSB3YW50LiBUaGlzIGVuZHBvaW50IGlzIHZlcnkgdXNlZnVsIGlmIHlvdSBuZWVkIHRvIGNyb3AgYW5kIGRpc3BsYXkgcmVtb3RlIGltYWdlcyBpbiB5b3VyIGFwcCBvciBpbiBjYXNlIHlvdSB3YW50IHRvIG1ha2Ugc3VyZSBhIDNyZCBwYXJ0eSBpbWFnZSBpcyBwcm9wZXJseSBzZXJ2ZWQgdXNpbmcgYSBUTFMgcHJvdG9jb2wuXG4gIFxuICBXaGVuIG9uZSBkaW1lbnNpb24gaXMgc3BlY2lmaWVkIGFuZCB0aGUgb3RoZXIgaXMgMCwgdGhlIGltYWdlIGlzIHNjYWxlZCB3aXRoIHByZXNlcnZlZCBhc3BlY3QgcmF0aW8uIElmIGJvdGggZGltZW5zaW9ucyBhcmUgMCwgdGhlIEFQSSBwcm92aWRlcyBhbiBpbWFnZSBhdCBzb3VyY2UgcXVhbGl0eS4gSWYgZGltZW5zaW9ucyBhcmUgbm90IHNwZWNpZmllZCwgdGhlIGRlZmF1bHQgc2l6ZSBvZiBpbWFnZSByZXR1cm5lZCBpcyA0MDB4NDAwcHguXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3aWR0aFxuICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodFxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheUJ1ZmZlcj59XG4gICAgICAgKi9cbiAgYXN5bmMgZ2V0SW1hZ2UodXJsLCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgaWYgKHR5cGVvZiB1cmwgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwidXJsXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2F2YXRhcnMvaW1hZ2VcIjtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ1cmxcIl0gPSB1cmw7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2lkdGggIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ3aWR0aFwiXSA9IHdpZHRoO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGhlaWdodCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImhlaWdodFwiXSA9IGhlaWdodDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkLFxuICAgICAgXCJhcnJheUJ1ZmZlclwiXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIEdldCB1c2VyIGluaXRpYWxzXG4gICAgICAgKlxuICAgICAgICogVXNlIHRoaXMgZW5kcG9pbnQgdG8gc2hvdyB5b3VyIHVzZXIgaW5pdGlhbHMgYXZhdGFyIGljb24gb24geW91ciB3ZWJzaXRlIG9yIGFwcC4gQnkgZGVmYXVsdCwgdGhpcyByb3V0ZSB3aWxsIHRyeSB0byBwcmludCB5b3VyIGxvZ2dlZC1pbiB1c2VyIG5hbWUgb3IgZW1haWwgaW5pdGlhbHMuIFlvdSBjYW4gYWxzbyBvdmVyd3JpdGUgdGhlIHVzZXIgbmFtZSBpZiB5b3UgcGFzcyB0aGUgJiMwMzk7bmFtZSYjMDM5OyBwYXJhbWV0ZXIuIElmIG5vIG5hbWUgaXMgZ2l2ZW4gYW5kIG5vIHVzZXIgaXMgbG9nZ2VkLCBhbiBlbXB0eSBhdmF0YXIgd2lsbCBiZSByZXR1cm5lZC5cbiAgXG4gIFlvdSBjYW4gdXNlIHRoZSBjb2xvciBhbmQgYmFja2dyb3VuZCBwYXJhbXMgdG8gY2hhbmdlIHRoZSBhdmF0YXIgY29sb3JzLiBCeSBkZWZhdWx0LCBhIHJhbmRvbSB0aGVtZSB3aWxsIGJlIHNlbGVjdGVkLiBUaGUgcmFuZG9tIHRoZW1lIHdpbGwgcGVyc2lzdCBmb3IgdGhlIHVzZXImIzAzOTtzIGluaXRpYWxzIHdoZW4gcmVsb2FkaW5nIHRoZSBzYW1lIHRoZW1lIHdpbGwgYWx3YXlzIHJldHVybiBmb3IgdGhlIHNhbWUgaW5pdGlhbHMuXG4gIFxuICBXaGVuIG9uZSBkaW1lbnNpb24gaXMgc3BlY2lmaWVkIGFuZCB0aGUgb3RoZXIgaXMgMCwgdGhlIGltYWdlIGlzIHNjYWxlZCB3aXRoIHByZXNlcnZlZCBhc3BlY3QgcmF0aW8uIElmIGJvdGggZGltZW5zaW9ucyBhcmUgMCwgdGhlIEFQSSBwcm92aWRlcyBhbiBpbWFnZSBhdCBzb3VyY2UgcXVhbGl0eS4gSWYgZGltZW5zaW9ucyBhcmUgbm90IHNwZWNpZmllZCwgdGhlIGRlZmF1bHQgc2l6ZSBvZiBpbWFnZSByZXR1cm5lZCBpcyAxMDB4MTAwcHguXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gd2lkdGhcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBoZWlnaHRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBiYWNrZ3JvdW5kXG4gICAgICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5QnVmZmVyPn1cbiAgICAgICAqL1xuICBhc3luYyBnZXRJbml0aWFscyhuYW1lLCB3aWR0aCwgaGVpZ2h0LCBiYWNrZ3JvdW5kKSB7XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2F2YXRhcnMvaW5pdGlhbHNcIjtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibmFtZVwiXSA9IG5hbWU7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2lkdGggIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ3aWR0aFwiXSA9IHdpZHRoO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGhlaWdodCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImhlaWdodFwiXSA9IGhlaWdodDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBiYWNrZ3JvdW5kICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiYmFja2dyb3VuZFwiXSA9IGJhY2tncm91bmQ7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZ2V0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZCxcbiAgICAgIFwiYXJyYXlCdWZmZXJcIlxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBHZXQgUVIgY29kZVxuICAgICAgICpcbiAgICAgICAqIENvbnZlcnRzIGEgZ2l2ZW4gcGxhaW4gdGV4dCB0byBhIFFSIGNvZGUgaW1hZ2UuIFlvdSBjYW4gdXNlIHRoZSBxdWVyeSBwYXJhbWV0ZXJzIHRvIGNoYW5nZSB0aGUgc2l6ZSBhbmQgc3R5bGUgb2YgdGhlIHJlc3VsdGluZyBpbWFnZS5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHRcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzaXplXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWFyZ2luXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRvd25sb2FkXG4gICAgICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5QnVmZmVyPn1cbiAgICAgICAqL1xuICBhc3luYyBnZXRRUih0ZXh0LCBzaXplLCBtYXJnaW4sIGRvd25sb2FkKSB7XG4gICAgaWYgKHR5cGVvZiB0ZXh0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInRleHRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvYXZhdGFycy9xclwiO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHRleHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ0ZXh0XCJdID0gdGV4dDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBzaXplICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wic2l6ZVwiXSA9IHNpemU7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWFyZ2luICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibWFyZ2luXCJdID0gbWFyZ2luO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvd25sb2FkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZG93bmxvYWRcIl0gPSBkb3dubG9hZDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkLFxuICAgICAgXCJhcnJheUJ1ZmZlclwiXG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgQXZhdGFycyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXZhdGFycy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/avatars.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/databases.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/databases.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Databases: () => (/* binding */ Databases)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/databases.ts\nvar Databases = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List databases\n   *\n   * Get a list of all databases from the current Appwrite project. You can use the search parameter to filter your results.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.DatabaseList>}\n   */\n  async list(queries, search) {\n    const apiPath = \"/databases\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create database\n       *\n       * Create a new Database.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} name\n       * @param {boolean} enabled\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Database>}\n       */\n  async create(databaseId, name, enabled) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/databases\";\n    const payload = {};\n    if (typeof databaseId !== \"undefined\") {\n      payload[\"databaseId\"] = databaseId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get database\n   *\n   * Get a database by its unique ID. This endpoint response returns a JSON object with the database metadata.\n   *\n   * @param {string} databaseId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Database>}\n   */\n  async get(databaseId) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    const apiPath = \"/databases/{databaseId}\".replace(\"{databaseId}\", databaseId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update database\n   *\n   * Update a database by its unique ID.\n   *\n   * @param {string} databaseId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Database>}\n   */\n  async update(databaseId, name, enabled) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/databases/{databaseId}\".replace(\"{databaseId}\", databaseId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete database\n   *\n   * Delete a database by its unique ID. Only API keys with with databases.write scope can delete a database.\n   *\n   * @param {string} databaseId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async delete(databaseId) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    const apiPath = \"/databases/{databaseId}\".replace(\"{databaseId}\", databaseId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List collections\n   *\n   * Get a list of all collections that belong to the provided databaseId. You can use the search parameter to filter your results.\n   *\n   * @param {string} databaseId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.CollectionList>}\n   */\n  async listCollections(databaseId, queries, search) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections\".replace(\"{databaseId}\", databaseId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create collection\n   *\n   * Create a new Collection. Before using this route, you should create a new database resource using either a [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection) API or directly from your database console.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} name\n   * @param {string[]} permissions\n   * @param {boolean} documentSecurity\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Collection>}\n   */\n  async createCollection(databaseId, collectionId, name, permissions, documentSecurity, enabled) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections\".replace(\"{databaseId}\", databaseId);\n    const payload = {};\n    if (typeof collectionId !== \"undefined\") {\n      payload[\"collectionId\"] = collectionId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    if (typeof documentSecurity !== \"undefined\") {\n      payload[\"documentSecurity\"] = documentSecurity;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get collection\n   *\n   * Get a collection by its unique ID. This endpoint response returns a JSON object with the collection metadata.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Collection>}\n   */\n  async getCollection(databaseId, collectionId) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update collection\n   *\n   * Update a collection by its unique ID.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} name\n   * @param {string[]} permissions\n   * @param {boolean} documentSecurity\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Collection>}\n   */\n  async updateCollection(databaseId, collectionId, name, permissions, documentSecurity, enabled) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    if (typeof documentSecurity !== \"undefined\") {\n      payload[\"documentSecurity\"] = documentSecurity;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete collection\n   *\n   * Delete a collection by its unique ID. Only users with write permissions have access to delete this resource.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteCollection(databaseId, collectionId) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List attributes\n   *\n   * List attributes in the collection.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.AttributeList>}\n   */\n  async listAttributes(databaseId, collectionId, queries) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create boolean attribute\n       *\n       * Create a boolean attribute.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {boolean} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeBoolean>}\n       */\n  async createBooleanAttribute(databaseId, collectionId, key, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/boolean\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update boolean attribute\n   *\n   * Update a boolean attribute. Changing the `default` value will not update already existing documents.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @param {boolean} required\n   * @param {boolean} xdefault\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.AttributeBoolean>}\n   */\n  async updateBooleanAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/boolean/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create datetime attribute\n   *\n   * Create a date time attribute according to the ISO 8601 standard.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @param {boolean} required\n   * @param {string} xdefault\n   * @param {boolean} array\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.AttributeDatetime>}\n   */\n  async createDatetimeAttribute(databaseId, collectionId, key, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/datetime\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update dateTime attribute\n   *\n   * Update a date time attribute. Changing the `default` value will not update already existing documents.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @param {boolean} required\n   * @param {string} xdefault\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.AttributeDatetime>}\n   */\n  async updateDatetimeAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/datetime/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create email attribute\n       *\n       * Create an email attribute.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeEmail>}\n       */\n  async createEmailAttribute(databaseId, collectionId, key, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/email\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update email attribute\n       *\n       * Update an email attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeEmail>}\n       */\n  async updateEmailAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/email/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create enum attribute\n       *\n       * Create an enumeration attribute. The `elements` param acts as a white-list of accepted values for this attribute. \n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {string[]} elements\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeEnum>}\n       */\n  async createEnumAttribute(databaseId, collectionId, key, elements, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof elements === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"elements\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/enum\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof elements !== \"undefined\") {\n      payload[\"elements\"] = elements;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update enum attribute\n       *\n       * Update an enum attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {string[]} elements\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeEnum>}\n       */\n  async updateEnumAttribute(databaseId, collectionId, key, elements, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof elements === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"elements\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/enum/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof elements !== \"undefined\") {\n      payload[\"elements\"] = elements;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create float attribute\n       *\n       * Create a float attribute. Optionally, minimum and maximum values can be provided.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {number} min\n       * @param {number} max\n       * @param {number} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeFloat>}\n       */\n  async createFloatAttribute(databaseId, collectionId, key, required, min, max, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/float\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof min !== \"undefined\") {\n      payload[\"min\"] = min;\n    }\n    if (typeof max !== \"undefined\") {\n      payload[\"max\"] = max;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update float attribute\n       *\n       * Update a float attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {number} min\n       * @param {number} max\n       * @param {number} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeFloat>}\n       */\n  async updateFloatAttribute(databaseId, collectionId, key, required, min, max, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof min === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"min\"');\n    }\n    if (typeof max === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"max\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/float/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof min !== \"undefined\") {\n      payload[\"min\"] = min;\n    }\n    if (typeof max !== \"undefined\") {\n      payload[\"max\"] = max;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create integer attribute\n       *\n       * Create an integer attribute. Optionally, minimum and maximum values can be provided.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {number} min\n       * @param {number} max\n       * @param {number} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeInteger>}\n       */\n  async createIntegerAttribute(databaseId, collectionId, key, required, min, max, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/integer\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof min !== \"undefined\") {\n      payload[\"min\"] = min;\n    }\n    if (typeof max !== \"undefined\") {\n      payload[\"max\"] = max;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update integer attribute\n       *\n       * Update an integer attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {number} min\n       * @param {number} max\n       * @param {number} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeInteger>}\n       */\n  async updateIntegerAttribute(databaseId, collectionId, key, required, min, max, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof min === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"min\"');\n    }\n    if (typeof max === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"max\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/integer/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof min !== \"undefined\") {\n      payload[\"min\"] = min;\n    }\n    if (typeof max !== \"undefined\") {\n      payload[\"max\"] = max;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create IP address attribute\n       *\n       * Create IP address attribute.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeIp>}\n       */\n  async createIpAttribute(databaseId, collectionId, key, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/ip\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update IP address attribute\n       *\n       * Update an ip attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeIp>}\n       */\n  async updateIpAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/ip/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create relationship attribute\n       *\n       * Create relationship attribute. [Learn more about relationship attributes](https://appwrite.io/docs/databases-relationships#relationship-attributes).\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} relatedCollectionId\n       * @param {RelationshipType} type\n       * @param {boolean} twoWay\n       * @param {string} key\n       * @param {string} twoWayKey\n       * @param {RelationMutate} onDelete\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeRelationship>}\n       */\n  async createRelationshipAttribute(databaseId, collectionId, relatedCollectionId, type, twoWay, key, twoWayKey, onDelete) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof relatedCollectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"relatedCollectionId\"');\n    }\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/relationship\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof relatedCollectionId !== \"undefined\") {\n      payload[\"relatedCollectionId\"] = relatedCollectionId;\n    }\n    if (typeof type !== \"undefined\") {\n      payload[\"type\"] = type;\n    }\n    if (typeof twoWay !== \"undefined\") {\n      payload[\"twoWay\"] = twoWay;\n    }\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof twoWayKey !== \"undefined\") {\n      payload[\"twoWayKey\"] = twoWayKey;\n    }\n    if (typeof onDelete !== \"undefined\") {\n      payload[\"onDelete\"] = onDelete;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create string attribute\n       *\n       * Create a string attribute.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {number} size\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @param {boolean} array\n       * @param {boolean} encrypt\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeString>}\n       */\n  async createStringAttribute(databaseId, collectionId, key, size, required, xdefault, array, encrypt) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof size === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"size\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/string\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof size !== \"undefined\") {\n      payload[\"size\"] = size;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    if (typeof encrypt !== \"undefined\") {\n      payload[\"encrypt\"] = encrypt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update string attribute\n       *\n       * Update a string attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeString>}\n       */\n  async updateStringAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/string/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create URL attribute\n       *\n       * Create a URL attribute.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @param {boolean} array\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeUrl>}\n       */\n  async createUrlAttribute(databaseId, collectionId, key, required, xdefault, array) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/url\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    if (typeof array !== \"undefined\") {\n      payload[\"array\"] = array;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update URL attribute\n       *\n       * Update an url attribute. Changing the `default` value will not update already existing documents.\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {boolean} required\n       * @param {string} xdefault\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeUrl>}\n       */\n  async updateUrlAttribute(databaseId, collectionId, key, required, xdefault) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof required === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"required\"');\n    }\n    if (typeof xdefault === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"xdefault\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/url/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof required !== \"undefined\") {\n      payload[\"required\"] = required;\n    }\n    if (typeof xdefault !== \"undefined\") {\n      payload[\"default\"] = xdefault;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get attribute\n   *\n   * Get attribute by ID.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async getAttribute(databaseId, collectionId, key) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete attribute\n   *\n   * Deletes an attribute.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteAttribute(databaseId, collectionId, key) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update relationship attribute\n       *\n       * Update relationship attribute. [Learn more about relationship attributes](https://appwrite.io/docs/databases-relationships#relationship-attributes).\n  \n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {RelationMutate} onDelete\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.AttributeRelationship>}\n       */\n  async updateRelationshipAttribute(databaseId, collectionId, key, onDelete) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/attributes/{key}/relationship\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    if (typeof onDelete !== \"undefined\") {\n      payload[\"onDelete\"] = onDelete;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List documents\n   *\n   * Get a list of all the user&#039;s documents in a given collection. You can use the query params to filter your results.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.DocumentList<Document>>}\n   */\n  async listDocuments(databaseId, collectionId, queries) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/documents\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create document\n   *\n   * Create a new Document. Before using this route, you should create a new collection resource using either a [server integration](https://appwrite.io/docs/server/databases#databasesCreateCollection) API or directly from your database console.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} documentId\n   * @param {Omit<Document, keyof Models.Document>} data\n   * @param {string[]} permissions\n   * @throws {AppwriteException}\n   * @returns {Promise<Document>}\n   */\n  async createDocument(databaseId, collectionId, documentId, data, permissions) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof documentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"documentId\"');\n    }\n    if (typeof data === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"data\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/documents\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof documentId !== \"undefined\") {\n      payload[\"documentId\"] = documentId;\n    }\n    if (typeof data !== \"undefined\") {\n      payload[\"data\"] = data;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get document\n   *\n   * Get a document by its unique ID. This endpoint response returns a JSON object with the document data.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} documentId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Document>}\n   */\n  async getDocument(databaseId, collectionId, documentId, queries) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof documentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"documentId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/documents/{documentId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{documentId}\", documentId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update document\n   *\n   * Update a document by its unique ID. Using the patch method you can pass only specific fields that will get updated.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} documentId\n   * @param {Partial<Omit<Document, keyof Models.Document>>} data\n   * @param {string[]} permissions\n   * @throws {AppwriteException}\n   * @returns {Promise<Document>}\n   */\n  async updateDocument(databaseId, collectionId, documentId, data, permissions) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof documentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"documentId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/documents/{documentId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{documentId}\", documentId);\n    const payload = {};\n    if (typeof data !== \"undefined\") {\n      payload[\"data\"] = data;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete document\n   *\n   * Delete a document by its unique ID.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} documentId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteDocument(databaseId, collectionId, documentId) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof documentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"documentId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/documents/{documentId}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{documentId}\", documentId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List indexes\n   *\n   * List indexes in the collection.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.IndexList>}\n   */\n  async listIndexes(databaseId, collectionId, queries) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/indexes\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create index\n       *\n       * Creates an index on the attributes listed. Your index should include all the attributes you will query in a single request.\n  Attributes can be `key`, `fulltext`, and `unique`.\n       *\n       * @param {string} databaseId\n       * @param {string} collectionId\n       * @param {string} key\n       * @param {IndexType} type\n       * @param {string[]} attributes\n       * @param {string[]} orders\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Index>}\n       */\n  async createIndex(databaseId, collectionId, key, type, attributes, orders) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    if (typeof attributes === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"attributes\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/indexes\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof type !== \"undefined\") {\n      payload[\"type\"] = type;\n    }\n    if (typeof attributes !== \"undefined\") {\n      payload[\"attributes\"] = attributes;\n    }\n    if (typeof orders !== \"undefined\") {\n      payload[\"orders\"] = orders;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get index\n   *\n   * Get index by ID.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Index>}\n   */\n  async getIndex(databaseId, collectionId, key) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/indexes/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete index\n   *\n   * Delete an index.\n   *\n   * @param {string} databaseId\n   * @param {string} collectionId\n   * @param {string} key\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteIndex(databaseId, collectionId, key) {\n    if (typeof databaseId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"databaseId\"');\n    }\n    if (typeof collectionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"collectionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/databases/{databaseId}/collections/{collectionId}/indexes/{key}\".replace(\"{databaseId}\", databaseId).replace(\"{collectionId}\", collectionId).replace(\"{key}\", key);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=databases.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9zZXJ2aWNlcy9kYXRhYmFzZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QixhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsWUFBWSxXQUFXO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxZQUFZLFdBQVc7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixjQUFjO0FBQ2QsZUFBZSxVQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxZQUFZLFdBQVc7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLHdCQUF3QixXQUFXO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsU0FBUztBQUN0QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyx3QkFBd0IsV0FBVztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsWUFBWSxXQUFXLHlCQUF5QixhQUFhO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsU0FBUztBQUN0QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsWUFBWSxXQUFXLHlCQUF5QixhQUFhO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZCxlQUFlLFVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxZQUFZLFdBQVcseUJBQXlCLGFBQWE7QUFDcEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxVQUFVO0FBQ3ZCLGNBQWM7QUFDZCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSx1QkFBdUIsV0FBVyx5QkFBeUIsYUFBYTtBQUMvSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsU0FBUztBQUMxQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsK0JBQStCLFdBQVcseUJBQXlCLGFBQWE7QUFDdko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QixhQUFhLFNBQVM7QUFDdEIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLHFCQUFxQixJQUFJLFlBQVksV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsSUFBSTtBQUM1TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLGdDQUFnQyxXQUFXLHlCQUF5QixhQUFhO0FBQ3hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEIsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxzQkFBc0IsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDN0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLDZCQUE2QixXQUFXLHlCQUF5QixhQUFhO0FBQ3JKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixTQUFTO0FBQzFCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxtQkFBbUIsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDMUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFVBQVU7QUFDM0IsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLDRCQUE0QixXQUFXLHlCQUF5QixhQUFhO0FBQ3BKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixVQUFVO0FBQzNCLGlCQUFpQixTQUFTO0FBQzFCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxrQkFBa0IsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDekw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLDZCQUE2QixXQUFXLHlCQUF5QixhQUFhO0FBQ3JKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixTQUFTO0FBQzFCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxtQkFBbUIsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDMUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLCtCQUErQixXQUFXLHlCQUF5QixhQUFhO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixTQUFTO0FBQzFCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxxQkFBcUIsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDNUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLDBCQUEwQixXQUFXLHlCQUF5QixhQUFhO0FBQ2xKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixTQUFTO0FBQzFCLGlCQUFpQixRQUFRO0FBQ3pCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxnQkFBZ0IsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDdkw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLGtCQUFrQjtBQUNuQyxpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsZ0JBQWdCO0FBQ2pDLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxvQ0FBb0MsV0FBVyx5QkFBeUIsYUFBYTtBQUM1SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsU0FBUztBQUMxQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsOEJBQThCLFdBQVcseUJBQXlCLGFBQWE7QUFDdEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLG9CQUFvQixJQUFJLFlBQVksV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsSUFBSTtBQUMzTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixpQkFBaUIsUUFBUTtBQUN6QixpQkFBaUIsU0FBUztBQUMxQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsMkJBQTJCLFdBQVcseUJBQXlCLGFBQWE7QUFDbko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFFBQVE7QUFDekIsaUJBQWlCLFNBQVM7QUFDMUIsaUJBQWlCLFFBQVE7QUFDekIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLGlCQUFpQixJQUFJLFlBQVksV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsSUFBSTtBQUN4TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLGFBQWEsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDcEw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZCxlQUFlLFVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxhQUFhLElBQUksWUFBWSxXQUFXLHlCQUF5QixhQUFhLDJCQUEyQixJQUFJO0FBQ3BMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixnQkFBZ0I7QUFDakMsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLGFBQWEsSUFBSSx5QkFBeUIsV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsSUFBSTtBQUNqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsc0JBQXNCLFdBQVcseUJBQXlCLGFBQWE7QUFDOUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsVUFBVTtBQUN2QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsc0JBQXNCLFdBQVcseUJBQXlCLGFBQWE7QUFDOUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QixjQUFjO0FBQ2QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsWUFBWSxXQUFXLFlBQVksV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsV0FBVztBQUNqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxnREFBZ0Q7QUFDN0QsYUFBYSxVQUFVO0FBQ3ZCLGNBQWM7QUFDZCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxZQUFZLFdBQVcsWUFBWSxXQUFXLHlCQUF5QixhQUFhLDJCQUEyQixXQUFXO0FBQ2pNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixjQUFjO0FBQ2QsZUFBZSxVQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQTtBQUNBLGdCQUFnQiwwREFBaUI7QUFDakM7QUFDQSxpQ0FBaUMsV0FBVyxjQUFjLGFBQWEsWUFBWSxXQUFXLFlBQVksV0FBVyx5QkFBeUIsYUFBYSwyQkFBMkIsV0FBVztBQUNqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLG9CQUFvQixXQUFXLHlCQUF5QixhQUFhO0FBQzVJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixRQUFRO0FBQ3pCLGlCQUFpQixXQUFXO0FBQzVCLGlCQUFpQixVQUFVO0FBQzNCLGlCQUFpQixVQUFVO0FBQzNCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxvQkFBb0IsV0FBVyx5QkFBeUIsYUFBYTtBQUM1STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0EsaUNBQWlDLFdBQVcsY0FBYyxhQUFhLFVBQVUsSUFBSSxZQUFZLFdBQVcseUJBQXlCLGFBQWEsMkJBQTJCLElBQUk7QUFDakw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGNBQWM7QUFDZCxlQUFlLFVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBO0FBQ0EsZ0JBQWdCLDBEQUFpQjtBQUNqQztBQUNBLGlDQUFpQyxXQUFXLGNBQWMsYUFBYSxVQUFVLElBQUksWUFBWSxXQUFXLHlCQUF5QixhQUFhLDJCQUEyQixJQUFJO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxQjtBQUNyQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3Qvc2VydmljZXMvZGF0YWJhc2VzLm1qcz82MjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcHdyaXRlRXhjZXB0aW9uIH0gZnJvbSAnLi4vY2xpZW50Lm1qcyc7XG5cbi8vIHNyYy9zZXJ2aWNlcy9kYXRhYmFzZXMudHNcbnZhciBEYXRhYmFzZXMgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICB9XG4gIC8qKlxuICAgKiBMaXN0IGRhdGFiYXNlc1xuICAgKlxuICAgKiBHZXQgYSBsaXN0IG9mIGFsbCBkYXRhYmFzZXMgZnJvbSB0aGUgY3VycmVudCBBcHB3cml0ZSBwcm9qZWN0LiBZb3UgY2FuIHVzZSB0aGUgc2VhcmNoIHBhcmFtZXRlciB0byBmaWx0ZXIgeW91ciByZXN1bHRzLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBxdWVyaWVzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzZWFyY2hcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5EYXRhYmFzZUxpc3Q+fVxuICAgKi9cbiAgYXN5bmMgbGlzdChxdWVyaWVzLCBzZWFyY2gpIHtcbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzXCI7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcXVlcmllcyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInF1ZXJpZXNcIl0gPSBxdWVyaWVzO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHNlYXJjaCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInNlYXJjaFwiXSA9IHNlYXJjaDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIENyZWF0ZSBkYXRhYmFzZVxuICAgICAgICpcbiAgICAgICAqIENyZWF0ZSBhIG5ldyBEYXRhYmFzZS5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGVuYWJsZWRcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkRhdGFiYXNlPn1cbiAgICAgICAqL1xuICBhc3luYyBjcmVhdGUoZGF0YWJhc2VJZCwgbmFtZSwgZW5hYmxlZCkge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcIm5hbWVcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzXCI7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRhdGFiYXNlSWRcIl0gPSBkYXRhYmFzZUlkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJuYW1lXCJdID0gbmFtZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlbmFibGVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZW5hYmxlZFwiXSA9IGVuYWJsZWQ7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicG9zdFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgZGF0YWJhc2VcbiAgICpcbiAgICogR2V0IGEgZGF0YWJhc2UgYnkgaXRzIHVuaXF1ZSBJRC4gVGhpcyBlbmRwb2ludCByZXNwb25zZSByZXR1cm5zIGEgSlNPTiBvYmplY3Qgd2l0aCB0aGUgZGF0YWJhc2UgbWV0YWRhdGEuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuRGF0YWJhc2U+fVxuICAgKi9cbiAgYXN5bmMgZ2V0KGRhdGFiYXNlSWQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlIGRhdGFiYXNlXG4gICAqXG4gICAqIFVwZGF0ZSBhIGRhdGFiYXNlIGJ5IGl0cyB1bmlxdWUgSUQuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZFxuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkRhdGFiYXNlPn1cbiAgICovXG4gIGFzeW5jIHVwZGF0ZShkYXRhYmFzZUlkLCBuYW1lLCBlbmFibGVkKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwibmFtZVwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibmFtZVwiXSA9IG5hbWU7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZW5hYmxlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImVuYWJsZWRcIl0gPSBlbmFibGVkO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInB1dFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgZGF0YWJhc2VcbiAgICpcbiAgICogRGVsZXRlIGEgZGF0YWJhc2UgYnkgaXRzIHVuaXF1ZSBJRC4gT25seSBBUEkga2V5cyB3aXRoIHdpdGggZGF0YWJhc2VzLndyaXRlIHNjb3BlIGNhbiBkZWxldGUgYSBkYXRhYmFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHt9Pn1cbiAgICovXG4gIGFzeW5jIGRlbGV0ZShkYXRhYmFzZUlkKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZGVsZXRlXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIExpc3QgY29sbGVjdGlvbnNcbiAgICpcbiAgICogR2V0IGEgbGlzdCBvZiBhbGwgY29sbGVjdGlvbnMgdGhhdCBiZWxvbmcgdG8gdGhlIHByb3ZpZGVkIGRhdGFiYXNlSWQuIFlvdSBjYW4gdXNlIHRoZSBzZWFyY2ggcGFyYW1ldGVyIHRvIGZpbHRlciB5b3VyIHJlc3VsdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHF1ZXJpZXNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHNlYXJjaFxuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkNvbGxlY3Rpb25MaXN0Pn1cbiAgICovXG4gIGFzeW5jIGxpc3RDb2xsZWN0aW9ucyhkYXRhYmFzZUlkLCBxdWVyaWVzLCBzZWFyY2gpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBxdWVyaWVzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicXVlcmllc1wiXSA9IHF1ZXJpZXM7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygc2VhcmNoICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wic2VhcmNoXCJdID0gc2VhcmNoO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgY29sbGVjdGlvblxuICAgKlxuICAgKiBDcmVhdGUgYSBuZXcgQ29sbGVjdGlvbi4gQmVmb3JlIHVzaW5nIHRoaXMgcm91dGUsIHlvdSBzaG91bGQgY3JlYXRlIGEgbmV3IGRhdGFiYXNlIHJlc291cmNlIHVzaW5nIGVpdGhlciBhIFtzZXJ2ZXIgaW50ZWdyYXRpb25dKGh0dHBzOi8vYXBwd3JpdGUuaW8vZG9jcy9zZXJ2ZXIvZGF0YWJhc2VzI2RhdGFiYXNlc0NyZWF0ZUNvbGxlY3Rpb24pIEFQSSBvciBkaXJlY3RseSBmcm9tIHlvdXIgZGF0YWJhc2UgY29uc29sZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwZXJtaXNzaW9uc1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRvY3VtZW50U2VjdXJpdHlcbiAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQ29sbGVjdGlvbj59XG4gICAqL1xuICBhc3luYyBjcmVhdGVDb2xsZWN0aW9uKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwgbmFtZSwgcGVybWlzc2lvbnMsIGRvY3VtZW50U2VjdXJpdHksIGVuYWJsZWQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJuYW1lXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnNcIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImNvbGxlY3Rpb25JZFwiXSA9IGNvbGxlY3Rpb25JZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibmFtZVwiXSA9IG5hbWU7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGVybWlzc2lvbnMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJwZXJtaXNzaW9uc1wiXSA9IHBlcm1pc3Npb25zO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50U2VjdXJpdHkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkb2N1bWVudFNlY3VyaXR5XCJdID0gZG9jdW1lbnRTZWN1cml0eTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlbmFibGVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZW5hYmxlZFwiXSA9IGVuYWJsZWQ7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicG9zdFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgY29sbGVjdGlvblxuICAgKlxuICAgKiBHZXQgYSBjb2xsZWN0aW9uIGJ5IGl0cyB1bmlxdWUgSUQuIFRoaXMgZW5kcG9pbnQgcmVzcG9uc2UgcmV0dXJucyBhIEpTT04gb2JqZWN0IHdpdGggdGhlIGNvbGxlY3Rpb24gbWV0YWRhdGEuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5Db2xsZWN0aW9uPn1cbiAgICovXG4gIGFzeW5jIGdldENvbGxlY3Rpb24oZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZ2V0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIFVwZGF0ZSBjb2xsZWN0aW9uXG4gICAqXG4gICAqIFVwZGF0ZSBhIGNvbGxlY3Rpb24gYnkgaXRzIHVuaXF1ZSBJRC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBwZXJtaXNzaW9uc1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGRvY3VtZW50U2VjdXJpdHlcbiAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQ29sbGVjdGlvbj59XG4gICAqL1xuICBhc3luYyB1cGRhdGVDb2xsZWN0aW9uKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwgbmFtZSwgcGVybWlzc2lvbnMsIGRvY3VtZW50U2VjdXJpdHksIGVuYWJsZWQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJuYW1lXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJuYW1lXCJdID0gbmFtZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwZXJtaXNzaW9ucyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInBlcm1pc3Npb25zXCJdID0gcGVybWlzc2lvbnM7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnRTZWN1cml0eSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRvY3VtZW50U2VjdXJpdHlcIl0gPSBkb2N1bWVudFNlY3VyaXR5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVuYWJsZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJlbmFibGVkXCJdID0gZW5hYmxlZDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwdXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlIGNvbGxlY3Rpb25cbiAgICpcbiAgICogRGVsZXRlIGEgY29sbGVjdGlvbiBieSBpdHMgdW5pcXVlIElELiBPbmx5IHVzZXJzIHdpdGggd3JpdGUgcGVybWlzc2lvbnMgaGF2ZSBhY2Nlc3MgdG8gZGVsZXRlIHRoaXMgcmVzb3VyY2UuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHt9Pn1cbiAgICovXG4gIGFzeW5jIGRlbGV0ZUNvbGxlY3Rpb24oZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZGVsZXRlXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIExpc3QgYXR0cmlidXRlc1xuICAgKlxuICAgKiBMaXN0IGF0dHJpYnV0ZXMgaW4gdGhlIGNvbGxlY3Rpb24uXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gcXVlcmllc1xuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUxpc3Q+fVxuICAgKi9cbiAgYXN5bmMgbGlzdEF0dHJpYnV0ZXMoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBxdWVyaWVzKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBxdWVyaWVzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicXVlcmllc1wiXSA9IHF1ZXJpZXM7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwiZ2V0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBDcmVhdGUgYm9vbGVhbiBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBDcmVhdGUgYSBib29sZWFuIGF0dHJpYnV0ZS5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0geGRlZmF1bHRcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYXJyYXlcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUJvb2xlYW4+fVxuICAgICAgICovXG4gIGFzeW5jIGNyZWF0ZUJvb2xlYW5BdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIHJlcXVpcmVkLCB4ZGVmYXVsdCwgYXJyYXkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL2Jvb2xlYW5cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImtleVwiXSA9IGtleTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJyYXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJhcnJheVwiXSA9IGFycmF5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlIGJvb2xlYW4gYXR0cmlidXRlXG4gICAqXG4gICAqIFVwZGF0ZSBhIGJvb2xlYW4gYXR0cmlidXRlLiBDaGFuZ2luZyB0aGUgYGRlZmF1bHRgIHZhbHVlIHdpbGwgbm90IHVwZGF0ZSBhbHJlYWR5IGV4aXN0aW5nIGRvY3VtZW50cy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICogQHBhcmFtIHtib29sZWFufSB4ZGVmYXVsdFxuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUJvb2xlYW4+fVxuICAgKi9cbiAgYXN5bmMgdXBkYXRlQm9vbGVhbkF0dHJpYnV0ZShkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgcmVxdWlyZWQsIHhkZWZhdWx0KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlcXVpcmVkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJ4ZGVmYXVsdFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvYm9vbGVhbi97a2V5fVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntrZXl9XCIsIGtleSk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJyZXF1aXJlZFwiXSA9IHJlcXVpcmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZGVmYXVsdFwiXSA9IHhkZWZhdWx0O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBhdGNoXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBkYXRldGltZSBhdHRyaWJ1dGVcbiAgICpcbiAgICogQ3JlYXRlIGEgZGF0ZSB0aW1lIGF0dHJpYnV0ZSBhY2NvcmRpbmcgdG8gdGhlIElTTyA4NjAxIHN0YW5kYXJkLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgKiBAcGFyYW0ge3N0cmluZ30geGRlZmF1bHRcbiAgICogQHBhcmFtIHtib29sZWFufSBhcnJheVxuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZURhdGV0aW1lPn1cbiAgICovXG4gIGFzeW5jIGNyZWF0ZURhdGV0aW1lQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCByZXF1aXJlZCwgeGRlZmF1bHQsIGFycmF5KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlcXVpcmVkXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy9kYXRldGltZVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wia2V5XCJdID0ga2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicmVxdWlyZWRcIl0gPSByZXF1aXJlZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhcnJheSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImFycmF5XCJdID0gYXJyYXk7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicG9zdFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBVcGRhdGUgZGF0ZVRpbWUgYXR0cmlidXRlXG4gICAqXG4gICAqIFVwZGF0ZSBhIGRhdGUgdGltZSBhdHRyaWJ1dGUuIENoYW5naW5nIHRoZSBgZGVmYXVsdGAgdmFsdWUgd2lsbCBub3QgdXBkYXRlIGFscmVhZHkgZXhpc3RpbmcgZG9jdW1lbnRzLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgKiBAcGFyYW0ge3N0cmluZ30geGRlZmF1bHRcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5BdHRyaWJ1dGVEYXRldGltZT59XG4gICAqL1xuICBhc3luYyB1cGRhdGVEYXRldGltZUF0dHJpYnV0ZShkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgcmVxdWlyZWQsIHhkZWZhdWx0KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlcXVpcmVkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJ4ZGVmYXVsdFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvZGF0ZXRpbWUve2tleX1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpLnJlcGxhY2UoXCJ7a2V5fVwiLCBrZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicmVxdWlyZWRcIl0gPSByZXF1aXJlZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwYXRjaFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogQ3JlYXRlIGVtYWlsIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIENyZWF0ZSBhbiBlbWFpbCBhdHRyaWJ1dGUuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30geGRlZmF1bHRcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYXJyYXlcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUVtYWlsPn1cbiAgICAgICAqL1xuICBhc3luYyBjcmVhdGVFbWFpbEF0dHJpYnV0ZShkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgcmVxdWlyZWQsIHhkZWZhdWx0LCBhcnJheSkge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwia2V5XCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJyZXF1aXJlZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvZW1haWxcIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImtleVwiXSA9IGtleTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJyYXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJhcnJheVwiXSA9IGFycmF5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIFVwZGF0ZSBlbWFpbCBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBVcGRhdGUgYW4gZW1haWwgYXR0cmlidXRlLiBDaGFuZ2luZyB0aGUgYGRlZmF1bHRgIHZhbHVlIHdpbGwgbm90IHVwZGF0ZSBhbHJlYWR5IGV4aXN0aW5nIGRvY3VtZW50cy5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB4ZGVmYXVsdFxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlRW1haWw+fVxuICAgICAgICovXG4gIGFzeW5jIHVwZGF0ZUVtYWlsQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCByZXF1aXJlZCwgeGRlZmF1bHQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInhkZWZhdWx0XCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy9lbWFpbC97a2V5fVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntrZXl9XCIsIGtleSk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJyZXF1aXJlZFwiXSA9IHJlcXVpcmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZGVmYXVsdFwiXSA9IHhkZWZhdWx0O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBhdGNoXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBDcmVhdGUgZW51bSBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBDcmVhdGUgYW4gZW51bWVyYXRpb24gYXR0cmlidXRlLiBUaGUgYGVsZW1lbnRzYCBwYXJhbSBhY3RzIGFzIGEgd2hpdGUtbGlzdCBvZiBhY2NlcHRlZCB2YWx1ZXMgZm9yIHRoaXMgYXR0cmlidXRlLiBcbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nW119IGVsZW1lbnRzXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30geGRlZmF1bHRcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYXJyYXlcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUVudW0+fVxuICAgICAgICovXG4gIGFzeW5jIGNyZWF0ZUVudW1BdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIGVsZW1lbnRzLCByZXF1aXJlZCwgeGRlZmF1bHQsIGFycmF5KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVsZW1lbnRzID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImVsZW1lbnRzXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJyZXF1aXJlZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvZW51bVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wia2V5XCJdID0ga2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVsZW1lbnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZWxlbWVudHNcIl0gPSBlbGVtZW50cztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJyYXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJhcnJheVwiXSA9IGFycmF5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIFVwZGF0ZSBlbnVtIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIFVwZGF0ZSBhbiBlbnVtIGF0dHJpYnV0ZS4gQ2hhbmdpbmcgdGhlIGBkZWZhdWx0YCB2YWx1ZSB3aWxsIG5vdCB1cGRhdGUgYWxyZWFkeSBleGlzdGluZyBkb2N1bWVudHMuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBlbGVtZW50c1xuICAgICAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHhkZWZhdWx0XG4gICAgICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5BdHRyaWJ1dGVFbnVtPn1cbiAgICAgICAqL1xuICBhc3luYyB1cGRhdGVFbnVtQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCBlbGVtZW50cywgcmVxdWlyZWQsIHhkZWZhdWx0KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVsZW1lbnRzID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImVsZW1lbnRzXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJyZXF1aXJlZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwieGRlZmF1bHRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL2VudW0ve2tleX1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpLnJlcGxhY2UoXCJ7a2V5fVwiLCBrZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIGVsZW1lbnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZWxlbWVudHNcIl0gPSBlbGVtZW50cztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicGF0Y2hcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIENyZWF0ZSBmbG9hdCBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBDcmVhdGUgYSBmbG9hdCBhdHRyaWJ1dGUuIE9wdGlvbmFsbHksIG1pbmltdW0gYW5kIG1heGltdW0gdmFsdWVzIGNhbiBiZSBwcm92aWRlZC5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtaW5cbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXhcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4ZGVmYXVsdFxuICAgICAgICogQHBhcmFtIHtib29sZWFufSBhcnJheVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlRmxvYXQ+fVxuICAgICAgICovXG4gIGFzeW5jIGNyZWF0ZUZsb2F0QXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCByZXF1aXJlZCwgbWluLCBtYXgsIHhkZWZhdWx0LCBhcnJheSkge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwia2V5XCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJyZXF1aXJlZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvZmxvYXRcIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImtleVwiXSA9IGtleTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWluICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibWluXCJdID0gbWluO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcIm1heFwiXSA9IG1heDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhcnJheSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImFycmF5XCJdID0gYXJyYXk7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicG9zdFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogVXBkYXRlIGZsb2F0IGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIFVwZGF0ZSBhIGZsb2F0IGF0dHJpYnV0ZS4gQ2hhbmdpbmcgdGhlIGBkZWZhdWx0YCB2YWx1ZSB3aWxsIG5vdCB1cGRhdGUgYWxyZWFkeSBleGlzdGluZyBkb2N1bWVudHMuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWF4XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0geGRlZmF1bHRcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUZsb2F0Pn1cbiAgICAgICAqL1xuICBhc3luYyB1cGRhdGVGbG9hdEF0dHJpYnV0ZShkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgcmVxdWlyZWQsIG1pbiwgbWF4LCB4ZGVmYXVsdCkge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwia2V5XCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJyZXF1aXJlZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWluID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcIm1pblwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWF4ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcIm1heFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwieGRlZmF1bHRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL2Zsb2F0L3trZXl9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2tleX1cIiwga2V5KTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWluICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibWluXCJdID0gbWluO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcIm1heFwiXSA9IG1heDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwYXRjaFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogQ3JlYXRlIGludGVnZXIgYXR0cmlidXRlXG4gICAgICAgKlxuICAgICAgICogQ3JlYXRlIGFuIGludGVnZXIgYXR0cmlidXRlLiBPcHRpb25hbGx5LCBtaW5pbXVtIGFuZCBtYXhpbXVtIHZhbHVlcyBjYW4gYmUgcHJvdmlkZWQuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWF4XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0geGRlZmF1bHRcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYXJyYXlcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUludGVnZXI+fVxuICAgICAgICovXG4gIGFzeW5jIGNyZWF0ZUludGVnZXJBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIHJlcXVpcmVkLCBtaW4sIG1heCwgeGRlZmF1bHQsIGFycmF5KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlcXVpcmVkXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy9pbnRlZ2VyXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBrZXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJrZXlcIl0gPSBrZXk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJyZXF1aXJlZFwiXSA9IHJlcXVpcmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1pbiAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcIm1pblwiXSA9IG1pbjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBtYXggIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJtYXhcIl0gPSBtYXg7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJyYXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJhcnJheVwiXSA9IGFycmF5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIFVwZGF0ZSBpbnRlZ2VyIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIFVwZGF0ZSBhbiBpbnRlZ2VyIGF0dHJpYnV0ZS4gQ2hhbmdpbmcgdGhlIGBkZWZhdWx0YCB2YWx1ZSB3aWxsIG5vdCB1cGRhdGUgYWxyZWFkeSBleGlzdGluZyBkb2N1bWVudHMuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gbWF4XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0geGRlZmF1bHRcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZUludGVnZXI+fVxuICAgICAgICovXG4gIGFzeW5jIHVwZGF0ZUludGVnZXJBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIHJlcXVpcmVkLCBtaW4sIG1heCwgeGRlZmF1bHQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1pbiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJtaW5cIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJtYXhcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInhkZWZhdWx0XCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy9pbnRlZ2VyL3trZXl9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2tleX1cIiwga2V5KTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWluICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wibWluXCJdID0gbWluO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcIm1heFwiXSA9IG1heDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwYXRjaFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogQ3JlYXRlIElQIGFkZHJlc3MgYXR0cmlidXRlXG4gICAgICAgKlxuICAgICAgICogQ3JlYXRlIElQIGFkZHJlc3MgYXR0cmlidXRlLlxuICBcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHhkZWZhdWx0XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGFycmF5XG4gICAgICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5BdHRyaWJ1dGVJcD59XG4gICAgICAgKi9cbiAgYXN5bmMgY3JlYXRlSXBBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIHJlcXVpcmVkLCB4ZGVmYXVsdCwgYXJyYXkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL2lwXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBrZXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJrZXlcIl0gPSBrZXk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJyZXF1aXJlZFwiXSA9IHJlcXVpcmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZGVmYXVsdFwiXSA9IHhkZWZhdWx0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGFycmF5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiYXJyYXlcIl0gPSBhcnJheTtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwb3N0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBVcGRhdGUgSVAgYWRkcmVzcyBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBVcGRhdGUgYW4gaXAgYXR0cmlidXRlLiBDaGFuZ2luZyB0aGUgYGRlZmF1bHRgIHZhbHVlIHdpbGwgbm90IHVwZGF0ZSBhbHJlYWR5IGV4aXN0aW5nIGRvY3VtZW50cy5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB4ZGVmYXVsdFxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlSXA+fVxuICAgICAgICovXG4gIGFzeW5jIHVwZGF0ZUlwQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCByZXF1aXJlZCwgeGRlZmF1bHQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInhkZWZhdWx0XCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy9pcC97a2V5fVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntrZXl9XCIsIGtleSk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJyZXF1aXJlZFwiXSA9IHJlcXVpcmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZGVmYXVsdFwiXSA9IHhkZWZhdWx0O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBhdGNoXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBDcmVhdGUgcmVsYXRpb25zaGlwIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIENyZWF0ZSByZWxhdGlvbnNoaXAgYXR0cmlidXRlLiBbTGVhcm4gbW9yZSBhYm91dCByZWxhdGlvbnNoaXAgYXR0cmlidXRlc10oaHR0cHM6Ly9hcHB3cml0ZS5pby9kb2NzL2RhdGFiYXNlcy1yZWxhdGlvbnNoaXBzI3JlbGF0aW9uc2hpcC1hdHRyaWJ1dGVzKS5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGVkQ29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge1JlbGF0aW9uc2hpcFR5cGV9IHR5cGVcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gdHdvV2F5XG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHdvV2F5S2V5XG4gICAgICAgKiBAcGFyYW0ge1JlbGF0aW9uTXV0YXRlfSBvbkRlbGV0ZVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlUmVsYXRpb25zaGlwPn1cbiAgICAgICAqL1xuICBhc3luYyBjcmVhdGVSZWxhdGlvbnNoaXBBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCByZWxhdGVkQ29sbGVjdGlvbklkLCB0eXBlLCB0d29XYXksIGtleSwgdHdvV2F5S2V5LCBvbkRlbGV0ZSkge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZWxhdGVkQ29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlbGF0ZWRDb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHR5cGUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwidHlwZVwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvcmVsYXRpb25zaGlwXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiByZWxhdGVkQ29sbGVjdGlvbklkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicmVsYXRlZENvbGxlY3Rpb25JZFwiXSA9IHJlbGF0ZWRDb2xsZWN0aW9uSWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInR5cGVcIl0gPSB0eXBlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHR3b1dheSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInR3b1dheVwiXSA9IHR3b1dheTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBrZXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJrZXlcIl0gPSBrZXk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdHdvV2F5S2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1widHdvV2F5S2V5XCJdID0gdHdvV2F5S2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG9uRGVsZXRlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wib25EZWxldGVcIl0gPSBvbkRlbGV0ZTtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwb3N0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBDcmVhdGUgc3RyaW5nIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIENyZWF0ZSBhIHN0cmluZyBhdHRyaWJ1dGUuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0gc2l6ZVxuICAgICAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHhkZWZhdWx0XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGFycmF5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGVuY3J5cHRcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZVN0cmluZz59XG4gICAgICAgKi9cbiAgYXN5bmMgY3JlYXRlU3RyaW5nQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCBzaXplLCByZXF1aXJlZCwgeGRlZmF1bHQsIGFycmF5LCBlbmNyeXB0KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHNpemUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwic2l6ZVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL3N0cmluZ1wiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wia2V5XCJdID0ga2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHNpemUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJzaXplXCJdID0gc2l6ZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXJyYXkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJhcnJheVwiXSA9IGFycmF5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVuY3J5cHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJlbmNyeXB0XCJdID0gZW5jcnlwdDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwb3N0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAgICAgKiBVcGRhdGUgc3RyaW5nIGF0dHJpYnV0ZVxuICAgICAgICpcbiAgICAgICAqIFVwZGF0ZSBhIHN0cmluZyBhdHRyaWJ1dGUuIENoYW5naW5nIHRoZSBgZGVmYXVsdGAgdmFsdWUgd2lsbCBub3QgdXBkYXRlIGFscmVhZHkgZXhpc3RpbmcgZG9jdW1lbnRzLlxuICBcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgICAgICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZFxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHhkZWZhdWx0XG4gICAgICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE1vZGVscy5BdHRyaWJ1dGVTdHJpbmc+fVxuICAgICAgICovXG4gIGFzeW5jIHVwZGF0ZVN0cmluZ0F0dHJpYnV0ZShkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgcmVxdWlyZWQsIHhkZWZhdWx0KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInJlcXVpcmVkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJ4ZGVmYXVsdFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMvc3RyaW5nL3trZXl9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2tleX1cIiwga2V5KTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiByZXF1aXJlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInJlcXVpcmVkXCJdID0gcmVxdWlyZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgeGRlZmF1bHQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJkZWZhdWx0XCJdID0geGRlZmF1bHQ7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicGF0Y2hcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICAgICAqIENyZWF0ZSBVUkwgYXR0cmlidXRlXG4gICAgICAgKlxuICAgICAgICogQ3JlYXRlIGEgVVJMIGF0dHJpYnV0ZS5cbiAgXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gcmVxdWlyZWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB4ZGVmYXVsdFxuICAgICAgICogQHBhcmFtIHtib29sZWFufSBhcnJheVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlVXJsPn1cbiAgICAgICAqL1xuICBhc3luYyBjcmVhdGVVcmxBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIHJlcXVpcmVkLCB4ZGVmYXVsdCwgYXJyYXkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL3VybFwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wia2V5XCJdID0ga2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicmVxdWlyZWRcIl0gPSByZXF1aXJlZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhcnJheSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImFycmF5XCJdID0gYXJyYXk7XG4gICAgfVxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkwodGhpcy5jbGllbnQuY29uZmlnLmVuZHBvaW50ICsgYXBpUGF0aCk7XG4gICAgY29uc3QgYXBpSGVhZGVycyA9IHtcbiAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfTtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY2FsbChcbiAgICAgIFwicG9zdFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogVXBkYXRlIFVSTCBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBVcGRhdGUgYW4gdXJsIGF0dHJpYnV0ZS4gQ2hhbmdpbmcgdGhlIGBkZWZhdWx0YCB2YWx1ZSB3aWxsIG5vdCB1cGRhdGUgYWxyZWFkeSBleGlzdGluZyBkb2N1bWVudHMuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlcXVpcmVkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30geGRlZmF1bHRcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkF0dHJpYnV0ZVVybD59XG4gICAgICAgKi9cbiAgYXN5bmMgdXBkYXRlVXJsQXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5LCByZXF1aXJlZCwgeGRlZmF1bHQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWlyZWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicmVxdWlyZWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHhkZWZhdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcInhkZWZhdWx0XCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vYXR0cmlidXRlcy91cmwve2tleX1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpLnJlcGxhY2UoXCJ7a2V5fVwiLCBrZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHJlcXVpcmVkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicmVxdWlyZWRcIl0gPSByZXF1aXJlZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ZGVmYXVsdCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRlZmF1bHRcIl0gPSB4ZGVmYXVsdDtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwYXRjaFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYXR0cmlidXRlXG4gICAqXG4gICAqIEdldCBhdHRyaWJ1dGUgYnkgSUQuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8e30+fVxuICAgKi9cbiAgYXN5bmMgZ2V0QXR0cmlidXRlKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL3trZXl9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2tleX1cIiwga2V5KTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogRGVsZXRlIGF0dHJpYnV0ZVxuICAgKlxuICAgKiBEZWxldGVzIGFuIGF0dHJpYnV0ZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx7fT59XG4gICAqL1xuICBhc3luYyBkZWxldGVBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2F0dHJpYnV0ZXMve2tleX1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpLnJlcGxhY2UoXCJ7a2V5fVwiLCBrZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImRlbGV0ZVwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogVXBkYXRlIHJlbGF0aW9uc2hpcCBhdHRyaWJ1dGVcbiAgICAgICAqXG4gICAgICAgKiBVcGRhdGUgcmVsYXRpb25zaGlwIGF0dHJpYnV0ZS4gW0xlYXJuIG1vcmUgYWJvdXQgcmVsYXRpb25zaGlwIGF0dHJpYnV0ZXNdKGh0dHBzOi8vYXBwd3JpdGUuaW8vZG9jcy9kYXRhYmFzZXMtcmVsYXRpb25zaGlwcyNyZWxhdGlvbnNoaXAtYXR0cmlidXRlcykuXG4gIFxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAgICAgKiBAcGFyYW0ge1JlbGF0aW9uTXV0YXRlfSBvbkRlbGV0ZVxuICAgICAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuQXR0cmlidXRlUmVsYXRpb25zaGlwPn1cbiAgICAgICAqL1xuICBhc3luYyB1cGRhdGVSZWxhdGlvbnNoaXBBdHRyaWJ1dGUoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXksIG9uRGVsZXRlKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9hdHRyaWJ1dGVzL3trZXl9L3JlbGF0aW9uc2hpcFwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntrZXl9XCIsIGtleSk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Ygb25EZWxldGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJvbkRlbGV0ZVwiXSA9IG9uRGVsZXRlO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBhdGNoXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIExpc3QgZG9jdW1lbnRzXG4gICAqXG4gICAqIEdldCBhIGxpc3Qgb2YgYWxsIHRoZSB1c2VyJiMwMzk7cyBkb2N1bWVudHMgaW4gYSBnaXZlbiBjb2xsZWN0aW9uLiBZb3UgY2FuIHVzZSB0aGUgcXVlcnkgcGFyYW1zIHRvIGZpbHRlciB5b3VyIHJlc3VsdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gcXVlcmllc1xuICAgKiBAdGhyb3dzIHtBcHB3cml0ZUV4Y2VwdGlvbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkRvY3VtZW50TGlzdDxEb2N1bWVudD4+fVxuICAgKi9cbiAgYXN5bmMgbGlzdERvY3VtZW50cyhkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIHF1ZXJpZXMpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2RvY3VtZW50c1wiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcXVlcmllcyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInF1ZXJpZXNcIl0gPSBxdWVyaWVzO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBDcmVhdGUgZG9jdW1lbnRcbiAgICpcbiAgICogQ3JlYXRlIGEgbmV3IERvY3VtZW50LiBCZWZvcmUgdXNpbmcgdGhpcyByb3V0ZSwgeW91IHNob3VsZCBjcmVhdGUgYSBuZXcgY29sbGVjdGlvbiByZXNvdXJjZSB1c2luZyBlaXRoZXIgYSBbc2VydmVyIGludGVncmF0aW9uXShodHRwczovL2FwcHdyaXRlLmlvL2RvY3Mvc2VydmVyL2RhdGFiYXNlcyNkYXRhYmFzZXNDcmVhdGVDb2xsZWN0aW9uKSBBUEkgb3IgZGlyZWN0bHkgZnJvbSB5b3VyIGRhdGFiYXNlIGNvbnNvbGUuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRvY3VtZW50SWRcbiAgICogQHBhcmFtIHtPbWl0PERvY3VtZW50LCBrZXlvZiBNb2RlbHMuRG9jdW1lbnQ+fSBkYXRhXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHBlcm1pc3Npb25zXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxEb2N1bWVudD59XG4gICAqL1xuICBhc3luYyBjcmVhdGVEb2N1bWVudChkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGRvY3VtZW50SWQsIGRhdGEsIHBlcm1pc3Npb25zKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50SWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZG9jdW1lbnRJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vZG9jdW1lbnRzXCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudElkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZG9jdW1lbnRJZFwiXSA9IGRvY3VtZW50SWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcImRhdGFcIl0gPSBkYXRhO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBlcm1pc3Npb25zICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicGVybWlzc2lvbnNcIl0gPSBwZXJtaXNzaW9ucztcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwb3N0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIEdldCBkb2N1bWVudFxuICAgKlxuICAgKiBHZXQgYSBkb2N1bWVudCBieSBpdHMgdW5pcXVlIElELiBUaGlzIGVuZHBvaW50IHJlc3BvbnNlIHJldHVybnMgYSBKU09OIG9iamVjdCB3aXRoIHRoZSBkb2N1bWVudCBkYXRhLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkb2N1bWVudElkXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHF1ZXJpZXNcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPERvY3VtZW50Pn1cbiAgICovXG4gIGFzeW5jIGdldERvY3VtZW50KGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwgZG9jdW1lbnRJZCwgcXVlcmllcykge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudElkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRvY3VtZW50SWRcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9kb2N1bWVudHMve2RvY3VtZW50SWR9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2RvY3VtZW50SWR9XCIsIGRvY3VtZW50SWQpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHF1ZXJpZXMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJxdWVyaWVzXCJdID0gcXVlcmllcztcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJnZXRcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlIGRvY3VtZW50XG4gICAqXG4gICAqIFVwZGF0ZSBhIGRvY3VtZW50IGJ5IGl0cyB1bmlxdWUgSUQuIFVzaW5nIHRoZSBwYXRjaCBtZXRob2QgeW91IGNhbiBwYXNzIG9ubHkgc3BlY2lmaWMgZmllbGRzIHRoYXQgd2lsbCBnZXQgdXBkYXRlZC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZG9jdW1lbnRJZFxuICAgKiBAcGFyYW0ge1BhcnRpYWw8T21pdDxEb2N1bWVudCwga2V5b2YgTW9kZWxzLkRvY3VtZW50Pj59IGRhdGFcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gcGVybWlzc2lvbnNcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPERvY3VtZW50Pn1cbiAgICovXG4gIGFzeW5jIHVwZGF0ZURvY3VtZW50KGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwgZG9jdW1lbnRJZCwgZGF0YSwgcGVybWlzc2lvbnMpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnRJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkb2N1bWVudElkXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vZG9jdW1lbnRzL3tkb2N1bWVudElkfVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntkb2N1bWVudElkfVwiLCBkb2N1bWVudElkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgaWYgKHR5cGVvZiBkYXRhICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiZGF0YVwiXSA9IGRhdGE7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGVybWlzc2lvbnMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJwZXJtaXNzaW9uc1wiXSA9IHBlcm1pc3Npb25zO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBhdGNoXCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIERlbGV0ZSBkb2N1bWVudFxuICAgKlxuICAgKiBEZWxldGUgYSBkb2N1bWVudCBieSBpdHMgdW5pcXVlIElELlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkb2N1bWVudElkXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx7fT59XG4gICAqL1xuICBhc3luYyBkZWxldGVEb2N1bWVudChkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGRvY3VtZW50SWQpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnRJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkb2N1bWVudElkXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vZG9jdW1lbnRzL3tkb2N1bWVudElkfVwiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCkucmVwbGFjZShcIntkb2N1bWVudElkfVwiLCBkb2N1bWVudElkKTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJkZWxldGVcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogTGlzdCBpbmRleGVzXG4gICAqXG4gICAqIExpc3QgaW5kZXhlcyBpbiB0aGUgY29sbGVjdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBxdWVyaWVzXG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuSW5kZXhMaXN0Pn1cbiAgICovXG4gIGFzeW5jIGxpc3RJbmRleGVzKGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwgcXVlcmllcykge1xuICAgIGlmICh0eXBlb2YgZGF0YWJhc2VJZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJkYXRhYmFzZUlkXCInKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjb2xsZWN0aW9uSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiY29sbGVjdGlvbklkXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vaW5kZXhlc1wiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcXVlcmllcyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcGF5bG9hZFtcInF1ZXJpZXNcIl0gPSBxdWVyaWVzO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgICAgICogQ3JlYXRlIGluZGV4XG4gICAgICAgKlxuICAgICAgICogQ3JlYXRlcyBhbiBpbmRleCBvbiB0aGUgYXR0cmlidXRlcyBsaXN0ZWQuIFlvdXIgaW5kZXggc2hvdWxkIGluY2x1ZGUgYWxsIHRoZSBhdHRyaWJ1dGVzIHlvdSB3aWxsIHF1ZXJ5IGluIGEgc2luZ2xlIHJlcXVlc3QuXG4gIEF0dHJpYnV0ZXMgY2FuIGJlIGBrZXlgLCBgZnVsbHRleHRgLCBhbmQgYHVuaXF1ZWAuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uSWRcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICAgICAqIEBwYXJhbSB7SW5kZXhUeXBlfSB0eXBlXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBhdHRyaWJ1dGVzXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBvcmRlcnNcbiAgICAgICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgICAgICogQHJldHVybnMge1Byb21pc2U8TW9kZWxzLkluZGV4Pn1cbiAgICAgICAqL1xuICBhc3luYyBjcmVhdGVJbmRleChkYXRhYmFzZUlkLCBjb2xsZWN0aW9uSWQsIGtleSwgdHlwZSwgYXR0cmlidXRlcywgb3JkZXJzKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHR5cGUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwidHlwZVwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXR0cmlidXRlcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJhdHRyaWJ1dGVzXCInKTtcbiAgICB9XG4gICAgY29uc3QgYXBpUGF0aCA9IFwiL2RhdGFiYXNlcy97ZGF0YWJhc2VJZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25JZH0vaW5kZXhlc1wiLnJlcGxhY2UoXCJ7ZGF0YWJhc2VJZH1cIiwgZGF0YWJhc2VJZCkucmVwbGFjZShcIntjb2xsZWN0aW9uSWR9XCIsIGNvbGxlY3Rpb25JZCk7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wia2V5XCJdID0ga2V5O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHR5cGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJ0eXBlXCJdID0gdHlwZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wiYXR0cmlidXRlc1wiXSA9IGF0dHJpYnV0ZXM7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb3JkZXJzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wib3JkZXJzXCJdID0gb3JkZXJzO1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogR2V0IGluZGV4XG4gICAqXG4gICAqIEdldCBpbmRleCBieSBJRC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlSWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25JZFxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxNb2RlbHMuSW5kZXg+fVxuICAgKi9cbiAgYXN5bmMgZ2V0SW5kZXgoZGF0YWJhc2VJZCwgY29sbGVjdGlvbklkLCBrZXkpIHtcbiAgICBpZiAodHlwZW9mIGRhdGFiYXNlSWQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwiZGF0YWJhc2VJZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29sbGVjdGlvbklkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImNvbGxlY3Rpb25JZFwiJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2Yga2V5ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImtleVwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9kYXRhYmFzZXMve2RhdGFiYXNlSWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uSWR9L2luZGV4ZXMve2tleX1cIi5yZXBsYWNlKFwie2RhdGFiYXNlSWR9XCIsIGRhdGFiYXNlSWQpLnJlcGxhY2UoXCJ7Y29sbGVjdGlvbklkfVwiLCBjb2xsZWN0aW9uSWQpLnJlcGxhY2UoXCJ7a2V5fVwiLCBrZXkpO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcImdldFwiLFxuICAgICAgdXJpLFxuICAgICAgYXBpSGVhZGVycyxcbiAgICAgIHBheWxvYWRcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgaW5kZXhcbiAgICpcbiAgICogRGVsZXRlIGFuIGluZGV4LlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YWJhc2VJZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvbklkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHt9Pn1cbiAgICovXG4gIGFzeW5jIGRlbGV0ZUluZGV4KGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25JZCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZUlkID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgQXBwd3JpdGVFeGNlcHRpb24oJ01pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBcImRhdGFiYXNlSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbGxlY3Rpb25JZCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJjb2xsZWN0aW9uSWRcIicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJrZXlcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZGF0YWJhc2VzL3tkYXRhYmFzZUlkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbklkfS9pbmRleGVzL3trZXl9XCIucmVwbGFjZShcIntkYXRhYmFzZUlkfVwiLCBkYXRhYmFzZUlkKS5yZXBsYWNlKFwie2NvbGxlY3Rpb25JZH1cIiwgY29sbGVjdGlvbklkKS5yZXBsYWNlKFwie2tleX1cIiwga2V5KTtcbiAgICBjb25zdCBwYXlsb2FkID0ge307XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJkZWxldGVcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgRGF0YWJhc2VzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXQuanMubWFwXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhYmFzZXMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/databases.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/functions.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/functions.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Functions: () => (/* binding */ Functions)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/functions.ts\nvar Functions = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List functions\n   *\n   * Get a list of all the project&#039;s functions. You can use the query params to filter your results.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.FunctionList>}\n   */\n  async list(queries, search) {\n    const apiPath = \"/functions\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create function\n   *\n   * Create a new function. You can pass a list of [permissions](https://appwrite.io/docs/permissions) to allow different project users or team with access to execute the function using the client API.\n   *\n   * @param {string} functionId\n   * @param {string} name\n   * @param {Runtime} runtime\n   * @param {string[]} execute\n   * @param {string[]} events\n   * @param {string} schedule\n   * @param {number} timeout\n   * @param {boolean} enabled\n   * @param {boolean} logging\n   * @param {string} entrypoint\n   * @param {string} commands\n   * @param {string} installationId\n   * @param {string} providerRepositoryId\n   * @param {string} providerBranch\n   * @param {boolean} providerSilentMode\n   * @param {string} providerRootDirectory\n   * @param {string} templateRepository\n   * @param {string} templateOwner\n   * @param {string} templateRootDirectory\n   * @param {string} templateBranch\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Function>}\n   */\n  async create(functionId, name, runtime, execute, events, schedule, timeout, enabled, logging, entrypoint, commands, installationId, providerRepositoryId, providerBranch, providerSilentMode, providerRootDirectory, templateRepository, templateOwner, templateRootDirectory, templateBranch) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    if (typeof runtime === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"runtime\"');\n    }\n    const apiPath = \"/functions\";\n    const payload = {};\n    if (typeof functionId !== \"undefined\") {\n      payload[\"functionId\"] = functionId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof runtime !== \"undefined\") {\n      payload[\"runtime\"] = runtime;\n    }\n    if (typeof execute !== \"undefined\") {\n      payload[\"execute\"] = execute;\n    }\n    if (typeof events !== \"undefined\") {\n      payload[\"events\"] = events;\n    }\n    if (typeof schedule !== \"undefined\") {\n      payload[\"schedule\"] = schedule;\n    }\n    if (typeof timeout !== \"undefined\") {\n      payload[\"timeout\"] = timeout;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof logging !== \"undefined\") {\n      payload[\"logging\"] = logging;\n    }\n    if (typeof entrypoint !== \"undefined\") {\n      payload[\"entrypoint\"] = entrypoint;\n    }\n    if (typeof commands !== \"undefined\") {\n      payload[\"commands\"] = commands;\n    }\n    if (typeof installationId !== \"undefined\") {\n      payload[\"installationId\"] = installationId;\n    }\n    if (typeof providerRepositoryId !== \"undefined\") {\n      payload[\"providerRepositoryId\"] = providerRepositoryId;\n    }\n    if (typeof providerBranch !== \"undefined\") {\n      payload[\"providerBranch\"] = providerBranch;\n    }\n    if (typeof providerSilentMode !== \"undefined\") {\n      payload[\"providerSilentMode\"] = providerSilentMode;\n    }\n    if (typeof providerRootDirectory !== \"undefined\") {\n      payload[\"providerRootDirectory\"] = providerRootDirectory;\n    }\n    if (typeof templateRepository !== \"undefined\") {\n      payload[\"templateRepository\"] = templateRepository;\n    }\n    if (typeof templateOwner !== \"undefined\") {\n      payload[\"templateOwner\"] = templateOwner;\n    }\n    if (typeof templateRootDirectory !== \"undefined\") {\n      payload[\"templateRootDirectory\"] = templateRootDirectory;\n    }\n    if (typeof templateBranch !== \"undefined\") {\n      payload[\"templateBranch\"] = templateBranch;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List runtimes\n   *\n   * Get a list of all runtimes that are currently active on your instance.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.RuntimeList>}\n   */\n  async listRuntimes() {\n    const apiPath = \"/functions/runtimes\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get function\n   *\n   * Get a function by its unique ID.\n   *\n   * @param {string} functionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Function>}\n   */\n  async get(functionId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update function\n   *\n   * Update function by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} name\n   * @param {Runtime} runtime\n   * @param {string[]} execute\n   * @param {string[]} events\n   * @param {string} schedule\n   * @param {number} timeout\n   * @param {boolean} enabled\n   * @param {boolean} logging\n   * @param {string} entrypoint\n   * @param {string} commands\n   * @param {string} installationId\n   * @param {string} providerRepositoryId\n   * @param {string} providerBranch\n   * @param {boolean} providerSilentMode\n   * @param {string} providerRootDirectory\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Function>}\n   */\n  async update(functionId, name, runtime, execute, events, schedule, timeout, enabled, logging, entrypoint, commands, installationId, providerRepositoryId, providerBranch, providerSilentMode, providerRootDirectory) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/functions/{functionId}\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof runtime !== \"undefined\") {\n      payload[\"runtime\"] = runtime;\n    }\n    if (typeof execute !== \"undefined\") {\n      payload[\"execute\"] = execute;\n    }\n    if (typeof events !== \"undefined\") {\n      payload[\"events\"] = events;\n    }\n    if (typeof schedule !== \"undefined\") {\n      payload[\"schedule\"] = schedule;\n    }\n    if (typeof timeout !== \"undefined\") {\n      payload[\"timeout\"] = timeout;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof logging !== \"undefined\") {\n      payload[\"logging\"] = logging;\n    }\n    if (typeof entrypoint !== \"undefined\") {\n      payload[\"entrypoint\"] = entrypoint;\n    }\n    if (typeof commands !== \"undefined\") {\n      payload[\"commands\"] = commands;\n    }\n    if (typeof installationId !== \"undefined\") {\n      payload[\"installationId\"] = installationId;\n    }\n    if (typeof providerRepositoryId !== \"undefined\") {\n      payload[\"providerRepositoryId\"] = providerRepositoryId;\n    }\n    if (typeof providerBranch !== \"undefined\") {\n      payload[\"providerBranch\"] = providerBranch;\n    }\n    if (typeof providerSilentMode !== \"undefined\") {\n      payload[\"providerSilentMode\"] = providerSilentMode;\n    }\n    if (typeof providerRootDirectory !== \"undefined\") {\n      payload[\"providerRootDirectory\"] = providerRootDirectory;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete function\n   *\n   * Delete a function by its unique ID.\n   *\n   * @param {string} functionId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async delete(functionId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List deployments\n   *\n   * Get a list of all the project&#039;s code deployments. You can use the query params to filter your results.\n   *\n   * @param {string} functionId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.DeploymentList>}\n   */\n  async listDeployments(functionId, queries, search) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create deployment\n       *\n       * Create a new function code deployment. Use this endpoint to upload a new version of your code function. To execute your newly uploaded code, you&#039;ll need to update the function&#039;s deployment to use your new deployment UID.\n  \n  This endpoint accepts a tar.gz file compressed with your code. Make sure to include any dependencies your code has within the compressed file. You can learn more about code packaging in the [Appwrite Cloud Functions tutorial](https://appwrite.io/docs/functions).\n  \n  Use the &quot;command&quot; param to set the entrypoint used to execute your code.\n       *\n       * @param {string} functionId\n       * @param {File} code\n       * @param {boolean} activate\n       * @param {string} entrypoint\n       * @param {string} commands\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Deployment>}\n       */\n  async createDeployment(functionId, code, activate, entrypoint, commands, onProgress = (progress) => {\n  }) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof code === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"code\"');\n    }\n    if (typeof activate === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"activate\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof entrypoint !== \"undefined\") {\n      payload[\"entrypoint\"] = entrypoint;\n    }\n    if (typeof commands !== \"undefined\") {\n      payload[\"commands\"] = commands;\n    }\n    if (typeof code !== \"undefined\") {\n      payload[\"code\"] = code;\n    }\n    if (typeof activate !== \"undefined\") {\n      payload[\"activate\"] = activate;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"multipart/form-data\"\n    };\n    return await this.client.chunkedUpload(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload,\n      onProgress\n    );\n  }\n  /**\n   * Get deployment\n   *\n   * Get a code deployment by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} deploymentId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Deployment>}\n   */\n  async getDeployment(functionId, deploymentId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof deploymentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"deploymentId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments/{deploymentId}\".replace(\"{functionId}\", functionId).replace(\"{deploymentId}\", deploymentId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update function deployment\n   *\n   * Update the function code deployment ID using the unique function ID. Use this endpoint to switch the code deployment that should be executed by the execution endpoint.\n   *\n   * @param {string} functionId\n   * @param {string} deploymentId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Function>}\n   */\n  async updateDeployment(functionId, deploymentId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof deploymentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"deploymentId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments/{deploymentId}\".replace(\"{functionId}\", functionId).replace(\"{deploymentId}\", deploymentId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete deployment\n   *\n   * Delete a code deployment by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} deploymentId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteDeployment(functionId, deploymentId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof deploymentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"deploymentId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments/{deploymentId}\".replace(\"{functionId}\", functionId).replace(\"{deploymentId}\", deploymentId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create build\n   *\n   * Create a new build for an Appwrite Function deployment. This endpoint can be used to retry a failed build.\n   *\n   * @param {string} functionId\n   * @param {string} deploymentId\n   * @param {string} buildId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async createBuild(functionId, deploymentId, buildId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof deploymentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"deploymentId\"');\n    }\n    if (typeof buildId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"buildId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments/{deploymentId}/builds/{buildId}\".replace(\"{functionId}\", functionId).replace(\"{deploymentId}\", deploymentId).replace(\"{buildId}\", buildId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Download Deployment\n   *\n   * Get a Deployment&#039;s contents by its unique ID. This endpoint supports range requests for partial or streaming file download.\n   *\n   * @param {string} functionId\n   * @param {string} deploymentId\n   * @throws {AppwriteException}\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async downloadDeployment(functionId, deploymentId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof deploymentId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"deploymentId\"');\n    }\n    const apiPath = \"/functions/{functionId}/deployments/{deploymentId}/download\".replace(\"{functionId}\", functionId).replace(\"{deploymentId}\", deploymentId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n   * List executions\n   *\n   * Get a list of all the current user function execution logs. You can use the query params to filter your results.\n   *\n   * @param {string} functionId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.ExecutionList>}\n   */\n  async listExecutions(functionId, queries, search) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}/executions\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create execution\n   *\n   * Trigger a function execution. The returned object will return you the current execution status. You can ping the `Get Execution` endpoint to get updates on the current execution status. Once this endpoint is called, your function execution process will start asynchronously.\n   *\n   * @param {string} functionId\n   * @param {string} body\n   * @param {boolean} async\n   * @param {string} xpath\n   * @param {ExecutionMethod} method\n   * @param {object} headers\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Execution>}\n   */\n  async createExecution(functionId, body, async, xpath, method, headers) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}/executions\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof body !== \"undefined\") {\n      payload[\"body\"] = body;\n    }\n    if (typeof async !== \"undefined\") {\n      payload[\"async\"] = async;\n    }\n    if (typeof xpath !== \"undefined\") {\n      payload[\"path\"] = xpath;\n    }\n    if (typeof method !== \"undefined\") {\n      payload[\"method\"] = method;\n    }\n    if (typeof headers !== \"undefined\") {\n      payload[\"headers\"] = headers;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get execution\n   *\n   * Get a function execution log by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} executionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Execution>}\n   */\n  async getExecution(functionId, executionId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof executionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"executionId\"');\n    }\n    const apiPath = \"/functions/{functionId}/executions/{executionId}\".replace(\"{functionId}\", functionId).replace(\"{executionId}\", executionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List variables\n   *\n   * Get a list of all variables of a specific function.\n   *\n   * @param {string} functionId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.VariableList>}\n   */\n  async listVariables(functionId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    const apiPath = \"/functions/{functionId}/variables\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create variable\n   *\n   * Create a new function environment variable. These variables can be accessed in the function at runtime as environment variables.\n   *\n   * @param {string} functionId\n   * @param {string} key\n   * @param {string} value\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Variable>}\n   */\n  async createVariable(functionId, key, value) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    if (typeof value === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"value\"');\n    }\n    const apiPath = \"/functions/{functionId}/variables\".replace(\"{functionId}\", functionId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof value !== \"undefined\") {\n      payload[\"value\"] = value;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get variable\n   *\n   * Get a variable by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} variableId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Variable>}\n   */\n  async getVariable(functionId, variableId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof variableId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"variableId\"');\n    }\n    const apiPath = \"/functions/{functionId}/variables/{variableId}\".replace(\"{functionId}\", functionId).replace(\"{variableId}\", variableId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update variable\n   *\n   * Update variable by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} variableId\n   * @param {string} key\n   * @param {string} value\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Variable>}\n   */\n  async updateVariable(functionId, variableId, key, value) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof variableId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"variableId\"');\n    }\n    if (typeof key === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"key\"');\n    }\n    const apiPath = \"/functions/{functionId}/variables/{variableId}\".replace(\"{functionId}\", functionId).replace(\"{variableId}\", variableId);\n    const payload = {};\n    if (typeof key !== \"undefined\") {\n      payload[\"key\"] = key;\n    }\n    if (typeof value !== \"undefined\") {\n      payload[\"value\"] = value;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete variable\n   *\n   * Delete a variable by its unique ID.\n   *\n   * @param {string} functionId\n   * @param {string} variableId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteVariable(functionId, variableId) {\n    if (typeof functionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"functionId\"');\n    }\n    if (typeof variableId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"variableId\"');\n    }\n    const apiPath = \"/functions/{functionId}/variables/{variableId}\".replace(\"{functionId}\", functionId).replace(\"{variableId}\", variableId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=functions.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/functions.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/graphql.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/graphql.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graphql: () => (/* binding */ Graphql)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/graphql.ts\nvar Graphql = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * GraphQL endpoint\n   *\n   * Execute a GraphQL mutation.\n   *\n   * @param {object} query\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async query(query) {\n    if (typeof query === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"query\"');\n    }\n    const apiPath = \"/graphql\";\n    const payload = {};\n    if (typeof query !== \"undefined\") {\n      payload[\"query\"] = query;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"x-sdk-graphql\": \"true\",\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * GraphQL endpoint\n   *\n   * Execute a GraphQL mutation.\n   *\n   * @param {object} query\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async mutation(query) {\n    if (typeof query === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"query\"');\n    }\n    const apiPath = \"/graphql/mutation\";\n    const payload = {};\n    if (typeof query !== \"undefined\") {\n      payload[\"query\"] = query;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"x-sdk-graphql\": \"true\",\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=graphql.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtYXBwd3JpdGUvZGlzdC9zZXJ2aWNlcy9ncmFwaHFsLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYztBQUNkLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQjtBQUNuQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWFwcHdyaXRlL2Rpc3Qvc2VydmljZXMvZ3JhcGhxbC5tanM/Y2UyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHB3cml0ZUV4Y2VwdGlvbiB9IGZyb20gJy4uL2NsaWVudC5tanMnO1xuXG4vLyBzcmMvc2VydmljZXMvZ3JhcGhxbC50c1xudmFyIEdyYXBocWwgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICB9XG4gIC8qKlxuICAgKiBHcmFwaFFMIGVuZHBvaW50XG4gICAqXG4gICAqIEV4ZWN1dGUgYSBHcmFwaFFMIG11dGF0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gcXVlcnlcbiAgICogQHRocm93cyB7QXBwd3JpdGVFeGNlcHRpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHt9Pn1cbiAgICovXG4gIGFzeW5jIHF1ZXJ5KHF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdGhyb3cgbmV3IEFwcHdyaXRlRXhjZXB0aW9uKCdNaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlcjogXCJxdWVyeVwiJyk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVBhdGggPSBcIi9ncmFwaHFsXCI7XG4gICAgY29uc3QgcGF5bG9hZCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcXVlcnkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHBheWxvYWRbXCJxdWVyeVwiXSA9IHF1ZXJ5O1xuICAgIH1cbiAgICBjb25zdCB1cmkgPSBuZXcgVVJMKHRoaXMuY2xpZW50LmNvbmZpZy5lbmRwb2ludCArIGFwaVBhdGgpO1xuICAgIGNvbnN0IGFwaUhlYWRlcnMgPSB7XG4gICAgICBcIngtc2RrLWdyYXBocWxcIjogXCJ0cnVlXCIsXG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH07XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuY2xpZW50LmNhbGwoXG4gICAgICBcInBvc3RcIixcbiAgICAgIHVyaSxcbiAgICAgIGFwaUhlYWRlcnMsXG4gICAgICBwYXlsb2FkXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogR3JhcGhRTCBlbmRwb2ludFxuICAgKlxuICAgKiBFeGVjdXRlIGEgR3JhcGhRTCBtdXRhdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHF1ZXJ5XG4gICAqIEB0aHJvd3Mge0FwcHdyaXRlRXhjZXB0aW9ufVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx7fT59XG4gICAqL1xuICBhc3luYyBtdXRhdGlvbihxdWVyeSkge1xuICAgIGlmICh0eXBlb2YgcXVlcnkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBBcHB3cml0ZUV4Y2VwdGlvbignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IFwicXVlcnlcIicpO1xuICAgIH1cbiAgICBjb25zdCBhcGlQYXRoID0gXCIvZ3JhcGhxbC9tdXRhdGlvblwiO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7fTtcbiAgICBpZiAodHlwZW9mIHF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBwYXlsb2FkW1wicXVlcnlcIl0gPSBxdWVyeTtcbiAgICB9XG4gICAgY29uc3QgdXJpID0gbmV3IFVSTCh0aGlzLmNsaWVudC5jb25maWcuZW5kcG9pbnQgKyBhcGlQYXRoKTtcbiAgICBjb25zdCBhcGlIZWFkZXJzID0ge1xuICAgICAgXCJ4LXNkay1ncmFwaHFsXCI6IFwidHJ1ZVwiLFxuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNsaWVudC5jYWxsKFxuICAgICAgXCJwb3N0XCIsXG4gICAgICB1cmksXG4gICAgICBhcGlIZWFkZXJzLFxuICAgICAgcGF5bG9hZFxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IEdyYXBocWwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dC5qcy5tYXBcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYXBocWwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/graphql.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/health.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/health.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Health: () => (/* binding */ Health)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/health.ts\nvar Health = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * Get HTTP\n   *\n   * Check the Appwrite HTTP server is up and responsive.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async get() {\n    const apiPath = \"/health\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get antivirus\n   *\n   * Check the Appwrite Antivirus server is up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthAntivirus>}\n   */\n  async getAntivirus() {\n    const apiPath = \"/health/anti-virus\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get cache\n   *\n   * Check the Appwrite in-memory cache servers are up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getCache() {\n    const apiPath = \"/health/cache\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get the SSL certificate for a domain\n   *\n   * Get the SSL certificate for a domain\n   *\n   * @param {string} domain\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthCertificate>}\n   */\n  async getCertificate(domain) {\n    const apiPath = \"/health/certificate\";\n    const payload = {};\n    if (typeof domain !== \"undefined\") {\n      payload[\"domain\"] = domain;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get DB\n   *\n   * Check the Appwrite database servers are up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getDB() {\n    const apiPath = \"/health/db\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get pubsub\n   *\n   * Check the Appwrite pub-sub servers are up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getPubSub() {\n    const apiPath = \"/health/pubsub\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get queue\n   *\n   * Check the Appwrite queue messaging servers are up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getQueue() {\n    const apiPath = \"/health/queue\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get builds queue\n   *\n   * Get the number of builds that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueBuilds(threshold) {\n    const apiPath = \"/health/queue/builds\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get certificates queue\n   *\n   * Get the number of certificates that are waiting to be issued against [Letsencrypt](https://letsencrypt.org/) in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueCertificates(threshold) {\n    const apiPath = \"/health/queue/certificates\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get databases queue\n   *\n   * Get the number of database changes that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {string} name\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueDatabases(name, threshold) {\n    const apiPath = \"/health/queue/databases\";\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get deletes queue\n   *\n   * Get the number of background destructive changes that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueDeletes(threshold) {\n    const apiPath = \"/health/queue/deletes\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Get number of failed queue jobs\n       *\n       * Returns the amount of failed jobs in a given queue.\n  \n       *\n       * @param {Name} name\n       * @param {number} threshold\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.HealthQueue>}\n       */\n  async getFailedJobs(name, threshold) {\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/health/queue/failed/{name}\".replace(\"{name}\", name);\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get functions queue\n   *\n   * Get the number of function executions that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueFunctions(threshold) {\n    const apiPath = \"/health/queue/functions\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get logs queue\n   *\n   * Get the number of logs that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueLogs(threshold) {\n    const apiPath = \"/health/queue/logs\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get mails queue\n   *\n   * Get the number of mails that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueMails(threshold) {\n    const apiPath = \"/health/queue/mails\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get messaging queue\n   *\n   * Get the number of messages that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueMessaging(threshold) {\n    const apiPath = \"/health/queue/messaging\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get migrations queue\n   *\n   * Get the number of migrations that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueMigrations(threshold) {\n    const apiPath = \"/health/queue/migrations\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get usage queue\n   *\n   * Get the number of metrics that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueUsage(threshold) {\n    const apiPath = \"/health/queue/usage\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get usage dump queue\n   *\n   * Get the number of projects containing metrics that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueUsageDump(threshold) {\n    const apiPath = \"/health/queue/usage-dump\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get webhooks queue\n   *\n   * Get the number of webhooks that are waiting to be processed in the Appwrite internal queue server.\n   *\n   * @param {number} threshold\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthQueue>}\n   */\n  async getQueueWebhooks(threshold) {\n    const apiPath = \"/health/queue/webhooks\";\n    const payload = {};\n    if (typeof threshold !== \"undefined\") {\n      payload[\"threshold\"] = threshold;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get storage\n   *\n   * Check the Appwrite storage device is up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getStorage() {\n    const apiPath = \"/health/storage\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get local storage\n   *\n   * Check the Appwrite local storage device is up and connection is successful.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthStatus>}\n   */\n  async getStorageLocal() {\n    const apiPath = \"/health/storage/local\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get time\n   *\n   * Check the Appwrite server time is synced with Google remote NTP server. We use this technology to smoothly handle leap seconds with no disruptive events. The [Network Time Protocol](https://en.wikipedia.org/wiki/Network_Time_Protocol) (NTP) is used by hundreds of millions of computers and devices to synchronize their clocks over the Internet. If your computer sets its own clock, it likely uses NTP.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.HealthTime>}\n   */\n  async getTime() {\n    const apiPath = \"/health/time\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=health.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/health.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/locale.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/locale.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Locale: () => (/* binding */ Locale)\n/* harmony export */ });\n// src/services/locale.ts\nvar Locale = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n       * Get user locale\n       *\n       * Get the current user location based on IP. Returns an object with user country code, country name, continent name, continent code, ip address and suggested currency. You can use the locale header to get the data in a supported language.\n  \n  ([IP Geolocation by DB-IP](https://db-ip.com))\n       *\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Locale>}\n       */\n  async get() {\n    const apiPath = \"/locale\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List Locale Codes\n   *\n   * List of all locale codes in [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LocaleCodeList>}\n   */\n  async listCodes() {\n    const apiPath = \"/locale/codes\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List continents\n   *\n   * List of all continents. You can use the locale header to get the data in a supported language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.ContinentList>}\n   */\n  async listContinents() {\n    const apiPath = \"/locale/continents\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List countries\n   *\n   * List of all countries. You can use the locale header to get the data in a supported language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.CountryList>}\n   */\n  async listCountries() {\n    const apiPath = \"/locale/countries\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List EU countries\n   *\n   * List of all countries that are currently members of the EU. You can use the locale header to get the data in a supported language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.CountryList>}\n   */\n  async listCountriesEU() {\n    const apiPath = \"/locale/countries/eu\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List countries phone codes\n   *\n   * List of all countries phone codes. You can use the locale header to get the data in a supported language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.PhoneList>}\n   */\n  async listCountriesPhones() {\n    const apiPath = \"/locale/countries/phones\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List currencies\n   *\n   * List of all currencies, including currency symbol, name, plural, and decimal digits for all major and minor currencies. You can use the locale header to get the data in a supported language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.CurrencyList>}\n   */\n  async listCurrencies() {\n    const apiPath = \"/locale/currencies\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List languages\n   *\n   * List of all languages classified by ISO 639-1 including 2-letter code, name in English, and name in the respective language.\n   *\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LanguageList>}\n   */\n  async listLanguages() {\n    const apiPath = \"/locale/languages\";\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=locale.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/locale.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/messaging.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/messaging.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messaging: () => (/* binding */ Messaging)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/messaging.ts\nvar Messaging = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List messages\n   *\n   * Get a list of all messages from the current Appwrite project.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MessageList>}\n   */\n  async listMessages(queries, search) {\n    const apiPath = \"/messaging/messages\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create email\n   *\n   * Create a new email message.\n   *\n   * @param {string} messageId\n   * @param {string} subject\n   * @param {string} content\n   * @param {string[]} topics\n   * @param {string[]} users\n   * @param {string[]} targets\n   * @param {string[]} cc\n   * @param {string[]} bcc\n   * @param {string[]} attachments\n   * @param {boolean} draft\n   * @param {boolean} html\n   * @param {string} scheduledAt\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Message>}\n   */\n  async createEmail(messageId, subject, content, topics, users, targets, cc, bcc, attachments, draft, html, scheduledAt) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    if (typeof subject === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"subject\"');\n    }\n    if (typeof content === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"content\"');\n    }\n    const apiPath = \"/messaging/messages/email\";\n    const payload = {};\n    if (typeof messageId !== \"undefined\") {\n      payload[\"messageId\"] = messageId;\n    }\n    if (typeof subject !== \"undefined\") {\n      payload[\"subject\"] = subject;\n    }\n    if (typeof content !== \"undefined\") {\n      payload[\"content\"] = content;\n    }\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof cc !== \"undefined\") {\n      payload[\"cc\"] = cc;\n    }\n    if (typeof bcc !== \"undefined\") {\n      payload[\"bcc\"] = bcc;\n    }\n    if (typeof attachments !== \"undefined\") {\n      payload[\"attachments\"] = attachments;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof html !== \"undefined\") {\n      payload[\"html\"] = html;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update email\n       *\n       * Update an email message by its unique ID.\n  \n       *\n       * @param {string} messageId\n       * @param {string[]} topics\n       * @param {string[]} users\n       * @param {string[]} targets\n       * @param {string} subject\n       * @param {string} content\n       * @param {boolean} draft\n       * @param {boolean} html\n       * @param {string[]} cc\n       * @param {string[]} bcc\n       * @param {string} scheduledAt\n       * @param {string[]} attachments\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Message>}\n       */\n  async updateEmail(messageId, topics, users, targets, subject, content, draft, html, cc, bcc, scheduledAt, attachments) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/email/{messageId}\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof subject !== \"undefined\") {\n      payload[\"subject\"] = subject;\n    }\n    if (typeof content !== \"undefined\") {\n      payload[\"content\"] = content;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof html !== \"undefined\") {\n      payload[\"html\"] = html;\n    }\n    if (typeof cc !== \"undefined\") {\n      payload[\"cc\"] = cc;\n    }\n    if (typeof bcc !== \"undefined\") {\n      payload[\"bcc\"] = bcc;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    if (typeof attachments !== \"undefined\") {\n      payload[\"attachments\"] = attachments;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create push notification\n   *\n   * Create a new push notification.\n   *\n   * @param {string} messageId\n   * @param {string} title\n   * @param {string} body\n   * @param {string[]} topics\n   * @param {string[]} users\n   * @param {string[]} targets\n   * @param {object} data\n   * @param {string} action\n   * @param {string} image\n   * @param {string} icon\n   * @param {string} sound\n   * @param {string} color\n   * @param {string} tag\n   * @param {string} badge\n   * @param {boolean} draft\n   * @param {string} scheduledAt\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Message>}\n   */\n  async createPush(messageId, title, body, topics, users, targets, data, action, image, icon, sound, color, tag, badge, draft, scheduledAt) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    if (typeof title === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"title\"');\n    }\n    if (typeof body === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"body\"');\n    }\n    const apiPath = \"/messaging/messages/push\";\n    const payload = {};\n    if (typeof messageId !== \"undefined\") {\n      payload[\"messageId\"] = messageId;\n    }\n    if (typeof title !== \"undefined\") {\n      payload[\"title\"] = title;\n    }\n    if (typeof body !== \"undefined\") {\n      payload[\"body\"] = body;\n    }\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof data !== \"undefined\") {\n      payload[\"data\"] = data;\n    }\n    if (typeof action !== \"undefined\") {\n      payload[\"action\"] = action;\n    }\n    if (typeof image !== \"undefined\") {\n      payload[\"image\"] = image;\n    }\n    if (typeof icon !== \"undefined\") {\n      payload[\"icon\"] = icon;\n    }\n    if (typeof sound !== \"undefined\") {\n      payload[\"sound\"] = sound;\n    }\n    if (typeof color !== \"undefined\") {\n      payload[\"color\"] = color;\n    }\n    if (typeof tag !== \"undefined\") {\n      payload[\"tag\"] = tag;\n    }\n    if (typeof badge !== \"undefined\") {\n      payload[\"badge\"] = badge;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update push notification\n       *\n       * Update a push notification by its unique ID.\n  \n       *\n       * @param {string} messageId\n       * @param {string[]} topics\n       * @param {string[]} users\n       * @param {string[]} targets\n       * @param {string} title\n       * @param {string} body\n       * @param {object} data\n       * @param {string} action\n       * @param {string} image\n       * @param {string} icon\n       * @param {string} sound\n       * @param {string} color\n       * @param {string} tag\n       * @param {number} badge\n       * @param {boolean} draft\n       * @param {string} scheduledAt\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Message>}\n       */\n  async updatePush(messageId, topics, users, targets, title, body, data, action, image, icon, sound, color, tag, badge, draft, scheduledAt) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/push/{messageId}\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof title !== \"undefined\") {\n      payload[\"title\"] = title;\n    }\n    if (typeof body !== \"undefined\") {\n      payload[\"body\"] = body;\n    }\n    if (typeof data !== \"undefined\") {\n      payload[\"data\"] = data;\n    }\n    if (typeof action !== \"undefined\") {\n      payload[\"action\"] = action;\n    }\n    if (typeof image !== \"undefined\") {\n      payload[\"image\"] = image;\n    }\n    if (typeof icon !== \"undefined\") {\n      payload[\"icon\"] = icon;\n    }\n    if (typeof sound !== \"undefined\") {\n      payload[\"sound\"] = sound;\n    }\n    if (typeof color !== \"undefined\") {\n      payload[\"color\"] = color;\n    }\n    if (typeof tag !== \"undefined\") {\n      payload[\"tag\"] = tag;\n    }\n    if (typeof badge !== \"undefined\") {\n      payload[\"badge\"] = badge;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create SMS\n   *\n   * Create a new SMS message.\n   *\n   * @param {string} messageId\n   * @param {string} content\n   * @param {string[]} topics\n   * @param {string[]} users\n   * @param {string[]} targets\n   * @param {boolean} draft\n   * @param {string} scheduledAt\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Message>}\n   */\n  async createSms(messageId, content, topics, users, targets, draft, scheduledAt) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    if (typeof content === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"content\"');\n    }\n    const apiPath = \"/messaging/messages/sms\";\n    const payload = {};\n    if (typeof messageId !== \"undefined\") {\n      payload[\"messageId\"] = messageId;\n    }\n    if (typeof content !== \"undefined\") {\n      payload[\"content\"] = content;\n    }\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update SMS\n       *\n       * Update an email message by its unique ID.\n  \n       *\n       * @param {string} messageId\n       * @param {string[]} topics\n       * @param {string[]} users\n       * @param {string[]} targets\n       * @param {string} content\n       * @param {boolean} draft\n       * @param {string} scheduledAt\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Message>}\n       */\n  async updateSms(messageId, topics, users, targets, content, draft, scheduledAt) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/sms/{messageId}\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    if (typeof topics !== \"undefined\") {\n      payload[\"topics\"] = topics;\n    }\n    if (typeof users !== \"undefined\") {\n      payload[\"users\"] = users;\n    }\n    if (typeof targets !== \"undefined\") {\n      payload[\"targets\"] = targets;\n    }\n    if (typeof content !== \"undefined\") {\n      payload[\"content\"] = content;\n    }\n    if (typeof draft !== \"undefined\") {\n      payload[\"draft\"] = draft;\n    }\n    if (typeof scheduledAt !== \"undefined\") {\n      payload[\"scheduledAt\"] = scheduledAt;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Get message\n       *\n       * Get a message by its unique ID.\n  \n       *\n       * @param {string} messageId\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Message>}\n       */\n  async getMessage(messageId) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/{messageId}\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete message\n   *\n   * Delete a message. If the message is not a draft or scheduled, but has been sent, this will not recall the message.\n   *\n   * @param {string} messageId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async delete(messageId) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/{messageId}\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List message logs\n   *\n   * Get the message activity logs listed by its unique ID.\n   *\n   * @param {string} messageId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listMessageLogs(messageId, queries) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/{messageId}/logs\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List message targets\n   *\n   * Get a list of the targets associated with a message.\n   *\n   * @param {string} messageId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.TargetList>}\n   */\n  async listTargets(messageId, queries) {\n    if (typeof messageId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"messageId\"');\n    }\n    const apiPath = \"/messaging/messages/{messageId}/targets\".replace(\"{messageId}\", messageId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List providers\n   *\n   * Get a list of all providers from the current Appwrite project.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.ProviderList>}\n   */\n  async listProviders(queries, search) {\n    const apiPath = \"/messaging/providers\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create APNS provider\n   *\n   * Create a new Apple Push Notification service provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} authKey\n   * @param {string} authKeyId\n   * @param {string} teamId\n   * @param {string} bundleId\n   * @param {boolean} sandbox\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createApnsProvider(providerId, name, authKey, authKeyId, teamId, bundleId, sandbox, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/apns\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof authKey !== \"undefined\") {\n      payload[\"authKey\"] = authKey;\n    }\n    if (typeof authKeyId !== \"undefined\") {\n      payload[\"authKeyId\"] = authKeyId;\n    }\n    if (typeof teamId !== \"undefined\") {\n      payload[\"teamId\"] = teamId;\n    }\n    if (typeof bundleId !== \"undefined\") {\n      payload[\"bundleId\"] = bundleId;\n    }\n    if (typeof sandbox !== \"undefined\") {\n      payload[\"sandbox\"] = sandbox;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update APNS provider\n   *\n   * Update a Apple Push Notification service provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} authKey\n   * @param {string} authKeyId\n   * @param {string} teamId\n   * @param {string} bundleId\n   * @param {boolean} sandbox\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateApnsProvider(providerId, name, enabled, authKey, authKeyId, teamId, bundleId, sandbox) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/apns/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof authKey !== \"undefined\") {\n      payload[\"authKey\"] = authKey;\n    }\n    if (typeof authKeyId !== \"undefined\") {\n      payload[\"authKeyId\"] = authKeyId;\n    }\n    if (typeof teamId !== \"undefined\") {\n      payload[\"teamId\"] = teamId;\n    }\n    if (typeof bundleId !== \"undefined\") {\n      payload[\"bundleId\"] = bundleId;\n    }\n    if (typeof sandbox !== \"undefined\") {\n      payload[\"sandbox\"] = sandbox;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create FCM provider\n   *\n   * Create a new Firebase Cloud Messaging provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {object} serviceAccountJSON\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createFcmProvider(providerId, name, serviceAccountJSON, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/fcm\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof serviceAccountJSON !== \"undefined\") {\n      payload[\"serviceAccountJSON\"] = serviceAccountJSON;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update FCM provider\n   *\n   * Update a Firebase Cloud Messaging provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {object} serviceAccountJSON\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateFcmProvider(providerId, name, enabled, serviceAccountJSON) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/fcm/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof serviceAccountJSON !== \"undefined\") {\n      payload[\"serviceAccountJSON\"] = serviceAccountJSON;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Mailgun provider\n   *\n   * Create a new Mailgun provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} apiKey\n   * @param {string} domain\n   * @param {boolean} isEuRegion\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createMailgunProvider(providerId, name, apiKey, domain, isEuRegion, fromName, fromEmail, replyToName, replyToEmail, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/mailgun\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof domain !== \"undefined\") {\n      payload[\"domain\"] = domain;\n    }\n    if (typeof isEuRegion !== \"undefined\") {\n      payload[\"isEuRegion\"] = isEuRegion;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Mailgun provider\n   *\n   * Update a Mailgun provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} apiKey\n   * @param {string} domain\n   * @param {boolean} isEuRegion\n   * @param {boolean} enabled\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateMailgunProvider(providerId, name, apiKey, domain, isEuRegion, enabled, fromName, fromEmail, replyToName, replyToEmail) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/mailgun/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof domain !== \"undefined\") {\n      payload[\"domain\"] = domain;\n    }\n    if (typeof isEuRegion !== \"undefined\") {\n      payload[\"isEuRegion\"] = isEuRegion;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Msg91 provider\n   *\n   * Create a new MSG91 provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} templateId\n   * @param {string} senderId\n   * @param {string} authKey\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createMsg91Provider(providerId, name, templateId, senderId, authKey, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/msg91\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof templateId !== \"undefined\") {\n      payload[\"templateId\"] = templateId;\n    }\n    if (typeof senderId !== \"undefined\") {\n      payload[\"senderId\"] = senderId;\n    }\n    if (typeof authKey !== \"undefined\") {\n      payload[\"authKey\"] = authKey;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Msg91 provider\n   *\n   * Update a MSG91 provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} templateId\n   * @param {string} senderId\n   * @param {string} authKey\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateMsg91Provider(providerId, name, enabled, templateId, senderId, authKey) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/msg91/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof templateId !== \"undefined\") {\n      payload[\"templateId\"] = templateId;\n    }\n    if (typeof senderId !== \"undefined\") {\n      payload[\"senderId\"] = senderId;\n    }\n    if (typeof authKey !== \"undefined\") {\n      payload[\"authKey\"] = authKey;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Sendgrid provider\n   *\n   * Create a new Sendgrid provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} apiKey\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createSendgridProvider(providerId, name, apiKey, fromName, fromEmail, replyToName, replyToEmail, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/sendgrid\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Sendgrid provider\n   *\n   * Update a Sendgrid provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} apiKey\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateSendgridProvider(providerId, name, enabled, apiKey, fromName, fromEmail, replyToName, replyToEmail) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/sendgrid/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create SMTP provider\n   *\n   * Create a new SMTP provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} host\n   * @param {number} port\n   * @param {string} username\n   * @param {string} password\n   * @param {SmtpEncryption} encryption\n   * @param {boolean} autoTLS\n   * @param {string} mailer\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createSmtpProvider(providerId, name, host, port, username, password, encryption, autoTLS, mailer, fromName, fromEmail, replyToName, replyToEmail, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    if (typeof host === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"host\"');\n    }\n    const apiPath = \"/messaging/providers/smtp\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof host !== \"undefined\") {\n      payload[\"host\"] = host;\n    }\n    if (typeof port !== \"undefined\") {\n      payload[\"port\"] = port;\n    }\n    if (typeof username !== \"undefined\") {\n      payload[\"username\"] = username;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof encryption !== \"undefined\") {\n      payload[\"encryption\"] = encryption;\n    }\n    if (typeof autoTLS !== \"undefined\") {\n      payload[\"autoTLS\"] = autoTLS;\n    }\n    if (typeof mailer !== \"undefined\") {\n      payload[\"mailer\"] = mailer;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update SMTP provider\n   *\n   * Update a SMTP provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} host\n   * @param {number} port\n   * @param {string} username\n   * @param {string} password\n   * @param {SmtpEncryption} encryption\n   * @param {boolean} autoTLS\n   * @param {string} mailer\n   * @param {string} fromName\n   * @param {string} fromEmail\n   * @param {string} replyToName\n   * @param {string} replyToEmail\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateSmtpProvider(providerId, name, host, port, username, password, encryption, autoTLS, mailer, fromName, fromEmail, replyToName, replyToEmail, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/smtp/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof host !== \"undefined\") {\n      payload[\"host\"] = host;\n    }\n    if (typeof port !== \"undefined\") {\n      payload[\"port\"] = port;\n    }\n    if (typeof username !== \"undefined\") {\n      payload[\"username\"] = username;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof encryption !== \"undefined\") {\n      payload[\"encryption\"] = encryption;\n    }\n    if (typeof autoTLS !== \"undefined\") {\n      payload[\"autoTLS\"] = autoTLS;\n    }\n    if (typeof mailer !== \"undefined\") {\n      payload[\"mailer\"] = mailer;\n    }\n    if (typeof fromName !== \"undefined\") {\n      payload[\"fromName\"] = fromName;\n    }\n    if (typeof fromEmail !== \"undefined\") {\n      payload[\"fromEmail\"] = fromEmail;\n    }\n    if (typeof replyToName !== \"undefined\") {\n      payload[\"replyToName\"] = replyToName;\n    }\n    if (typeof replyToEmail !== \"undefined\") {\n      payload[\"replyToEmail\"] = replyToEmail;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Telesign provider\n   *\n   * Create a new Telesign provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} from\n   * @param {string} customerId\n   * @param {string} apiKey\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createTelesignProvider(providerId, name, from, customerId, apiKey, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/telesign\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    if (typeof customerId !== \"undefined\") {\n      payload[\"customerId\"] = customerId;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Telesign provider\n   *\n   * Update a Telesign provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} customerId\n   * @param {string} apiKey\n   * @param {string} from\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateTelesignProvider(providerId, name, enabled, customerId, apiKey, from) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/telesign/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof customerId !== \"undefined\") {\n      payload[\"customerId\"] = customerId;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Textmagic provider\n   *\n   * Create a new Textmagic provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} from\n   * @param {string} username\n   * @param {string} apiKey\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createTextmagicProvider(providerId, name, from, username, apiKey, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/textmagic\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    if (typeof username !== \"undefined\") {\n      payload[\"username\"] = username;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Textmagic provider\n   *\n   * Update a Textmagic provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} username\n   * @param {string} apiKey\n   * @param {string} from\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateTextmagicProvider(providerId, name, enabled, username, apiKey, from) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/textmagic/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof username !== \"undefined\") {\n      payload[\"username\"] = username;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Twilio provider\n   *\n   * Create a new Twilio provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} from\n   * @param {string} accountSid\n   * @param {string} authToken\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createTwilioProvider(providerId, name, from, accountSid, authToken, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/twilio\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    if (typeof accountSid !== \"undefined\") {\n      payload[\"accountSid\"] = accountSid;\n    }\n    if (typeof authToken !== \"undefined\") {\n      payload[\"authToken\"] = authToken;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Twilio provider\n   *\n   * Update a Twilio provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} accountSid\n   * @param {string} authToken\n   * @param {string} from\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateTwilioProvider(providerId, name, enabled, accountSid, authToken, from) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/twilio/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof accountSid !== \"undefined\") {\n      payload[\"accountSid\"] = accountSid;\n    }\n    if (typeof authToken !== \"undefined\") {\n      payload[\"authToken\"] = authToken;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create Vonage provider\n   *\n   * Create a new Vonage provider.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {string} from\n   * @param {string} apiKey\n   * @param {string} apiSecret\n   * @param {boolean} enabled\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async createVonageProvider(providerId, name, from, apiKey, apiSecret, enabled) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/providers/vonage\";\n    const payload = {};\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof apiSecret !== \"undefined\") {\n      payload[\"apiSecret\"] = apiSecret;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update Vonage provider\n   *\n   * Update a Vonage provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string} name\n   * @param {boolean} enabled\n   * @param {string} apiKey\n   * @param {string} apiSecret\n   * @param {string} from\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Provider>}\n   */\n  async updateVonageProvider(providerId, name, enabled, apiKey, apiSecret, from) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/vonage/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof apiKey !== \"undefined\") {\n      payload[\"apiKey\"] = apiKey;\n    }\n    if (typeof apiSecret !== \"undefined\") {\n      payload[\"apiSecret\"] = apiSecret;\n    }\n    if (typeof from !== \"undefined\") {\n      payload[\"from\"] = from;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Get provider\n       *\n       * Get a provider by its unique ID.\n  \n       *\n       * @param {string} providerId\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Provider>}\n       */\n  async getProvider(providerId) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete provider\n   *\n   * Delete a provider by its unique ID.\n   *\n   * @param {string} providerId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteProvider(providerId) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/{providerId}\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List provider logs\n   *\n   * Get the provider activity logs listed by its unique ID.\n   *\n   * @param {string} providerId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listProviderLogs(providerId, queries) {\n    if (typeof providerId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerId\"');\n    }\n    const apiPath = \"/messaging/providers/{providerId}/logs\".replace(\"{providerId}\", providerId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List subscriber logs\n   *\n   * Get the subscriber activity logs listed by its unique ID.\n   *\n   * @param {string} subscriberId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listSubscriberLogs(subscriberId, queries) {\n    if (typeof subscriberId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"subscriberId\"');\n    }\n    const apiPath = \"/messaging/subscribers/{subscriberId}/logs\".replace(\"{subscriberId}\", subscriberId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List topics\n   *\n   * Get a list of all topics from the current Appwrite project.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.TopicList>}\n   */\n  async listTopics(queries, search) {\n    const apiPath = \"/messaging/topics\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create topic\n   *\n   * Create a new topic.\n   *\n   * @param {string} topicId\n   * @param {string} name\n   * @param {string[]} subscribe\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Topic>}\n   */\n  async createTopic(topicId, name, subscribe) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/messaging/topics\";\n    const payload = {};\n    if (typeof topicId !== \"undefined\") {\n      payload[\"topicId\"] = topicId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof subscribe !== \"undefined\") {\n      payload[\"subscribe\"] = subscribe;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Get topic\n       *\n       * Get a topic by its unique ID.\n  \n       *\n       * @param {string} topicId\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Topic>}\n       */\n  async getTopic(topicId) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update topic\n       *\n       * Update a topic by its unique ID.\n  \n       *\n       * @param {string} topicId\n       * @param {string} name\n       * @param {string[]} subscribe\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Topic>}\n       */\n  async updateTopic(topicId, name, subscribe) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof subscribe !== \"undefined\") {\n      payload[\"subscribe\"] = subscribe;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete topic\n   *\n   * Delete a topic by its unique ID.\n   *\n   * @param {string} topicId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteTopic(topicId) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List topic logs\n   *\n   * Get the topic activity logs listed by its unique ID.\n   *\n   * @param {string} topicId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listTopicLogs(topicId, queries) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}/logs\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List subscribers\n   *\n   * Get a list of all subscribers from the current Appwrite project.\n   *\n   * @param {string} topicId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.SubscriberList>}\n   */\n  async listSubscribers(topicId, queries, search) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}/subscribers\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create subscriber\n   *\n   * Create a new subscriber.\n   *\n   * @param {string} topicId\n   * @param {string} subscriberId\n   * @param {string} targetId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Subscriber>}\n   */\n  async createSubscriber(topicId, subscriberId, targetId) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    if (typeof subscriberId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"subscriberId\"');\n    }\n    if (typeof targetId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"targetId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}/subscribers\".replace(\"{topicId}\", topicId);\n    const payload = {};\n    if (typeof subscriberId !== \"undefined\") {\n      payload[\"subscriberId\"] = subscriberId;\n    }\n    if (typeof targetId !== \"undefined\") {\n      payload[\"targetId\"] = targetId;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Get subscriber\n       *\n       * Get a subscriber by its unique ID.\n  \n       *\n       * @param {string} topicId\n       * @param {string} subscriberId\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Subscriber>}\n       */\n  async getSubscriber(topicId, subscriberId) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    if (typeof subscriberId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"subscriberId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}/subscribers/{subscriberId}\".replace(\"{topicId}\", topicId).replace(\"{subscriberId}\", subscriberId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete subscriber\n   *\n   * Delete a subscriber by its unique ID.\n   *\n   * @param {string} topicId\n   * @param {string} subscriberId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteSubscriber(topicId, subscriberId) {\n    if (typeof topicId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"topicId\"');\n    }\n    if (typeof subscriberId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"subscriberId\"');\n    }\n    const apiPath = \"/messaging/topics/{topicId}/subscribers/{subscriberId}\".replace(\"{topicId}\", topicId).replace(\"{subscriberId}\", subscriberId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=messaging.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/messaging.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/storage.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/storage.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Storage: () => (/* binding */ Storage)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/storage.ts\nvar Storage = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List buckets\n   *\n   * Get a list of all the storage buckets. You can use the query params to filter your results.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.BucketList>}\n   */\n  async listBuckets(queries, search) {\n    const apiPath = \"/storage/buckets\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create bucket\n   *\n   * Create a new storage bucket.\n   *\n   * @param {string} bucketId\n   * @param {string} name\n   * @param {string[]} permissions\n   * @param {boolean} fileSecurity\n   * @param {boolean} enabled\n   * @param {number} maximumFileSize\n   * @param {string[]} allowedFileExtensions\n   * @param {Compression} compression\n   * @param {boolean} encryption\n   * @param {boolean} antivirus\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Bucket>}\n   */\n  async createBucket(bucketId, name, permissions, fileSecurity, enabled, maximumFileSize, allowedFileExtensions, compression, encryption, antivirus) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/storage/buckets\";\n    const payload = {};\n    if (typeof bucketId !== \"undefined\") {\n      payload[\"bucketId\"] = bucketId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    if (typeof fileSecurity !== \"undefined\") {\n      payload[\"fileSecurity\"] = fileSecurity;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof maximumFileSize !== \"undefined\") {\n      payload[\"maximumFileSize\"] = maximumFileSize;\n    }\n    if (typeof allowedFileExtensions !== \"undefined\") {\n      payload[\"allowedFileExtensions\"] = allowedFileExtensions;\n    }\n    if (typeof compression !== \"undefined\") {\n      payload[\"compression\"] = compression;\n    }\n    if (typeof encryption !== \"undefined\") {\n      payload[\"encryption\"] = encryption;\n    }\n    if (typeof antivirus !== \"undefined\") {\n      payload[\"antivirus\"] = antivirus;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get bucket\n   *\n   * Get a storage bucket by its unique ID. This endpoint response returns a JSON object with the storage bucket metadata.\n   *\n   * @param {string} bucketId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Bucket>}\n   */\n  async getBucket(bucketId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}\".replace(\"{bucketId}\", bucketId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update bucket\n   *\n   * Update a storage bucket by its unique ID.\n   *\n   * @param {string} bucketId\n   * @param {string} name\n   * @param {string[]} permissions\n   * @param {boolean} fileSecurity\n   * @param {boolean} enabled\n   * @param {number} maximumFileSize\n   * @param {string[]} allowedFileExtensions\n   * @param {Compression} compression\n   * @param {boolean} encryption\n   * @param {boolean} antivirus\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Bucket>}\n   */\n  async updateBucket(bucketId, name, permissions, fileSecurity, enabled, maximumFileSize, allowedFileExtensions, compression, encryption, antivirus) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}\".replace(\"{bucketId}\", bucketId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    if (typeof fileSecurity !== \"undefined\") {\n      payload[\"fileSecurity\"] = fileSecurity;\n    }\n    if (typeof enabled !== \"undefined\") {\n      payload[\"enabled\"] = enabled;\n    }\n    if (typeof maximumFileSize !== \"undefined\") {\n      payload[\"maximumFileSize\"] = maximumFileSize;\n    }\n    if (typeof allowedFileExtensions !== \"undefined\") {\n      payload[\"allowedFileExtensions\"] = allowedFileExtensions;\n    }\n    if (typeof compression !== \"undefined\") {\n      payload[\"compression\"] = compression;\n    }\n    if (typeof encryption !== \"undefined\") {\n      payload[\"encryption\"] = encryption;\n    }\n    if (typeof antivirus !== \"undefined\") {\n      payload[\"antivirus\"] = antivirus;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete bucket\n   *\n   * Delete a storage bucket by its unique ID.\n   *\n   * @param {string} bucketId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteBucket(bucketId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}\".replace(\"{bucketId}\", bucketId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List files\n   *\n   * Get a list of all the user files. You can use the query params to filter your results.\n   *\n   * @param {string} bucketId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.FileList>}\n   */\n  async listFiles(bucketId, queries, search) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files\".replace(\"{bucketId}\", bucketId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create file\n       *\n       * Create a new file. Before using this route, you should create a new bucket resource using either a [server integration](https://appwrite.io/docs/server/storage#storageCreateBucket) API or directly from your Appwrite console.\n  \n  Larger files should be uploaded using multiple requests with the [content-range](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range) header to send a partial request with a maximum supported chunk of `5MB`. The `content-range` header values should always be in bytes.\n  \n  When the first request is sent, the server will return the **File** object, and the subsequent part request must include the file&#039;s **id** in `x-appwrite-id` header to allow the server to know that the partial upload is for the existing file and not for a new one.\n  \n  If you&#039;re creating a new file using one of the Appwrite SDKs, all the chunking logic will be managed by the SDK internally.\n  \n       *\n       * @param {string} bucketId\n       * @param {string} fileId\n       * @param {File} file\n       * @param {string[]} permissions\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.File>}\n       */\n  async createFile(bucketId, fileId, file, permissions, onProgress = (progress) => {\n  }) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    if (typeof file === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"file\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files\".replace(\"{bucketId}\", bucketId);\n    const payload = {};\n    if (typeof fileId !== \"undefined\") {\n      payload[\"fileId\"] = fileId;\n    }\n    if (typeof file !== \"undefined\") {\n      payload[\"file\"] = file;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"multipart/form-data\"\n    };\n    return await this.client.chunkedUpload(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload,\n      onProgress\n    );\n  }\n  /**\n   * Get file\n   *\n   * Get a file by its unique ID. This endpoint response returns a JSON object with the file metadata.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.File>}\n   */\n  async getFile(bucketId, fileId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update file\n   *\n   * Update a file by its unique ID. Only users with write permissions have access to update this resource.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @param {string} name\n   * @param {string[]} permissions\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.File>}\n   */\n  async updateFile(bucketId, fileId, name, permissions) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof permissions !== \"undefined\") {\n      payload[\"permissions\"] = permissions;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete File\n   *\n   * Delete a file by its unique ID. Only users with write permissions have access to delete this resource.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteFile(bucketId, fileId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get file for download\n   *\n   * Get a file content by its unique ID. The endpoint response return with a &#039;Content-Disposition: attachment&#039; header that tells the browser to start downloading the file to user downloads directory.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @throws {AppwriteException}\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async getFileDownload(bucketId, fileId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}/download\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n   * Get file preview\n   *\n   * Get a file preview image. Currently, this method supports preview for image files (jpg, png, and gif), other supported formats, like pdf, docs, slides, and spreadsheets, will return the file icon image. You can also pass query string arguments for cutting and resizing your preview image. Preview is supported only for image files smaller than 10MB.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @param {number} width\n   * @param {number} height\n   * @param {ImageGravity} gravity\n   * @param {number} quality\n   * @param {number} borderWidth\n   * @param {string} borderColor\n   * @param {number} borderRadius\n   * @param {number} opacity\n   * @param {number} rotation\n   * @param {string} background\n   * @param {ImageFormat} output\n   * @throws {AppwriteException}\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async getFilePreview(bucketId, fileId, width, height, gravity, quality, borderWidth, borderColor, borderRadius, opacity, rotation, background, output) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}/preview\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    if (typeof width !== \"undefined\") {\n      payload[\"width\"] = width;\n    }\n    if (typeof height !== \"undefined\") {\n      payload[\"height\"] = height;\n    }\n    if (typeof gravity !== \"undefined\") {\n      payload[\"gravity\"] = gravity;\n    }\n    if (typeof quality !== \"undefined\") {\n      payload[\"quality\"] = quality;\n    }\n    if (typeof borderWidth !== \"undefined\") {\n      payload[\"borderWidth\"] = borderWidth;\n    }\n    if (typeof borderColor !== \"undefined\") {\n      payload[\"borderColor\"] = borderColor;\n    }\n    if (typeof borderRadius !== \"undefined\") {\n      payload[\"borderRadius\"] = borderRadius;\n    }\n    if (typeof opacity !== \"undefined\") {\n      payload[\"opacity\"] = opacity;\n    }\n    if (typeof rotation !== \"undefined\") {\n      payload[\"rotation\"] = rotation;\n    }\n    if (typeof background !== \"undefined\") {\n      payload[\"background\"] = background;\n    }\n    if (typeof output !== \"undefined\") {\n      payload[\"output\"] = output;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n  /**\n   * Get file for view\n   *\n   * Get a file content by its unique ID. This endpoint is similar to the download method but returns with no  &#039;Content-Disposition: attachment&#039; header.\n   *\n   * @param {string} bucketId\n   * @param {string} fileId\n   * @throws {AppwriteException}\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async getFileView(bucketId, fileId) {\n    if (typeof bucketId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"bucketId\"');\n    }\n    if (typeof fileId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"fileId\"');\n    }\n    const apiPath = \"/storage/buckets/{bucketId}/files/{fileId}/view\".replace(\"{bucketId}\", bucketId).replace(\"{fileId}\", fileId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload,\n      \"arrayBuffer\"\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=storage.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/storage.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/teams.mjs":
/*!************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/teams.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Teams: () => (/* binding */ Teams)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/teams.ts\nvar Teams = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List teams\n   *\n   * Get a list of all the teams in which the current user is a member. You can use the parameters to filter your results.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.TeamList<Preferences>>}\n   */\n  async list(queries, search) {\n    const apiPath = \"/teams\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create team\n   *\n   * Create a new team. The user who creates the team will automatically be assigned as the owner of the team. Only the users with the owner role can invite new members, add new owners and delete or update the team.\n   *\n   * @param {string} teamId\n   * @param {string} name\n   * @param {string[]} roles\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Team<Preferences>>}\n   */\n  async create(teamId, name, roles) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/teams\";\n    const payload = {};\n    if (typeof teamId !== \"undefined\") {\n      payload[\"teamId\"] = teamId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    if (typeof roles !== \"undefined\") {\n      payload[\"roles\"] = roles;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get team\n   *\n   * Get a team by its ID. All team members have read access for this resource.\n   *\n   * @param {string} teamId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Team<Preferences>>}\n   */\n  async get(teamId) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    const apiPath = \"/teams/{teamId}\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update name\n   *\n   * Update the team&#039;s name by its unique ID.\n   *\n   * @param {string} teamId\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Team<Preferences>>}\n   */\n  async updateName(teamId, name) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/teams/{teamId}\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete team\n   *\n   * Delete a team using its ID. Only team members with the owner role can delete the team.\n   *\n   * @param {string} teamId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async delete(teamId) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    const apiPath = \"/teams/{teamId}\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List team memberships\n   *\n   * Use this endpoint to list a team&#039;s members using the team&#039;s ID. All team members have read access to this endpoint.\n   *\n   * @param {string} teamId\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MembershipList>}\n   */\n  async listMemberships(teamId, queries, search) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create team membership\n       *\n       * Invite a new member to join your team. Provide an ID for existing users, or invite unregistered users using an email or phone number. If initiated from a Client SDK, Appwrite will send an email or sms with a link to join the team to the invited user, and an account will be created for them if one doesn&#039;t exist. If initiated from a Server SDK, the new member will be added automatically to the team.\n  \n  You only need to provide one of a user ID, email, or phone number. Appwrite will prioritize accepting the user ID &gt; email &gt; phone number if you provide more than one of these parameters.\n  \n  Use the `url` parameter to redirect the user from the invitation email to your app. After the user is redirected, use the [Update Team Membership Status](https://appwrite.io/docs/references/cloud/client-web/teams#updateMembershipStatus) endpoint to allow the user to accept the invitation to the team. \n  \n  Please note that to avoid a [Redirect Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md) Appwrite will accept the only redirect URLs under the domains you have added as a platform on the Appwrite Console.\n  \n       *\n       * @param {string} teamId\n       * @param {string[]} roles\n       * @param {string} email\n       * @param {string} userId\n       * @param {string} phone\n       * @param {string} url\n       * @param {string} name\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Membership>}\n       */\n  async createMembership(teamId, roles, email, userId, phone, url, name) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof roles === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"roles\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof phone !== \"undefined\") {\n      payload[\"phone\"] = phone;\n    }\n    if (typeof roles !== \"undefined\") {\n      payload[\"roles\"] = roles;\n    }\n    if (typeof url !== \"undefined\") {\n      payload[\"url\"] = url;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get team membership\n   *\n   * Get a team member by the membership unique id. All team members have read access for this resource.\n   *\n   * @param {string} teamId\n   * @param {string} membershipId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Membership>}\n   */\n  async getMembership(teamId, membershipId) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof membershipId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"membershipId\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships/{membershipId}\".replace(\"{teamId}\", teamId).replace(\"{membershipId}\", membershipId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update membership\n       *\n       * Modify the roles of a team member. Only team members with the owner role have access to this endpoint. Learn more about [roles and permissions](https://appwrite.io/docs/permissions).\n  \n       *\n       * @param {string} teamId\n       * @param {string} membershipId\n       * @param {string[]} roles\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Membership>}\n       */\n  async updateMembership(teamId, membershipId, roles) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof membershipId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"membershipId\"');\n    }\n    if (typeof roles === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"roles\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships/{membershipId}\".replace(\"{teamId}\", teamId).replace(\"{membershipId}\", membershipId);\n    const payload = {};\n    if (typeof roles !== \"undefined\") {\n      payload[\"roles\"] = roles;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete team membership\n   *\n   * This endpoint allows a user to leave a team or for a team owner to delete the membership of any other team member. You can also use this endpoint to delete a user membership even if it is not accepted.\n   *\n   * @param {string} teamId\n   * @param {string} membershipId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteMembership(teamId, membershipId) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof membershipId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"membershipId\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships/{membershipId}\".replace(\"{teamId}\", teamId).replace(\"{membershipId}\", membershipId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update team membership status\n       *\n       * Use this endpoint to allow a user to accept an invitation to join a team after being redirected back to your app from the invitation email received by the user.\n  \n  If the request is successful, a session for the user is automatically created.\n  \n       *\n       * @param {string} teamId\n       * @param {string} membershipId\n       * @param {string} userId\n       * @param {string} secret\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Membership>}\n       */\n  async updateMembershipStatus(teamId, membershipId, userId, secret) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof membershipId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"membershipId\"');\n    }\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof secret === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"secret\"');\n    }\n    const apiPath = \"/teams/{teamId}/memberships/{membershipId}/status\".replace(\"{teamId}\", teamId).replace(\"{membershipId}\", membershipId);\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof secret !== \"undefined\") {\n      payload[\"secret\"] = secret;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get team preferences\n   *\n   * Get the team&#039;s shared preferences by its unique ID. If a preference doesn&#039;t need to be shared by all team members, prefer storing them in [user preferences](https://appwrite.io/docs/references/cloud/client-web/account#getPrefs).\n   *\n   * @param {string} teamId\n   * @throws {AppwriteException}\n   * @returns {Promise<Preferences>}\n   */\n  async getPrefs(teamId) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    const apiPath = \"/teams/{teamId}/prefs\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update preferences\n   *\n   * Update the team&#039;s preferences by its unique ID. The object you pass is stored as is and replaces any previous value. The maximum allowed prefs size is 64kB and throws an error if exceeded.\n   *\n   * @param {string} teamId\n   * @param {object} prefs\n   * @throws {AppwriteException}\n   * @returns {Promise<Preferences>}\n   */\n  async updatePrefs(teamId, prefs) {\n    if (typeof teamId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"teamId\"');\n    }\n    if (typeof prefs === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"prefs\"');\n    }\n    const apiPath = \"/teams/{teamId}/prefs\".replace(\"{teamId}\", teamId);\n    const payload = {};\n    if (typeof prefs !== \"undefined\") {\n      payload[\"prefs\"] = prefs;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=teams.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/teams.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-appwrite/dist/services/users.mjs":
/*!************************************************************!*\
  !*** ./node_modules/node-appwrite/dist/services/users.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Users: () => (/* binding */ Users)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.mjs */ \"(middleware)/./node_modules/node-appwrite/dist/client.mjs\");\n\n\n// src/services/users.ts\nvar Users = class {\n  constructor(client) {\n    this.client = client;\n  }\n  /**\n   * List users\n   *\n   * Get a list of all the project&#039;s users. You can use the query params to filter your results.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.UserList<Preferences>>}\n   */\n  async list(queries, search) {\n    const apiPath = \"/users\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user\n   *\n   * Create a new user.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} phone\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async create(userId, email, phone, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof phone !== \"undefined\") {\n      payload[\"phone\"] = phone;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with Argon2 password\n   *\n   * Create a new user. Password provided must be hashed with the [Argon2](https://en.wikipedia.org/wiki/Argon2) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createArgon2User(userId, email, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/argon2\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with bcrypt password\n   *\n   * Create a new user. Password provided must be hashed with the [Bcrypt](https://en.wikipedia.org/wiki/Bcrypt) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createBcryptUser(userId, email, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/bcrypt\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List Identities\n   *\n   * Get identities for all users.\n   *\n   * @param {string[]} queries\n   * @param {string} search\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.IdentityList>}\n   */\n  async listIdentities(queries, search) {\n    const apiPath = \"/users/identities\";\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    if (typeof search !== \"undefined\") {\n      payload[\"search\"] = search;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete identity\n   *\n   * Delete an identity by its unique ID.\n   *\n   * @param {string} identityId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteIdentity(identityId) {\n    if (typeof identityId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"identityId\"');\n    }\n    const apiPath = \"/users/identities/{identityId}\".replace(\"{identityId}\", identityId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with MD5 password\n   *\n   * Create a new user. Password provided must be hashed with the [MD5](https://en.wikipedia.org/wiki/MD5) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createMD5User(userId, email, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/md5\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with PHPass password\n   *\n   * Create a new user. Password provided must be hashed with the [PHPass](https://www.openwall.com/phpass/) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createPHPassUser(userId, email, password, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/phpass\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with Scrypt password\n   *\n   * Create a new user. Password provided must be hashed with the [Scrypt](https://github.com/Tarsnap/scrypt) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} passwordSalt\n   * @param {number} passwordCpu\n   * @param {number} passwordMemory\n   * @param {number} passwordParallel\n   * @param {number} passwordLength\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createScryptUser(userId, email, password, passwordSalt, passwordCpu, passwordMemory, passwordParallel, passwordLength, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    if (typeof passwordSalt === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordSalt\"');\n    }\n    if (typeof passwordCpu === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordCpu\"');\n    }\n    if (typeof passwordMemory === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordMemory\"');\n    }\n    if (typeof passwordParallel === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordParallel\"');\n    }\n    if (typeof passwordLength === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordLength\"');\n    }\n    const apiPath = \"/users/scrypt\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof passwordSalt !== \"undefined\") {\n      payload[\"passwordSalt\"] = passwordSalt;\n    }\n    if (typeof passwordCpu !== \"undefined\") {\n      payload[\"passwordCpu\"] = passwordCpu;\n    }\n    if (typeof passwordMemory !== \"undefined\") {\n      payload[\"passwordMemory\"] = passwordMemory;\n    }\n    if (typeof passwordParallel !== \"undefined\") {\n      payload[\"passwordParallel\"] = passwordParallel;\n    }\n    if (typeof passwordLength !== \"undefined\") {\n      payload[\"passwordLength\"] = passwordLength;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with Scrypt modified password\n   *\n   * Create a new user. Password provided must be hashed with the [Scrypt Modified](https://gist.github.com/Meldiron/eecf84a0225eccb5a378d45bb27462cc) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {string} passwordSalt\n   * @param {string} passwordSaltSeparator\n   * @param {string} passwordSignerKey\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createScryptModifiedUser(userId, email, password, passwordSalt, passwordSaltSeparator, passwordSignerKey, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    if (typeof passwordSalt === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordSalt\"');\n    }\n    if (typeof passwordSaltSeparator === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordSaltSeparator\"');\n    }\n    if (typeof passwordSignerKey === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"passwordSignerKey\"');\n    }\n    const apiPath = \"/users/scrypt-modified\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof passwordSalt !== \"undefined\") {\n      payload[\"passwordSalt\"] = passwordSalt;\n    }\n    if (typeof passwordSaltSeparator !== \"undefined\") {\n      payload[\"passwordSaltSeparator\"] = passwordSaltSeparator;\n    }\n    if (typeof passwordSignerKey !== \"undefined\") {\n      payload[\"passwordSignerKey\"] = passwordSignerKey;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create user with SHA password\n   *\n   * Create a new user. Password provided must be hashed with the [SHA](https://en.wikipedia.org/wiki/Secure_Hash_Algorithm) algorithm. Use the [POST /users](https://appwrite.io/docs/server/users#usersCreate) endpoint to create users with a plain text password.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @param {string} password\n   * @param {PasswordHash} passwordVersion\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async createSHAUser(userId, email, password, passwordVersion, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/sha\";\n    const payload = {};\n    if (typeof userId !== \"undefined\") {\n      payload[\"userId\"] = userId;\n    }\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    if (typeof passwordVersion !== \"undefined\") {\n      payload[\"passwordVersion\"] = passwordVersion;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get user\n   *\n   * Get a user by its unique ID.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async get(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete user\n   *\n   * Delete a user by its unique ID, thereby releasing it&#039;s ID. Since ID is released and can be reused, all user-related resources like documents or storage files should be deleted before user deletion. If you want to keep ID reserved, use the [updateStatus](https://appwrite.io/docs/server/users#usersUpdateStatus) endpoint instead.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async delete(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update email\n   *\n   * Update the user email by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string} email\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateEmail(userId, email) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof email === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"email\"');\n    }\n    const apiPath = \"/users/{userId}/email\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof email !== \"undefined\") {\n      payload[\"email\"] = email;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Update user labels\n       *\n       * Update the user labels by its unique ID. \n  \n  Labels can be used to grant access to resources. While teams are a way for user&#039;s to share access to a resource, labels can be defined by the developer to grant access without an invitation. See the [Permissions docs](https://appwrite.io/docs/permissions) for more info.\n       *\n       * @param {string} userId\n       * @param {string[]} labels\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.User<Preferences>>}\n       */\n  async updateLabels(userId, labels) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof labels === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"labels\"');\n    }\n    const apiPath = \"/users/{userId}/labels\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof labels !== \"undefined\") {\n      payload[\"labels\"] = labels;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List user logs\n   *\n   * Get the user activity logs list by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.LogList>}\n   */\n  async listLogs(userId, queries) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/logs\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List user memberships\n   *\n   * Get the user membership list by its unique ID.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MembershipList>}\n   */\n  async listMemberships(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/memberships\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update MFA\n   *\n   * Enable or disable MFA on a user account.\n   *\n   * @param {string} userId\n   * @param {boolean} mfa\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateMfa(userId, mfa) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof mfa === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"mfa\"');\n    }\n    const apiPath = \"/users/{userId}/mfa\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof mfa !== \"undefined\") {\n      payload[\"mfa\"] = mfa;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete Authenticator\n   *\n   * Delete an authenticator app.\n   *\n   * @param {string} userId\n   * @param {AuthenticatorType} type\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async deleteMfaAuthenticator(userId, type) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof type === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"type\"');\n    }\n    const apiPath = \"/users/{userId}/mfa/authenticators/{type}\".replace(\"{userId}\", userId).replace(\"{type}\", type);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List Factors\n   *\n   * List the factors available on the account to be used as a MFA challange.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaFactors>}\n   */\n  async listMfaFactors(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/mfa/factors\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get MFA Recovery Codes\n   *\n   * Get recovery codes that can be used as backup for MFA flow by User ID. Before getting codes, they must be generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes) method.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async getMfaRecoveryCodes(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/mfa/recovery-codes\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Regenerate MFA Recovery Codes\n   *\n   * Regenerate recovery codes that can be used as backup for MFA flow by User ID. Before regenerating codes, they must be first generated using [createMfaRecoveryCodes](/docs/references/cloud/client-web/account#createMfaRecoveryCodes) method.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async updateMfaRecoveryCodes(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/mfa/recovery-codes\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"put\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create MFA Recovery Codes\n   *\n   * Generate recovery codes used as backup for MFA flow for User ID. Recovery codes can be used as a MFA verification type in [createMfaChallenge](/docs/references/cloud/client-web/account#createMfaChallenge) method by client SDK.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.MfaRecoveryCodes>}\n   */\n  async createMfaRecoveryCodes(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/mfa/recovery-codes\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update name\n   *\n   * Update the user name by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateName(userId, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof name === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"name\"');\n    }\n    const apiPath = \"/users/{userId}/name\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update password\n   *\n   * Update the user password by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string} password\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePassword(userId, password) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof password === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"password\"');\n    }\n    const apiPath = \"/users/{userId}/password\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof password !== \"undefined\") {\n      payload[\"password\"] = password;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update phone\n   *\n   * Update the user phone by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string} number\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePhone(userId, number) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof number === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"number\"');\n    }\n    const apiPath = \"/users/{userId}/phone\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof number !== \"undefined\") {\n      payload[\"number\"] = number;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get user preferences\n   *\n   * Get the user preferences by its unique ID.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Preferences>}\n   */\n  async getPrefs(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/prefs\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update user preferences\n   *\n   * Update the user preferences by its unique ID. The object you pass is stored as is, and replaces any previous value. The maximum allowed prefs size is 64kB and throws error if exceeded.\n   *\n   * @param {string} userId\n   * @param {object} prefs\n   * @throws {AppwriteException}\n   * @returns {Promise<Preferences>}\n   */\n  async updatePrefs(userId, prefs) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof prefs === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"prefs\"');\n    }\n    const apiPath = \"/users/{userId}/prefs\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof prefs !== \"undefined\") {\n      payload[\"prefs\"] = prefs;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List user sessions\n   *\n   * Get the user sessions list by its unique ID.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.SessionList>}\n   */\n  async listSessions(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/sessions\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create session\n       *\n       * Creates a session for a user. Returns an immediately usable session object.\n  \n  If you want to generate a token for a custom authentication flow, use the [POST /users/{userId}/tokens](https://appwrite.io/docs/server/users#createToken) endpoint.\n       *\n       * @param {string} userId\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Session>}\n       */\n  async createSession(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/sessions\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete user sessions\n   *\n   * Delete all user&#039;s sessions by using the user&#039;s unique ID.\n   *\n   * @param {string} userId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteSessions(userId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/sessions\".replace(\"{userId}\", userId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete user session\n   *\n   * Delete a user sessions by its unique ID.\n   *\n   * @param {string} userId\n   * @param {string} sessionId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteSession(userId, sessionId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof sessionId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"sessionId\"');\n    }\n    const apiPath = \"/users/{userId}/sessions/{sessionId}\".replace(\"{userId}\", userId).replace(\"{sessionId}\", sessionId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update user status\n   *\n   * Update the user status by its unique ID. Use this endpoint as an alternative to deleting a user if you want to keep user&#039;s ID reserved.\n   *\n   * @param {string} userId\n   * @param {boolean} status\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateStatus(userId, status) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof status === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"status\"');\n    }\n    const apiPath = \"/users/{userId}/status\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof status !== \"undefined\") {\n      payload[\"status\"] = status;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * List User Targets\n   *\n   * List the messaging targets that are associated with a user.\n   *\n   * @param {string} userId\n   * @param {string[]} queries\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.TargetList>}\n   */\n  async listTargets(userId, queries) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/targets\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof queries !== \"undefined\") {\n      payload[\"queries\"] = queries;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Create User Target\n   *\n   * Create a messaging target.\n   *\n   * @param {string} userId\n   * @param {string} targetId\n   * @param {MessagingProviderType} providerType\n   * @param {string} identifier\n   * @param {string} providerId\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Target>}\n   */\n  async createTarget(userId, targetId, providerType, identifier, providerId, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof targetId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"targetId\"');\n    }\n    if (typeof providerType === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"providerType\"');\n    }\n    if (typeof identifier === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"identifier\"');\n    }\n    const apiPath = \"/users/{userId}/targets\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof targetId !== \"undefined\") {\n      payload[\"targetId\"] = targetId;\n    }\n    if (typeof providerType !== \"undefined\") {\n      payload[\"providerType\"] = providerType;\n    }\n    if (typeof identifier !== \"undefined\") {\n      payload[\"identifier\"] = identifier;\n    }\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Get User Target\n   *\n   * Get a user&#039;s push notification target by ID.\n   *\n   * @param {string} userId\n   * @param {string} targetId\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Target>}\n   */\n  async getTarget(userId, targetId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof targetId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"targetId\"');\n    }\n    const apiPath = \"/users/{userId}/targets/{targetId}\".replace(\"{userId}\", userId).replace(\"{targetId}\", targetId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"get\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update User target\n   *\n   * Update a messaging target.\n   *\n   * @param {string} userId\n   * @param {string} targetId\n   * @param {string} identifier\n   * @param {string} providerId\n   * @param {string} name\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.Target>}\n   */\n  async updateTarget(userId, targetId, identifier, providerId, name) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof targetId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"targetId\"');\n    }\n    const apiPath = \"/users/{userId}/targets/{targetId}\".replace(\"{userId}\", userId).replace(\"{targetId}\", targetId);\n    const payload = {};\n    if (typeof identifier !== \"undefined\") {\n      payload[\"identifier\"] = identifier;\n    }\n    if (typeof providerId !== \"undefined\") {\n      payload[\"providerId\"] = providerId;\n    }\n    if (typeof name !== \"undefined\") {\n      payload[\"name\"] = name;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Delete user target\n   *\n   * Delete a messaging target.\n   *\n   * @param {string} userId\n   * @param {string} targetId\n   * @throws {AppwriteException}\n   * @returns {Promise<{}>}\n   */\n  async deleteTarget(userId, targetId) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof targetId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"targetId\"');\n    }\n    const apiPath = \"/users/{userId}/targets/{targetId}\".replace(\"{userId}\", userId).replace(\"{targetId}\", targetId);\n    const payload = {};\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"delete\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n       * Create token\n       *\n       * Returns a token with a secret key for creating a session. Use the user ID and secret and submit a request to the [PUT /account/sessions/token](https://appwrite.io/docs/references/cloud/client-web/account#createSession) endpoint to complete the login process.\n  \n       *\n       * @param {string} userId\n       * @param {number} length\n       * @param {number} expire\n       * @throws {AppwriteException}\n       * @returns {Promise<Models.Token>}\n       */\n  async createToken(userId, length, expire) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    const apiPath = \"/users/{userId}/tokens\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof length !== \"undefined\") {\n      payload[\"length\"] = length;\n    }\n    if (typeof expire !== \"undefined\") {\n      payload[\"expire\"] = expire;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"post\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update email verification\n   *\n   * Update the user email verification status by its unique ID.\n   *\n   * @param {string} userId\n   * @param {boolean} emailVerification\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updateEmailVerification(userId, emailVerification) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof emailVerification === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"emailVerification\"');\n    }\n    const apiPath = \"/users/{userId}/verification\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof emailVerification !== \"undefined\") {\n      payload[\"emailVerification\"] = emailVerification;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n  /**\n   * Update phone verification\n   *\n   * Update the user phone verification status by its unique ID.\n   *\n   * @param {string} userId\n   * @param {boolean} phoneVerification\n   * @throws {AppwriteException}\n   * @returns {Promise<Models.User<Preferences>>}\n   */\n  async updatePhoneVerification(userId, phoneVerification) {\n    if (typeof userId === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"userId\"');\n    }\n    if (typeof phoneVerification === \"undefined\") {\n      throw new _client_mjs__WEBPACK_IMPORTED_MODULE_0__.AppwriteException('Missing required parameter: \"phoneVerification\"');\n    }\n    const apiPath = \"/users/{userId}/verification/phone\".replace(\"{userId}\", userId);\n    const payload = {};\n    if (typeof phoneVerification !== \"undefined\") {\n      payload[\"phoneVerification\"] = phoneVerification;\n    }\n    const uri = new URL(this.client.config.endpoint + apiPath);\n    const apiHeaders = {\n      \"content-type\": \"application/json\"\n    };\n    return await this.client.call(\n      \"patch\",\n      uri,\n      apiHeaders,\n      payload\n    );\n  }\n};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=users.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-appwrite/dist/services/users.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-fetch-native-with-agent/dist/agent-stub.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/node-fetch-native-with-agent/dist/agent-stub.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAgent: () => (/* binding */ a),\n/* harmony export */   createFetch: () => (/* binding */ n),\n/* harmony export */   fetch: () => (/* binding */ h)\n/* harmony export */ });\nvar o=Object.defineProperty;var e=(t,c)=>o(t,\"name\",{value:c,configurable:!0});var i=Object.defineProperty,r=e((t,c)=>i(t,\"name\",{value:c,configurable:!0}),\"e\");function a(){return{agent:void 0,dispatcher:void 0}}e(a,\"createAgent\"),r(a,\"createAgent\");function n(){return globalThis.fetch}e(n,\"createFetch\"),r(n,\"createFetch\");const h=globalThis.fetch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtZmV0Y2gtbmF0aXZlLXdpdGgtYWdlbnQvZGlzdC9hZ2VudC1zdHViLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw0QkFBNEIseUJBQXlCLHdCQUF3QixFQUFFLG1EQUFtRCx3QkFBd0IsT0FBTyxhQUFhLE9BQU8sZ0NBQWdDLHNDQUFzQyxhQUFhLHdCQUF3QixzQ0FBc0MseUJBQThFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWZldGNoLW5hdGl2ZS13aXRoLWFnZW50L2Rpc3QvYWdlbnQtc3R1Yi5tanM/MzE5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbz1PYmplY3QuZGVmaW5lUHJvcGVydHk7dmFyIGU9KHQsYyk9Pm8odCxcIm5hbWVcIix7dmFsdWU6Yyxjb25maWd1cmFibGU6ITB9KTt2YXIgaT1PYmplY3QuZGVmaW5lUHJvcGVydHkscj1lKCh0LGMpPT5pKHQsXCJuYW1lXCIse3ZhbHVlOmMsY29uZmlndXJhYmxlOiEwfSksXCJlXCIpO2Z1bmN0aW9uIGEoKXtyZXR1cm57YWdlbnQ6dm9pZCAwLGRpc3BhdGNoZXI6dm9pZCAwfX1lKGEsXCJjcmVhdGVBZ2VudFwiKSxyKGEsXCJjcmVhdGVBZ2VudFwiKTtmdW5jdGlvbiBuKCl7cmV0dXJuIGdsb2JhbFRoaXMuZmV0Y2h9ZShuLFwiY3JlYXRlRmV0Y2hcIikscihuLFwiY3JlYXRlRmV0Y2hcIik7Y29uc3QgaD1nbG9iYWxUaGlzLmZldGNoO2V4cG9ydHthIGFzIGNyZWF0ZUFnZW50LG4gYXMgY3JlYXRlRmV0Y2gsaCBhcyBmZXRjaH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-fetch-native-with-agent/dist/agent-stub.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/node-fetch-native-with-agent/dist/native.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/node-fetch-native-with-agent/dist/native.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortController: () => (/* binding */ i),\n/* harmony export */   Blob: () => (/* binding */ e),\n/* harmony export */   File: () => (/* binding */ o),\n/* harmony export */   FormData: () => (/* binding */ a),\n/* harmony export */   Headers: () => (/* binding */ s),\n/* harmony export */   Request: () => (/* binding */ t),\n/* harmony export */   Response: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ l),\n/* harmony export */   fetch: () => (/* binding */ l)\n/* harmony export */ });\nconst e=globalThis.Blob,o=globalThis.File,a=globalThis.FormData,s=globalThis.Headers,t=globalThis.Request,h=globalThis.Response,i=globalThis.AbortController,l=globalThis.fetch||(()=>{throw new Error(\"[node-fetch-native] Failed to fetch: `globalThis.fetch` is not available!\")});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vZGUtZmV0Y2gtbmF0aXZlLXdpdGgtYWdlbnQvZGlzdC9uYXRpdmUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLHVMQUF1TCw2RkFBNkYsRUFBaUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vZGUtZmV0Y2gtbmF0aXZlLXdpdGgtYWdlbnQvZGlzdC9uYXRpdmUubWpzPzBmMTAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZT1nbG9iYWxUaGlzLkJsb2Isbz1nbG9iYWxUaGlzLkZpbGUsYT1nbG9iYWxUaGlzLkZvcm1EYXRhLHM9Z2xvYmFsVGhpcy5IZWFkZXJzLHQ9Z2xvYmFsVGhpcy5SZXF1ZXN0LGg9Z2xvYmFsVGhpcy5SZXNwb25zZSxpPWdsb2JhbFRoaXMuQWJvcnRDb250cm9sbGVyLGw9Z2xvYmFsVGhpcy5mZXRjaHx8KCgpPT57dGhyb3cgbmV3IEVycm9yKFwiW25vZGUtZmV0Y2gtbmF0aXZlXSBGYWlsZWQgdG8gZmV0Y2g6IGBnbG9iYWxUaGlzLmZldGNoYCBpcyBub3QgYXZhaWxhYmxlIVwiKX0pO2V4cG9ydHtpIGFzIEFib3J0Q29udHJvbGxlcixlIGFzIEJsb2IsbyBhcyBGaWxlLGEgYXMgRm9ybURhdGEscyBhcyBIZWFkZXJzLHQgYXMgUmVxdWVzdCxoIGFzIFJlc3BvbnNlLGwgYXMgZGVmYXVsdCxsIGFzIGZldGNofTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/node-fetch-native-with-agent/dist/native.mjs\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system%2Fsrc%2Fmiddleware.ts&page=%2Fsrc%2Fmiddleware&rootDir=%2Fhome%2Fabhimanyujangid%2FDesktop%2FUdemy%2Fqna_system&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES)["middleware_src/middleware"] = __webpack_exports__;
/******/ }
]);